{"version":3,"sources":["components/LoadingSpinner.tsx","components/Message.tsx","firebase/firebase.ts","actions/rooms.ts","components/ChatInput.tsx","actions/auth.ts","components/ProfileDialog.tsx","containers/AppHeader.tsx","utils/misc.ts","selectors/room.ts","containers/Room.tsx","components/CreateChatDialog.tsx","components/BrowseRoomsDialog.tsx","containers/App.tsx","reducers/rooms.ts","reducers/index.ts","reducers/auth.ts","reducers/redirect.ts","sagas/initSaga.ts","sagas/roomSagas.ts","sagas/rootSaga.ts","store/configureStore.ts","index.tsx"],"names":["LoadingWrapper","styled","div","_templateObject","LoadingSpinner","react_default","a","createElement","spin","size","MessageLayout","Message_templateObject","LeftPanel","_templateObject2","RightPanel","_templateObject3","MessageHeader","_templateObject4","Message","_ref","children","name","isConsecutive","avatar","shape","icon","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rsf","ReduxSagaFirebase","database","firestore","githubAuthProvider","auth","GithubAuthProvider","googleAuthProvider","GoogleAuthProvider","byCreatedAt","b","Date","createdAt","getTime","createRoom","id","people","_ref$messages","messages","type","room","showError","message","trySendMessage","text","roomId","status","arguments","length","undefined","dispatch","getState","user","sender","uid","displayName","moment","format","collection","concat","add","availableRooms","rooms","syncMessages","messagesSnapshot","forEach","doc","push","Object","objectSpread","data","sort","updateMessages","InputForm","form","ChatInput_templateObject","Input","input","ChatInput_templateObject2","SendButton","button","ChatInput_templateObject3","ChatInput","state","value","handleTyping","e","_this","setState","target","handleSend","preventDefault","props","onSubmit","this","onChange","Component","connect","tryLoginAnonymously","signInAnonymously","then","response","catch","error","console","log","code","TextArea","Typography","Text","Title","LoginProviders","ProfileDialog_templateObject","ProfileDialog","handleTryLogin","providerName","tryLoginProvider","handleClose","_this2","modal","title","visible","isOpen","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","level","row","col","span","es_button","onClick","style","margin","fontSize","provider","Promise","reject","signInWithPopup","Header","Layout","AccountButton","AppHeader_templateObject","TopRightMenu","AppHeader_templateObject2","AppHeader","profileOpen","handleProfileOpen","handleProfileClose","_this$props","photoURL","es_menu","Item","background","borderBottom","padding","display","flexDirection","alignItems","justifyContent","AppHeader_Title","paddingTop","marginRight","src","components_ProfileDialog","getProps","createSelector","ownProps","match","params","joined","values","isLoading","Content","ChatWrapper","Room_templateObject","Messages","Room_templateObject2","RoomContainer","messagesEnd","messagesContainer","scrollToBottom","scrollIntoView","behavior","prevProps","previousLastMessage","slice","currentLastMessage","_this$messagesContain","scrollHeight","scrollTop","clientHeight","offsetHeight","Math","abs","content","components_LoadingSpinner","ref","el","map","idx","components_Message","key","float","clear","components_ChatInput","react","containers_AppHeader","overflow","TextWrap","CreateChatDialog_templateObject","CreateChatDialog","roomName","description","handleChange","defineProperty","handleSubmit","_this$props$auth","userDisplayName","unread","lastRead","tryCreateRoom","CreateChatDialog_Text","CreateChatDialog_TextArea","rows","roomData","showCreateError","get","snapshot","find","r","roomRef","set","Label","BrowseRoomsDialog_templateObject","BrowseRoomsDialog","handleJoinRoom","canJoin","tryJoinRoom","bodyStyle","maxHeight","overflowY","list","dataSource","roomList","renderItem","item","Meta","avatarUrl","_state$rooms","available","Sider","LogoWrap","App_templateObject","Logo","img","App_templateObject2","RoomButtons","App_templateObject3","MenuButton","App_templateObject4","App","openDialog","handleCloseDialog","handleOpenDialog","dialogName","handleRoomSelect","history","initAuth","nextProps","initSlacker","location","joinedRooms","pathname","layout","height","position","left","components_CreateChatDialog","components_BrowseRoomsDialog","theme","mode","onSelect","selectedKeys","className","marginLeft","react_router","path","component","onAuthStateChanged","userData","email","loginSuccess","defaultState","reducers","combineReducers","action","reduce","acc","redirect","redirectTo","fetchRoomSaga","initSlackerSaga","mySaga","roomDoc","messagePage","newestMessage","regenerator_default","wrap","_context","prev","next","call","getDocument","sent","exists","getCollection","peopleDoc","orderBy","limit","messageDoc","put","fork","syncCollection","successActionCreator","stop","_marked","roomsPromise","roomsQuery","generalRoom","userRoomsQuery","userRoomIds","_i","_userRoomIds","_context2","select","abrupt","empty","userRoomDoc","includes","_marked2","_context3","takeLatest","_marked3","updateRoomPresences","joinRoom","joinRoomSaga","updateRoomPresencesSaga","objectWithoutProperties","t0","keys","t1","done","setDocument","roomSagas_marked","person","roomSagas_marked2","takeEvery","roomSagas_marked3","_context4","_marked4","roomSagas","rootSaga","all","initSaga","toConsumableArray","rootSaga_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","configureStore","jsx","es","react_router_dom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7fa3fcd.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Spin } from 'antd'\n\nconst LoadingWrapper = styled.div`\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst LoadingSpinner = () => (\n\t<LoadingWrapper>\n\t\t<Spin size=\"large\" />\n\t</LoadingWrapper>\n)\n\nexport default LoadingSpinner\n","import React, { FunctionComponent } from 'react'\nimport { Avatar } from 'antd'\nimport styled from 'styled-components'\n\nconst MessageLayout = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 2px;\n`\n\nconst LeftPanel = styled.div`\n\twidth: 46px;\n\tpadding: 5px;\n`\n\n// const Avatar = styled.div`\n// \t/* width: 35px;\n// \theight: 35px;\n// \tmargin: 5px;\n// \tborder-radius: 2px;\n// \tbackground-color: #cecece;\n// ` */\n\nconst RightPanel = styled.div`\n\tcolor: black;\n`\n\nconst MessageHeader = styled.div`\n\tcolor: black;\n\tfont-weight: bold;\n\tmargin-top: 2px;\n`\n\ninterface Props {\n\tname: string\n\tisConsecutive?: boolean\n}\n\nconst Message: FunctionComponent<Props> = ({\n\tchildren,\n\tname,\n\tisConsecutive,\n}) => {\n\tif (isConsecutive) {\n\t\treturn (\n\t\t\t<MessageLayout>\n\t\t\t\t<LeftPanel />\n\t\t\t\t<RightPanel>{children}</RightPanel>\n\t\t\t</MessageLayout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<MessageLayout>\n\t\t\t<LeftPanel>\n\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\n\t\t\t</LeftPanel>\n\t\t\t<RightPanel>\n\t\t\t\t<MessageHeader>{name}</MessageHeader>\n\t\t\t\t{children}\n\t\t\t</RightPanel>\n\t\t</MessageLayout>\n\t)\n}\n\nexport default Message\n","import firebase from 'firebase'\nimport '@firebase/firestore' // 👈 Don't forget this!\nimport ReduxSagaFirebase from 'redux-saga-firebase'\nconst config = {\n\tapiKey: 'AIzaSyB2tCxT6yP0CWtCbD9JDj3ZKaxxW8T25PI',\n\tauthDomain: 'slacker-c3b01.firebaseapp.com',\n\tdatabaseURL: 'https://slacker-c3b01.firebaseio.com',\n\tprojectId: 'slacker-c3b01',\n\tstorageBucket: 'slacker-c3b01.appspot.com',\n\tmessagingSenderId: '286218247810',\n}\nconst firebaseApp = firebase.initializeApp(config)\nconst rsf = new ReduxSagaFirebase(firebaseApp)\nconst database = firebase.firestore()\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nconst auth = firebase.auth()\n\nexport {\n\tfirebase,\n\trsf,\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n\tdatabase as default,\n}\n","import database, { firebase } from '../firebase/firebase'\nimport moment from 'moment'\n// import { ipcRenderer } from 'electron';\n\nconst byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}\n\nexport interface RoomData {\n\tid?: string\n\tname: string\n\tpeople: any\n\tmessages?: any\n}\n\nexport const createRoom = ({ id, name, people, messages = [] }: RoomData) => ({\n\ttype: 'CREATE_ROOM',\n\troom: {\n\t\tid,\n\t\tname,\n\t\tpeople,\n\t\tmessages,\n\t},\n})\n\nexport const joinedRoom = (joinedRoom: RoomItem) => ({\n\ttype: 'JOINED_ROOM',\n\tjoinedRoom,\n})\n\nexport const tryJoinRoom = (roomId: string) => ({\n\ttype: 'JOIN_ROOM_SAGA',\n\troomId\n})\n\nexport const tryCreateRoom = (roomData: RoomData, showCreateError: any) => {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\tconst room = {\n\t\t\tname: roomData.name,\n\t\t}\n\t\t// get all rooms\n\t\treturn database\n\t\t\t.collection('rooms')\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst rooms: Room[] = []\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\tconsole.log(doc)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst room: Room = doc.data()\n\t\t\t\t\trooms.push({\n\t\t\t\t\t\t...room,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// if no room with this name\n\t\t\t\tif (!rooms.find(r => r.name === room.name)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t.collection('rooms')\n\t\t\t\t\t\t\t.add(room)\n\t\t\t\t\t\t\t// create this room and\n\t\t\t\t\t\t\t.then(roomRef => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t.collection(`rooms/${roomRef.id}/people`)\n\t\t\t\t\t\t\t\t\t\t.doc(roomData.people.id)\n\t\t\t\t\t\t\t\t\t\t// assign people to it?\n\t\t\t\t\t\t\t\t\t\t.set(roomData.people)\n\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t\t\t.collection(`users/${roomData.people.id}/rooms`)\n\t\t\t\t\t\t\t\t\t\t\t\t.doc(roomRef.id)\n\t\t\t\t\t\t\t\t\t\t\t\t.set({ roomName: room.name })\n\n\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\tcreateRoom({\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: roomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t...roomData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpeople: [roomData.people],\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\tconst perName = roomData.people.name\n\t\t\t\t\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t\t\t\t\t// \tstartSendMessage(\n\t\t\t\t\t\t\t\t\t\t\t// \t\t`${perName} created this room`,\n\t\t\t\t\t\t\t\t\t\t\t// \t\troom.name,\n\t\t\t\t\t\t\t\t\t\t\t// \t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t// \t),\n\t\t\t\t\t\t\t\t\t\t\t// ).then(() => {\n\t\t\t\t\t\t\t\t\t\t\t// \tdispatch(startListening(room.name))\n\t\t\t\t\t\t\t\t\t\t\t// \t// history.push(`/room/${room.name}`);\n\t\t\t\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn showCreateError('Room name not available!')\n\t\t\t\t}\n\t\t\t})\n\t}\n}\n\nconst isAlreadyAdded = (data: any, id: string) => {\n\tfor (var key in data) {\n\t\tif (data[key].id === id) return true\n\t}\n\treturn false\n}\n\nexport const showError = (message: string) => ({\n\ttype: 'ERROR_MESSAGE',\n\tmessage,\n})\n\n// export const sendMessage = (message: any, roomId: string) => ({\n// \ttype: 'SEND_MESSAGE',\n// \tmessage,\n// \troomId,\n// })\n\nexport const updateMessages = (messages: any, roomId: string) => ({\n\ttype: 'UPDATE_MESSAGES',\n\tmessages,\n\troomId,\n})\n\nexport const trySendMessage = (\n\ttext: string,\n\troomId: string,\n\tstatus: boolean = false,\n) => {\n\treturn (dispatch: any, getState: any) => {\n\t\tconst user = getState().auth\n\t\tif (user) {\n\t\t\tconst uid = user.uid\n\t\t\tconst displayName = user.displayName\n\t\t\tconst message = {\n\t\t\t\tsender: { uid, displayName },\n\t\t\t\ttext,\n\t\t\t\tcreatedAt: moment().format(),\n\t\t\t\tstatus,\n\t\t\t}\n\t\t\treturn database.collection(`rooms/${roomId}/messages`).add(message)\n\t\t}\n\t}\n}\n\nexport const orderRoomsStartState = () => ({\n\ttype: 'ORDER_ROOMS_START_STATE',\n})\n\nexport const availableRooms = (rooms: RoomItem[]) => ({\n\ttype: 'AVAILABLE_ROOMS',\n\trooms,\n})\n\nexport const initSlacker = () => ({\n\ttype: 'INIT_SLACKER_SAGA',\n})\n\nexport const clearState = {\n\ttype: 'CLEAR_STATE',\n}\n\nexport const leaveRoom = (roomName: string, userId: string) => ({\n\ttype: 'LEAVE_ROOM',\n\troomName,\n\tuserId,\n})\n\n// export const startLeaveRoom = (roomName: string) => {\n// \treturn (dispatch: any, getState: any) => {\n// \t\tconst user = getState().auth\n// \t\tif (user) {\n// \t\t\tconst userId = user.uid\n// \t\t\tconst displayName = user.displayName\n// \t\t\tdatabase.ref(`rooms/${roomName}/people/${userId}`).remove()\n// \t\t\tdatabase.ref(`users/${userId}/rooms/${roomName}`).remove(() => {\n// \t\t\t\tdispatch(leaveRoom(roomName, userId))\n// \t\t\t\tdispatch(startSendMessage(`${displayName} left`, roomName, true))\n// \t\t\t\t// history.push(\"/join\");\n// \t\t\t})\n// \t\t}\n// \t}\n// }\n\nexport const clearUnread = (\n\troomName: string,\n\tuid: string,\n\ttime: any,\n\tunread: number,\n) => ({\n\ttype: 'CLEAR_UNREAD',\n\troomName,\n\tuid,\n\ttime,\n\tunread,\n})\n\nexport const setUnread = (\n\troomName: string,\n\tuid: string,\n\ttime: any,\n\tunread: number,\n) => {\n\treturn (dispatch: any) => {\n\t\tdispatch(clearUnread(roomName, uid, time, unread))\n\t}\n}\n\n// export const startClearUnread = (roomName: string) => {\n// \treturn (dispatch: any, getState: any) => {\n// \t\t// let time = moment().endOf(\"month\");\n// \t\tconst uid = getState().auth.uid\n// \t\tif (uid) {\n// \t\t\tconst time = moment().format()\n// \t\t\treturn database\n// \t\t\t\t.ref(`rooms/${roomName}/people/${uid}`)\n// \t\t\t\t.update({\n// \t\t\t\t\tunread: 0,\n// \t\t\t\t\tlastRead: time,\n// \t\t\t\t})\n// \t\t\t\t.then(() => {\n// \t\t\t\t\tdispatch(clearUnread(roomName, uid, time, 0))\n// \t\t\t\t})\n// \t\t}\n// \t}\n// }\n\nexport const onLeft = (roomName: string, personID: string) => ({\n\ttype: 'ON_LEFT',\n\troomName,\n\tpersonID,\n})\n\nexport const onJoined = (roomName: string, person: any) => ({\n\ttype: 'ON_JOINED',\n\troomName,\n\tperson,\n})\n\nexport const syncMessages = (messagesSnapshot: any, roomId: string) => {\n\tconst messages: any[] = []\n\tmessagesSnapshot.forEach((doc: any) => {\n\t\tmessages.push({ id: doc.id, ...doc.data() })\n\t})\n\n\tmessages.sort(byCreatedAt)\n\treturn updateMessages(messages, roomId)\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { trySendMessage } from '../actions/rooms'\n\nconst InputForm = styled.form`\n\theight: 44px;\n\tbackground-color: #fff;\n\tborder-radius: 4px;\n\tborder: 1px solid #acacac;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-shrink: 0;\n`\n\nconst Input = styled.input`\n\tpadding-left: 14px;\n\tborder: none;\n\tborder-radius: 4px;\n\tflex-grow: 1;\n\toutline: none;\n`\n\nconst SendButton = styled.button`\n\tflex-shrink: 0;\n\tpadding: 0px 15px;\n\tbackground: none;\n\tborder: none;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\ttrySendMessage: (text: string, roomId: string) => void\n}\n\ninterface State {\n\tvalue: string\n}\n\nclass ChatInput extends Component<Props, State> {\n\tstate = {\n\t\tvalue: '',\n\t}\n\n\thandleTyping = (e: any) => {\n\t\tthis.setState({ value: e.target.value })\n\t}\n\n\thandleSend = (e: any) => {\n\t\te.preventDefault()\n\t\tconst { room } = this.props\n\t\tconst text = this.state.value\n\t\tif (!!room && !!room.id && text.length > 0) {\n\t\t\tthis.props.trySendMessage(text, room.id)\n\t\t\tthis.setState({\n\t\t\t\tvalue: '',\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<InputForm onSubmit={this.handleSend}>\n\t\t\t\t<Input value={this.state.value} onChange={this.handleTyping} />\n\t\t\t\t<SendButton type={'submit'}>Send</SendButton>\n\t\t\t</InputForm>\n\t\t)\n\t}\n}\n\nexport default connect(\n\tnull,\n\t{ trySendMessage },\n)(ChatInput)\n","import {\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n} from '../firebase/firebase'\n\nexport const loginSuccess = (uid: string, userData: any) => ({\n\ttype: 'LOGIN',\n\tuid,\n\tuserData,\n})\n\nexport const initAuth = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth.onAuthStateChanged(user => {\n\t\t\tif (user) {\n\t\t\t\t// user authenticated, update redux\n\t\t\t\tif (user) {\n\t\t\t\t\tconst userData = {\n\t\t\t\t\t\tdisplayName: user.displayName || 'Ninja',\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\tphotoURL: user.photoURL,\n\t\t\t\t\t}\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, userData))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// no saved user, create shadow\n\t\t\t\ttryLoginAnonymously()(dispatch)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const tryLoginAnonymously = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth\n\t\t\t.signInAnonymously()\n\t\t\t.then(response => {\n\t\t\t\t// console.log(response);\n\t\t\t\tconst { user } = response\n\n\t\t\t\t// if (user) {\n\t\t\t\t// \tconst displayName = user.displayName || 'Ninja'\n\t\t\t\t// \treturn dispatch(loginSuccess(user.uid, displayName))\n\t\t\t\t// }\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\t\t\t\t// Handle Errors here.\n\t\t\t\tvar errorCode = error.code\n\t\t\t\tvar errorMessage = error.message\n\t\t\t\t// ...\n\t\t\t})\n\t}\n}\n\nexport const tryLoginProvider = (providerName: string) => {\n\treturn (dispatch: any) => {\n\t\t// pick login provider\n\t\tlet provider = null\n\t\tif (providerName === 'github') {\n\t\t\tprovider = githubAuthProvider\n\t\t} else if (providerName === 'google') {\n\t\t\tprovider = googleAuthProvider\n\t\t} else {\n\t\t\treturn Promise.reject('Invalid auth provider')\n\t\t}\n\n\t\t// TODO check if user exits maybe?\n\n\t\treturn auth\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then(response => {\n\t\t\t\tconst { user } = response\n\n\t\t\t\tconsole.log({ user })\n\n\t\t\t\t// go through user rooms and update people collection with name and picture?\n\n\t\t\t\tif (user) {\n\t\t\t\t\treturn dispatch({\n\t\t\t\t\t\ttype: 'UPDATE_USER_ROOM_PRESENCE'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\t\t\t\t// Handle Errors here.\n\t\t\t\tvar errorCode = error.code\n\t\t\t\tvar errorMessage = error.message\n\t\t\t\t// ...\n\t\t\t})\n\t}\n}\n\nexport const logout = () => ({\n\ttype: 'LOGOUT',\n})\n\nexport const tryLogout = () => {\n\treturn () => {\n\t\treturn auth.signOut().then(() => {\n\t\t\tconsole.log('log out!!!')\n\t\t})\n\t}\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Input, Typography, Row, Col, Icon, Button } from 'antd'\nimport { tryLoginProvider } from '../actions/auth'\nconst { TextArea } = Input\nconst { Text, Title } = Typography\n\nconst LoginProviders = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryLoginProvider: (providerName: string) => Promise<any>\n\tauth: Auth\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass ProfileDialog extends Component<Props, State> {\n\thandleTryLogin = (providerName: string) => {\n\t\tthis.props.tryLoginProvider(providerName).then(() => {\n\t\t\tthis.props.handleClose()\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Profile\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<Title level={4}>Login with</Title>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<LoginProviders>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => this.handleTryLogin('github')}\n\t\t\t\t\t\t\t\t\tstyle={{ margin: 5 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"github\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={() => this.handleTryLogin('google')}>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"google\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</LoginProviders>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryLoginProvider },\n)(ProfileDialog)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Layout, Typography, Avatar, Menu, Dropdown, Icon, Button } from 'antd'\n\nimport ProfileDialog from '../components/ProfileDialog'\n\nconst { Header } = Layout\nconst { Title } = Typography\n\nconst AccountButton = styled.button`\n\tbackground: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 4px;\n\ttransition: border 0.5s;\n\toutline: none;\n\tpadding: 0px;\n\tline-height: normal;\n\tcursor: pointer;\n`\n\nconst TopRightMenu = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n`\n\ninterface Props {\n\troom?: RoomItem\n\tuid?: string\n\tphotoURL?: string\n}\n\ninterface State {\n\tprofileOpen: boolean\n}\n\nclass AppHeader extends Component<Props, State> {\n\tstate = {\n\t\tprofileOpen: false,\n\t}\n\n\thandleProfileOpen = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: true,\n\t\t})\n\t}\n\n\thandleProfileClose = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: false,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { room, uid, photoURL } = this.props\n\t\t// TODO plan what is in here\n\t\tconst menu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item onClick={this.handleProfileOpen}>\n\t\t\t\t\t<a>Profile</a>\n\t\t\t\t</Menu.Item>\n\t\t\t\t{/* <Menu.Item>\n\t\t\t\t\t<a>2nd menu item</a>\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<a>3rd menu item</a>\n\t\t\t\t</Menu.Item> */}\n\t\t\t</Menu>\n\t\t)\n\t\treturn (\n\t\t\t<Header\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\tborderBottom: '1px solid #acacac',\n\t\t\t\t\tpadding: 16,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Title style={{ margin: 0 }} level={3}>\n\t\t\t\t\t# {room ? room.name : ''}\n\t\t\t\t</Title>\n\t\t\t\t{!!uid && (\n\t\t\t\t\t<TopRightMenu>\n\t\t\t\t\t\t<Button shape=\"circle\" style={{ paddingTop: 1, marginRight: 10 }}>\n\t\t\t\t\t\t\t<Icon type=\"setting\" />\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<AccountButton onClick={this.handleProfileOpen}>\n\t\t\t\t\t\t\t<Avatar src={photoURL} size={35} shape=\"square\" />\n\t\t\t\t\t\t</AccountButton>\n\t\t\t\t\t\t<ProfileDialog\n\t\t\t\t\t\t\tisOpen={this.state.profileOpen}\n\t\t\t\t\t\t\thandleClose={this.handleProfileClose}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TopRightMenu>\n\t\t\t\t)}\n\t\t\t</Header>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { auth } = state\n\treturn {\n\t\tuid: auth.uid,\n\t\tphotoURL: auth.photoURL,\n\t}\n}\n\nexport default connect(mapStateToProps)(AppHeader)\n","export const byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}","import { createSelector } from 'reselect'\nimport { byCreatedAt } from '../utils/misc'\n\nconst getAuth = (state: StoreState) => state.auth\n\nconst getRoom = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\treturn state.rooms.joined[roomId]\n}\n\nconst getRoomMessages = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\tconst room = state.rooms.joined[roomId]\n\treturn room ? Object.values(room.messages).sort(byCreatedAt) : []\n}\n\nconst getProps = createSelector(\n\tgetRoom,\n\tgetRoomMessages,\n\tgetAuth,\n\t(room, messages, auth) => {\n\t\treturn {\n\t\t\tauth,\n\t\t\troom,\n\t\t\tmessages,\n\t\t\tisLoading: !room,\n\t\t}\n\t},\n)\n\nexport default getProps\n","import React, { Fragment, Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Layout, Typography } from 'antd'\n\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport Message from '../components/Message'\nimport ChatInput from '../components/ChatInput'\nimport AppHeader from './AppHeader'\n\nimport { trySendMessage } from '../actions/rooms'\nimport getProps from '../selectors/room'\n\nconst { Content } = Layout\n\nconst ChatWrapper = styled.div`\n\t/* height: 100%; */\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n`\n\nconst Messages = styled.div`\n\tpadding-top: 8px;\n\tpadding-bottom: 8px;\n\tflex-grow: 1;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n`\n\ninterface Props {\n\tauth: Auth\n\troom: RoomItem | undefined\n\tmatch: any\n\tisLoading: boolean\n\tmessages: Message[]\n\ttrySendMessage: (text: string, roomId: string, status?: boolean) => void\n}\n\nclass RoomContainer extends Component<Props> {\n\tmessagesEnd: any = null\n\tmessagesContainer: HTMLElement | null = null\n\n\tcomponentWillMount() {\n\t\tconst { roomId } = this.props.match.params\n\t\tconsole.log(roomId)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.scrollToBottom()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\t// scroll management\n\t\tif (prevProps.messages.length === 0 && this.props.messages.length > 0) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.room &&\n\t\t\tthis.props.room &&\n\t\t\tprevProps.room.id !== this.props.room.id\n\t\t) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.messages.length !== this.props.messages.length &&\n\t\t\tprevProps.messages.length > 0 &&\n\t\t\tthis.props.messages.length > 0\n\t\t) {\n\t\t\tconst previousLastMessage = prevProps.messages.slice(-1)[0]\n\t\t\tconst currentLastMessage = this.props.messages.slice(-1)[0]\n\t\t\tif (\n\t\t\t\tpreviousLastMessage.id !== currentLastMessage.id &&\n\t\t\t\t!!currentLastMessage &&\n\t\t\t\tcurrentLastMessage.sender.uid === this.props.auth.uid\n\t\t\t) {\n\t\t\t\t// last message was ours, scroll to the bottom\n\t\t\t\tthis.scrollToBottom()\n\t\t\t} else if (this.messagesContainer) {\n\t\t\t\t// last message is not ours, lets check scroll\n\t\t\t\tconst {\n\t\t\t\t\tscrollHeight,\n\t\t\t\t\tscrollTop,\n\t\t\t\t\toffsetHeight,\n\t\t\t\t\tclientHeight,\n\t\t\t\t} = this.messagesContainer\n\t\t\t\tconst calculato = scrollHeight - scrollTop === clientHeight\n\n\t\t\t\t// if our scroll is around bottom 2 messages, scroll to bottom pls\n\t\t\t\tif (Math.abs(clientHeight - (scrollHeight - scrollTop - 45)) < 45) {\n\t\t\t\t\tthis.scrollToBottom()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tscrollToBottom = () => {\n\t\tif (this.messagesEnd) {\n\t\t\tthis.messagesEnd.scrollIntoView({ behavior: 'auto' })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { room, messages, isLoading } = this.props\n\t\tlet content = <LoadingSpinner />\n\t\tif (!isLoading) {\n\t\t\tcontent = (\n\t\t\t\t<ChatWrapper>\n\t\t\t\t\t<Messages\n\t\t\t\t\t\tref={el => {\n\t\t\t\t\t\t\tthis.messagesContainer = el\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{messages.map((message, idx) => (\n\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\tisConsecutive={\n\t\t\t\t\t\t\t\t\t!!messages[idx - 1] &&\n\t\t\t\t\t\t\t\t\tmessages[idx - 1].sender.uid === message.sender.uid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={message.sender.displayName || ''}\n\t\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{message.text}\n\t\t\t\t\t\t\t</Message>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ float: 'left', clear: 'both' }}\n\t\t\t\t\t\t\tref={el => {\n\t\t\t\t\t\t\t\tthis.messagesEnd = el\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Messages>\n\t\t\t\t\t<ChatInput room={this.props.room} />\n\t\t\t\t</ChatWrapper>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<AppHeader room={room} />\n\t\t\t\t<Content\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: '0px 16px 24px 16px',\n\t\t\t\t\t\toverflow: 'initial',\n\t\t\t\t\t\tdisplay: 'flex'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{content}\n\t\t\t\t</Content>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: any) =>\n\tgetProps(state, ownProps)\nexport default connect(\n\tmapStateToProps,\n\t{ trySendMessage },\n)(RoomContainer)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Input, Typography } from 'antd'\nimport { tryCreateRoom, RoomData } from '../actions/rooms'\n\nconst { TextArea } = Input\nconst { Text } = Typography\n\nconst TextWrap = styled.div`\n\tmargin-top: 5px;\n\tmargin-bottom: 5px;\n`\n\ninterface Props {\n\tisOpen: boolean;\n\thandleClose: () => void;\n\ttryCreateRoom: (roomData: RoomData, showCreateError?: any) => Promise<any>;\n\tauth: Auth;\n}\n\ninterface State {\n\troomName: string;\n\tdescription: string;\n}\n\nclass CreateChatDialog extends Component<Props, State> {\n\tstate = {\n\t\troomName: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = (e: any) => {\n\t\tconsole.log(e.target.name)\n\t\t// @ts-ignore\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\thandleSubmit = () => {\n\t\tconst { uid, displayName: userDisplayName } = this.props.auth\n\t\tif (uid) {\n\t\t\tconsole.log('Create this room pls')\n\t\t\tconst roomName = this.state.roomName\n\t\t\tif (roomName && roomName.length > 0) {\n\t\t\t\t// this.setState({ error: '' })\n\t\t\t\tconst room = {\n\t\t\t\t\tname: roomName,\n\t\t\t\t\tpeople: {\n\t\t\t\t\t\tid: uid,\n\t\t\t\t\t\tname: userDisplayName,\n\t\t\t\t\t\tunread: 0,\n\t\t\t\t\t\tlastRead: 0,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tthis.props.tryCreateRoom(room)\n\t\t\t\tthis.props.handleClose()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Create Room\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.handleSubmit}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Name:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"roomName\"\n\t\t\t\t\tvalue={this.state.roomName}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Description:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<TextArea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trows={4}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryCreateRoom },\n)(CreateChatDialog)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, List, Avatar, Button } from 'antd'\n\nimport { tryJoinRoom } from '../actions/rooms'\n\nconst Label = styled.div`\n\tpadding: 10px;\n`\n\ninterface RoomWithAvailability extends RoomItem {\n\tcanJoin: boolean\n}\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryJoinRoom: (roomId: string) => void\n\tauth: Auth\n\troomList: Array<RoomWithAvailability>\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass BrowseRoomsDialog extends Component<Props, State> {\n\thandleJoinRoom = (room: RoomWithAvailability) => {\n\t\tif (!room.canJoin) {\n\t\t\tconsole.log('redirect to that room')\n\t\t\tthis.props.handleClose()\n\t\t\treturn\n\t\t}\n\n\t\tthis.props.tryJoinRoom(room.id)\n\t\t// this.props.handleClose()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Browse Rooms\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tbodyStyle={{ maxHeight: 450, overflowY: 'scroll' }}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tdataSource={this.props.roomList}\n\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t<List.Item key={item.id}>\n\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\tavatar={item.avatarUrl ? <Avatar src={item.avatarUrl} /> : null}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<a onClick={() => this.handleJoinRoom(item)}>{item.name}</a>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdescription={'TODO room descriptions'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item.canJoin ? (\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Label>joined</Label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t</List>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { available, joined } = state.rooms\n\tconst roomList = Object.values(available).map(room => {\n\t\tconst canJoin =\n\t\t\tObject.values(joined).find(item => item.id === room.id) === undefined\n\t\treturn {\n\t\t\t...room,\n\t\t\tcanJoin,\n\t\t}\n\t})\n\treturn {\n\t\troomList,\n\t\tauth: state.auth,\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryJoinRoom },\n)(BrowseRoomsDialog)\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Icon } from 'antd'\n\nimport RoomContainer from './Room'\nimport CreateChatDialog from '../components/CreateChatDialog'\nimport BrowseRoomsDialog from '../components/BrowseRoomsDialog'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\nimport { initAuth } from '../actions/auth'\nimport { initSlacker } from '../actions/rooms'\n\nimport '../styles/index.css'\n\nconst { Sider } = Layout\n// const { Text } = Typography\n\nconst LogoWrap = styled.div`\n\ttext-align: center;\n\tpadding: 10px;\n\theight: 64px;\n\tborder-bottom: 1px solid grey;\n`\n\nconst Logo = styled.img`\n\theight: 100%;\n`\n\nconst RoomButtons = styled.div`\n\tpadding: 10px;\n\tcolor: rgba(255, 255, 255, 0.65);\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`\n\nconst MenuButton = styled.button`\n\tfont-size: 16px;\n\tbackground: none;\n\tborder: none;\n\t-webkit-transition: color 0.5s;\n\ttransition: color 0.5s;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: #fff;\n\t}\n`\n\ninterface Props {\n\tinitAuth: () => void\n\tinitSlacker: () => void\n\tauth: Auth\n\tjoinedRooms: RoomItem[]\n\tavailableRooms: RoomItem[]\n\thistory: any\n\tlocation: {\n\t\tpathname: any\n\t}\n}\n\ninterface State {\n\topenDialog: string | false\n}\n\nclass App extends Component<Props, State> {\n\tstate: State = {\n\t\topenDialog: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initAuth()\n\t}\n\n\tcomponentWillUpdate(nextProps: Props) {\n\t\tif (!this.props.auth.uid && nextProps.auth.uid) {\n\t\t\tthis.props.initSlacker()\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\tconst { location, joinedRooms, history } = this.props\n\t\tif (\n\t\t\tlocation.pathname === '/' &&\n\t\t\tprevProps.joinedRooms.length === 0 &&\n\t\t\tjoinedRooms.length !== 0\n\t\t) {\n\t\t\tconsole.log('redirect to first room?')\n\t\t\thistory.push(`/r/${joinedRooms[0].id}`)\n\t\t}\n\t}\n\n\thandleCloseDialog = () => {\n\t\tthis.setState({\n\t\t\topenDialog: false,\n\t\t})\n\t}\n\n\thandleOpenDialog = (dialogName: string) => {\n\t\tthis.setState({\n\t\t\topenDialog: dialogName,\n\t\t})\n\t}\n\n\thandleRoomSelect = ({ key }: { key: string }) => {\n\t\tthis.props.history.push(key)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout style={{ height: '100%' }}>\n\t\t\t\t<Sider\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\theight: '100vh',\n\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<LogoWrap>\n\t\t\t\t\t\t<Logo src=\"fox.png\" />\n\t\t\t\t\t</LogoWrap>\n\n\t\t\t\t\t<RoomButtons>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('browseRooms')}>\n\t\t\t\t\t\t\t<span>Rooms:</span>\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('createRoom')}>\n\t\t\t\t\t\t\t<Icon type=\"plus-circle\" />\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t</RoomButtons>\n\t\t\t\t\t<CreateChatDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'createRoom'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<BrowseRoomsDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'browseRooms'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\t\tonSelect={this.handleRoomSelect}\n\t\t\t\t\t\tselectedKeys={[this.props.location.pathname]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.joinedRooms.map(room => (\n\t\t\t\t\t\t\t<Menu.Item key={`/r/${room.id}`}>\n\t\t\t\t\t\t\t\t<span className=\"nav-text\"># {room.name}</span>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout style={{ marginLeft: 200, background: '#fff' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={'/r/:roomId'} component={RoomContainer} />\n\t\t\t\t\t\t<Route path={'/'}>\n\t\t\t\t\t\t\t{this.props.joinedRooms.length === 0 ? (\n\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>No chat selected</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n\tauth: state.auth,\n\tjoinedRooms: Object.values(state.rooms.joined),\n\tavailableRooms: Object.values(state.rooms.available),\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ initAuth, initSlacker },\n)(App)\n","import moment from 'moment'\ninterface RoomsState {\n\tjoined: {\n\t\t[key: string]: RoomItem\n\t}\n\tavailable: {\n\t\t[key: string]: RoomItem\n\t}\n}\n\nconst defaultState: RoomsState = {\n\tjoined: {},\n\tavailable: {},\n}\n\nexport default (state: RoomsState = defaultState, action: any) => {\n\tswitch (action.type) {\n\t\tcase 'CREATE_ROOM':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: { ...state.joined, [action.room.id]: action.room },\n\t\t\t}\n\t\tcase 'JOINED_ROOM':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: { ...state.joined, [action.room.id]: action.room },\n\t\t\t}\n\n\t\tcase 'AVAILABLE_ROOMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tavailable: {\n\t\t\t\t\t...action.rooms.reduce(\n\t\t\t\t\t\t(acc: any, value: RoomItem) => ({\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t[value.id]: value,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t{},\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t}\n\n\t\tcase 'SEND_MESSAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: {\n\t\t\t\t\t...state.joined,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...[state.joined[action.roomId]],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.joined[action.roomId].messages,\n\t\t\t\t\t\t\t[action.message.id]: action.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tcase 'UPDATE_MESSAGES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: {\n\t\t\t\t\t...state.joined,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...state.joined[action.roomId],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.joined[action.roomId].messages,\n\t\t\t\t\t\t\t...action.messages.reduce(\n\t\t\t\t\t\t\t\t(acc: any, message: Message) => ({\n\t\t\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t\t\t[message.id]: message,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\n\t\t// case 'CLEAR_UNREAD':\n\t\t// \treturn state.map(room => {\n\t\t// \t\tif (room.name === action.roomName) {\n\t\t// \t\t\tconst people = room.people.map((person: Person) => {\n\t\t// \t\t\t\tif (person.id === action.uid) {\n\t\t// \t\t\t\t\treturn {\n\t\t// \t\t\t\t\t\t...person,\n\t\t// \t\t\t\t\t\tunread: action.unread,\n\t\t// \t\t\t\t\t\tlastRead: action.time,\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t} else {\n\t\t// \t\t\t\t\treturn person\n\t\t// \t\t\t\t}\n\t\t// \t\t\t})\n\t\t// \t\t\treturn { ...room, people }\n\t\t// \t\t} else {\n\t\t// \t\t\treturn room\n\t\t// \t\t}\n\t\t// \t})\n\n\t\t// case 'LEAVE_ROOM':\n\t\t// \treturn state.filter(room => {\n\t\t// \t\treturn room.name !== action.roomName\n\t\t// \t})\n\t\t// case 'CLEAR_STATE':\n\t\t// \treturn []\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import authReducer from '../reducers/auth'\nimport roomsReducer from '../reducers/rooms'\nimport redirectReducer from '../reducers/redirect'\nimport { combineReducers } from 'redux'\n\nconst reducers = combineReducers({\n\tauth: authReducer,\n\trooms: roomsReducer,\n\tredirect: redirectReducer,\n})\n\nexport default reducers\n","export default (state = {}, action: any) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        uid: action.uid,\n        ...action.userData,\n      };\n    case \"LOGOUT\":\n      return {};\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action: any) => {\n\tswitch (action.type) {\n\t\tcase 'REDIRECT_TO':\n\t\t\treturn {\n\t\t\t\tredirectTo: action.redirectTo,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { put, select, takeLatest, fork, call } from 'redux-saga/effects'\nimport database, { firebase, rsf } from '../firebase/firebase'\nimport { availableRooms, createRoom, syncMessages } from '../actions/rooms'\n\nimport { Query, CollectionReference } from '@firebase/firestore-types'\n\nconst byCreatedAt = function(a: any, b: any) {\n\t// @ts-ignore\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\n}\n\nexport function* fetchRoomSaga(roomId: string) {\n\tconsole.log('try fetch room ', roomId)\n\t// fetch joined room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\t// if we have such room\n\tif (roomDoc.exists) {\n\t\tconst room = roomDoc.data()\n\t\tconst people: any[] = []\n\t\tconst messages: any = {}\n\n\t\t// get room's people\n\t\tconst peopleQuery = yield call(\n\t\t\trsf.firestore.getCollection,\n\t\t\troomRef.collection('people'),\n\t\t)\n\t\tpeopleQuery.forEach((peopleDoc: any) => {\n\t\t\tpeople.push({ id: peopleDoc.id, ...peopleDoc.data() })\n\t\t})\n\t\tconsole.log({ people })\n\n\t\t// get room's messages first page\n\t\tconst messagePage = <CollectionReference>roomRef\n\t\t\t.collection('messages')\n\t\t\t.orderBy('createdAt', 'desc')\n\t\t\t.limit(25)\n\t\tconst messagesQuery = yield call(rsf.firestore.getCollection, messagePage)\n\n\t\tmessagesQuery.forEach((messageDoc: any) => {\n\t\t\tmessages[messageDoc.id] = { id: messageDoc.id, ...messageDoc.data() }\n\t\t})\n\t\t// messages.sort(byCreatedAt)\n\n\t\tyield put(\n\t\t\tcreateRoom({\n\t\t\t\tid: roomRef.id,\n\t\t\t\tname: room ? room.name : 'Error',\n\t\t\t\tpeople,\n\t\t\t\tmessages,\n\t\t\t}),\n\t\t)\n\n\t\t// subscribe to messages\n\t\tconst newestMessage = <CollectionReference>roomRef\n\t\t\t.collection('messages')\n\t\t\t.orderBy('createdAt', 'desc')\n\t\t\t.limit(1)\n\n\t\t// TODO merge this with other messages to save on reads\n\t\tyield fork(rsf.firestore.syncCollection, newestMessage, {\n\t\t\tsuccessActionCreator: (snapshot: any) => syncMessages(snapshot, roomId),\n\t\t})\n\t}\n}\n\n// worker Saga\nfunction* initSlackerSaga(action: any) {\n\tconst auth = yield select(state => state.auth)\n\n\tif (!auth.uid) {\n\t\tconsole.log('no auth!')\n\t\treturn\n\t}\n\n\t// fetch all rooms\n\tconst roomsPromise = database.collection('rooms').get()\n\n\tconst roomsQuery: firebase.firestore.QuerySnapshot = yield roomsPromise\n\tconst rooms: RoomItem[] = []\n\troomsQuery.forEach(doc => {\n\t\tconst room = {\n\t\t\tid: doc.id,\n\t\t\t...doc.data(),\n\t\t}\n\t\t// @ts-ignore\n\t\trooms.push(room)\n\t})\n\n\tyield put(availableRooms(rooms))\n\tconst generalRoom = rooms.find(room => room.name === 'general')\n\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) =>\n\t\t\tuserRoomIds.push(userRoomDoc.id),\n\t\t)\n\n\t\t// fetch each joined room\n\t\tfor (let roomId of userRoomIds) {\n\t\t\tconst task = yield fork(fetchRoomSaga, roomId)\n\t\t}\n\n\t\t// if no general room, join that as well\n\t\tif (generalRoom && !userRoomIds.includes(generalRoom.id)) {\n\t\t\tyield put({\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t} else {\n\t\tif (generalRoom) {\n\t\t\tyield put({\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t}\n}\n\nfunction* mySaga() {\n\tyield takeLatest('INIT_SLACKER_SAGA', initSlackerSaga)\n}\n\nexport default mySaga\n","import { put, select, takeEvery, fork, call } from 'redux-saga/effects'\nimport { AnyAction } from 'redux'\nimport database, { firebase, rsf } from '../firebase/firebase'\nimport { joinedRoom, showError, syncMessages } from '../actions/rooms'\nimport { fetchRoomSaga } from './initSaga'\n\nconst byCreatedAt = function(a: any, b: any) {\n\t// @ts-ignore\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\n}\n\nfunction* updateRoomPresences(action: AnyAction) {\n\tconst auth = yield select(state => state.auth)\n\tconst { uid, ...userData } = auth\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) => {\n\t\t\tuserRoomIds.push(userRoomDoc.id)\n\t\t})\n\n\t\tfor (var roomId in userRoomIds) {\n\t\t\tyield call(\n\t\t\t\t// @ts-ignore\n\t\t\t\trsf.firestore.setDocument,\n\t\t\t\t`rooms/${roomId}/people/${auth.uid}`,\n\t\t\t\t{\n\t\t\t\t\tid: auth.uid,\n\t\t\t\t\t...userData,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n}\n\nfunction* joinRoom(action: AnyAction) {\n\tconst { roomId } = action\n\tconst { uid, displayName, photoURL } = yield select(state => state.auth)\n\tconst roomRef = database.doc(`rooms/${roomId}`)\n\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\tconst room = <RoomItem>{ id: roomDoc.id, ...roomDoc.data() }\n\n\tif (!room || !roomDoc.exists) {\n\t\tyield put(showError('Room not found!'))\n\t\treturn\n\t} else if (\n\t\troom.people &&\n\t\troom.people.find((person: Person) => person.id === uid)\n\t) {\n\t\t// if we are already in this room then\n\t\t// history.push(`room/${data.roomName}`);\n\t\t// return i guess ?\n\t\treturn\n\t} else {\n\t\t// we should add ourselves to this room\n\n\t\tconst person = {\n\t\t\tname: displayName,\n\t\t\tphotoURL: photoURL,\n\t\t\tid: uid,\n\t\t\tunread: 0,\n\t\t\tlastRead: 0,\n\t\t}\n\n\t\tconsole.log({ person })\n\n\t\t// TODO figure wtf is wrong here\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`rooms/${roomId}/people/${person.id}`,\n\t\t\tperson,\n\t\t)\n\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`users/${person.id}/rooms/${roomId}`,\n\t\t\t{ roomName: room.name },\n\t\t)\n\n\t\t// fetch full room and subscribe\n\t\tyield call(fetchRoomSaga, roomId)\n\t}\n}\n\nfunction* joinRoomSaga() {\n\tyield takeEvery('JOIN_ROOM_SAGA', joinRoom)\n}\n\nfunction* updateRoomPresencesSaga() {\n\tyield takeEvery('UPDATE_ROOM_PRESENCES', updateRoomPresences)\n}\n\nexport default [joinRoomSaga(), updateRoomPresencesSaga()]\n","import { all } from 'redux-saga/effects'\nimport initSaga from './initSaga'\nimport roomSagas from './roomSagas'\n// import joinRoomSaga from './joinRoomSaga'\n\nexport default function* rootSaga() {\n\tyield all([initSaga(), ...roomSagas])\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport reducers from '../reducers'\n\nimport mySaga from '../sagas/rootSaga'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default () => {\n\tconst store = createStore(\n\t\treducers,\n\t\tcomposeEnhancers(applyMiddleware(thunk, sagaMiddleware)),\n\t)\n\n\tsagaMiddleware.run(mySaga)\n\n\treturn store\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\n\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\nconst jsx = (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<Route path={'/'} component={App} />\n\t\t</Router>\n\t</Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('container'))\n"],"sourceRoot":""}