{"version":3,"sources":["components/LoadingSpinner.tsx","components/Message.tsx","firebase/firebase.ts","actions/rooms.ts","components/ChatInput.tsx","actions/auth.ts","components/ProfileDialog.tsx","containers/AppHeader.tsx","utils/misc.ts","selectors/room.ts","containers/Room.tsx","components/CreateChatDialog.tsx","components/BrowseRoomsDialog.tsx","containers/App.tsx","reducers/rooms.ts","reducers/index.ts","reducers/auth.ts","reducers/redirect.ts","sagas/initSaga.ts","sagas/joinRoomSaga.ts","sagas/rootSaga.ts","store/configureStore.ts","index.tsx"],"names":["LoadingWrapper","styled","div","_templateObject","LoadingSpinner","react_default","a","createElement","spin","size","MessageLayout","Message_templateObject","LeftPanel","_templateObject2","RightPanel","_templateObject3","MessageHeader","_templateObject4","Message","_ref","children","name","isConsecutive","avatar","shape","icon","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rsf","ReduxSagaFirebase","database","firestore","githubAuthProvider","auth","GithubAuthProvider","byCreatedAt","b","Date","createdAt","getTime","createRoom","id","people","_ref$messages","messages","type","room","showError","message","trySendMessage","text","roomId","status","arguments","length","undefined","dispatch","getState","user","sender","uid","displayName","moment","format","collection","concat","add","availableRooms","rooms","syncMessages","messagesSnapshot","forEach","doc","push","Object","objectSpread","data","sort","updateMessages","InputForm","form","ChatInput_templateObject","Input","input","ChatInput_templateObject2","SendButton","button","ChatInput_templateObject3","ChatInput","state","value","handleTyping","e","_this","setState","target","handleSend","preventDefault","props","onSubmit","this","onChange","Component","connect","loginSuccess","TextArea","Typography","Text","Title","LoginProviders","ProfileDialog_templateObject","ProfileDialog","handleTryLogin","tryLoginProvider","then","handleClose","modal","title","visible","isOpen","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","level","row","col","span","es_button","onClick","style","margin","fontSize","signInWithPopup","response","console","log","catch","error","code","Header","Layout","AccountButton","AppHeader_templateObject","TopRightMenu","AppHeader_templateObject2","AppHeader","profileOpen","handleProfileOpen","handleProfileClose","menu","es_menu","Item","background","borderBottom","padding","display","flexDirection","alignItems","justifyContent","AppHeader_Title","dropdown","overlay","placement","components_ProfileDialog","getProps","createSelector","ownProps","match","params","joined","values","isLoading","Content","ChatWrapper","Room_templateObject","Messages","Room_templateObject2","RoomContainer","messagesEnd","messagesContainer","scrollToBottom","scrollIntoView","behavior","prevProps","previousLastMessage","slice","currentLastMessage","_this$messagesContain","scrollHeight","scrollTop","clientHeight","offsetHeight","Math","abs","_this2","_this$props","content","components_LoadingSpinner","ref","el","map","idx","components_Message","key","float","clear","components_ChatInput","react","containers_AppHeader","overflow","TextWrap","CreateChatDialog_templateObject","CreateChatDialog","roomName","description","handleChange","defineProperty","handleSubmit","_this$props$auth","userDisplayName","unread","lastRead","tryCreateRoom","CreateChatDialog_Text","CreateChatDialog_TextArea","rows","roomData","showCreateError","get","snapshot","find","r","roomRef","set","Label","BrowseRoomsDialog_templateObject","BrowseRoomsDialog","handleJoinRoom","canJoin","tryJoinRoom","bodyStyle","maxHeight","overflowY","list","dataSource","roomList","renderItem","item","Meta","avatarUrl","src","_state$rooms","available","Sider","LogoWrap","App_templateObject","Logo","img","App_templateObject2","RoomButtons","App_templateObject3","MenuButton","App_templateObject4","App","openDialog","handleCloseDialog","handleOpenDialog","dialogName","handleRoomSelect","history","initAuth","nextProps","initSlacker","location","joinedRooms","pathname","layout","height","position","left","components_CreateChatDialog","components_BrowseRoomsDialog","theme","mode","onSelect","selectedKeys","className","marginLeft","react_router","path","component","onAuthStateChanged","defaultState","reducers","combineReducers","action","reduce","acc","redirect","redirectTo","fetchRoomSaga","initSlackerSaga","mySaga","roomDoc","messagePage","newestMessage","regenerator_default","wrap","_context","prev","next","call","getDocument","sent","exists","getCollection","peopleDoc","orderBy","limit","messageDoc","put","fork","syncCollection","successActionCreator","stop","_marked","roomsPromise","roomsQuery","generalRoom","userRoomsQuery","userRoomIds","_i","_userRoomIds","_context2","select","abrupt","empty","userRoomDoc","includes","_marked2","_context3","takeLatest","_marked3","joinRoom","joinRoomSaga","person","setDocument","joinRoomSaga_marked","takeEvery","joinRoomSaga_marked2","rootSaga","all","initSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","configureStore","jsx","es","react_router_dom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64d47a4e.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spin } from 'antd'\r\n\r\nconst LoadingWrapper = styled.div`\r\n\theight: 100%;\r\n\tpadding: 24;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tbackground: '#fff';\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`\r\n\r\nconst LoadingSpinner = () => (\r\n\t<LoadingWrapper>\r\n\t\t<Spin size=\"large\" />\r\n\t</LoadingWrapper>\r\n)\r\n\r\nexport default LoadingSpinner\r\n","import React, { FunctionComponent } from 'react'\r\nimport { Avatar } from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nconst MessageLayout = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tmargin-bottom: 2px;\r\n`\r\n\r\nconst LeftPanel = styled.div`\r\n\twidth: 46px;\r\n\tpadding: 5px;\r\n`\r\n\r\n// const Avatar = styled.div`\r\n// \t/* width: 35px;\r\n// \theight: 35px;\r\n// \tmargin: 5px;\r\n// \tborder-radius: 2px;\r\n// \tbackground-color: #cecece;\r\n// ` */\r\n\r\nconst RightPanel = styled.div`\r\n\tcolor: black;\r\n`\r\n\r\nconst MessageHeader = styled.div`\r\n\tcolor: black;\r\n\tfont-weight: bold;\r\n\tmargin-top: 2px;\r\n`\r\n\r\ninterface Props {\r\n\tname: string\r\n\tisConsecutive?: boolean\r\n}\r\n\r\nconst Message: FunctionComponent<Props> = ({\r\n\tchildren,\r\n\tname,\r\n\tisConsecutive,\r\n}) => {\r\n\tif (isConsecutive) {\r\n\t\treturn (\r\n\t\t\t<MessageLayout>\r\n\t\t\t\t<LeftPanel />\r\n\t\t\t\t<RightPanel>{children}</RightPanel>\r\n\t\t\t</MessageLayout>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<MessageLayout>\r\n\t\t\t<LeftPanel>\r\n\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\r\n\t\t\t</LeftPanel>\r\n\t\t\t<RightPanel>\r\n\t\t\t\t<MessageHeader>{name}</MessageHeader>\r\n\t\t\t\t{children}\r\n\t\t\t</RightPanel>\r\n\t\t</MessageLayout>\r\n\t)\r\n}\r\n\r\nexport default Message\r\n","import firebase from 'firebase'\r\nimport '@firebase/firestore' // 👈 Don't forget this!\r\nimport ReduxSagaFirebase from 'redux-saga-firebase'\r\nconst config = {\r\n\tapiKey: 'AIzaSyB2tCxT6yP0CWtCbD9JDj3ZKaxxW8T25PI',\r\n\tauthDomain: 'slacker-c3b01.firebaseapp.com',\r\n\tdatabaseURL: 'https://slacker-c3b01.firebaseio.com',\r\n\tprojectId: 'slacker-c3b01',\r\n\tstorageBucket: 'slacker-c3b01.appspot.com',\r\n\tmessagingSenderId: '286218247810',\r\n}\r\nconst firebaseApp = firebase.initializeApp(config)\r\nconst rsf = new ReduxSagaFirebase(firebaseApp)\r\nconst database = firebase.firestore()\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\r\n\r\nconst auth = firebase.auth()\r\n\r\nexport { firebase, rsf, auth, githubAuthProvider, database as default }\r\n","import database, { firebase } from '../firebase/firebase'\r\nimport moment from 'moment'\r\n// import { ipcRenderer } from 'electron';\r\n\r\nconst byCreatedAt = function(a: any, b: any) {\r\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\r\n}\r\n\r\nexport interface RoomData {\r\n\tid?: string\r\n\tname: string\r\n\tpeople: any\r\n\tmessages?: any\r\n}\r\n\r\nexport const createRoom = ({ id, name, people, messages = [] }: RoomData) => ({\r\n\ttype: 'CREATE_ROOM',\r\n\troom: {\r\n\t\tid,\r\n\t\tname,\r\n\t\tpeople,\r\n\t\tmessages,\r\n\t},\r\n})\r\n\r\nexport const joinedRoom = (joinedRoom: RoomItem) => ({\r\n\ttype: 'JOINED_ROOM',\r\n\tjoinedRoom,\r\n})\r\n\r\nexport const tryJoinRoom = (roomId: string) => ({\r\n\ttype: 'JOIN_ROOM_SAGA',\r\n\troomId\r\n})\r\n\r\nexport const tryCreateRoom = (roomData: RoomData, showCreateError: any) => {\r\n\treturn (dispatch: any, getState: () => StoreState) => {\r\n\t\tconst room = {\r\n\t\t\tname: roomData.name,\r\n\t\t}\r\n\t\t// get all rooms\r\n\t\treturn database\r\n\t\t\t.collection('rooms')\r\n\t\t\t.get()\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tconst rooms: Room[] = []\r\n\t\t\t\tsnapshot.forEach(doc => {\r\n\t\t\t\t\tconsole.log(doc)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tconst room: Room = doc.data()\r\n\t\t\t\t\trooms.push({\r\n\t\t\t\t\t\t...room,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t// if no room with this name\r\n\t\t\t\tif (!rooms.find(r => r.name === room.name)) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tdatabase\r\n\t\t\t\t\t\t\t.collection('rooms')\r\n\t\t\t\t\t\t\t.add(room)\r\n\t\t\t\t\t\t\t// create this room and\r\n\t\t\t\t\t\t\t.then(roomRef => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\tdatabase\r\n\t\t\t\t\t\t\t\t\t\t.collection(`rooms/${roomRef.id}/people`)\r\n\t\t\t\t\t\t\t\t\t\t.doc(roomData.people.id)\r\n\t\t\t\t\t\t\t\t\t\t// assign people to it?\r\n\t\t\t\t\t\t\t\t\t\t.set(roomData.people)\r\n\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdatabase\r\n\t\t\t\t\t\t\t\t\t\t\t\t.collection(`users/${roomData.people.id}/rooms`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.doc(roomRef.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.set({ roomName: room.name })\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\t\t\tcreateRoom({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: roomRef.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...roomData,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpeople: [roomData.people],\r\n\t\t\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\tconst perName = roomData.people.name\r\n\t\t\t\t\t\t\t\t\t\t\t// dispatch(\r\n\t\t\t\t\t\t\t\t\t\t\t// \tstartSendMessage(\r\n\t\t\t\t\t\t\t\t\t\t\t// \t\t`${perName} created this room`,\r\n\t\t\t\t\t\t\t\t\t\t\t// \t\troom.name,\r\n\t\t\t\t\t\t\t\t\t\t\t// \t\ttrue,\r\n\t\t\t\t\t\t\t\t\t\t\t// \t),\r\n\t\t\t\t\t\t\t\t\t\t\t// ).then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t// \tdispatch(startListening(room.name))\r\n\t\t\t\t\t\t\t\t\t\t\t// \t// history.push(`/room/${room.name}`);\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn showCreateError('Room name not available!')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nconst isAlreadyAdded = (data: any, id: string) => {\r\n\tfor (var key in data) {\r\n\t\tif (data[key].id === id) return true\r\n\t}\r\n\treturn false\r\n}\r\n\r\nexport const showError = (message: string) => ({\r\n\ttype: 'ERROR_MESSAGE',\r\n\tmessage,\r\n})\r\n\r\n// export const sendMessage = (message: any, roomId: string) => ({\r\n// \ttype: 'SEND_MESSAGE',\r\n// \tmessage,\r\n// \troomId,\r\n// })\r\n\r\nexport const updateMessages = (messages: any, roomId: string) => ({\r\n\ttype: 'UPDATE_MESSAGES',\r\n\tmessages,\r\n\troomId,\r\n})\r\n\r\nexport const trySendMessage = (\r\n\ttext: string,\r\n\troomId: string,\r\n\tstatus: boolean = false,\r\n) => {\r\n\treturn (dispatch: any, getState: any) => {\r\n\t\tconst user = getState().auth\r\n\t\tif (user) {\r\n\t\t\tconst uid = user.uid\r\n\t\t\tconst displayName = user.displayName\r\n\t\t\tconst message = {\r\n\t\t\t\tsender: { uid, displayName },\r\n\t\t\t\ttext,\r\n\t\t\t\tcreatedAt: moment().format(),\r\n\t\t\t\tstatus,\r\n\t\t\t}\r\n\t\t\treturn database.collection(`rooms/${roomId}/messages`).add(message)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const orderRoomsStartState = () => ({\r\n\ttype: 'ORDER_ROOMS_START_STATE',\r\n})\r\n\r\nexport const availableRooms = (rooms: RoomItem[]) => ({\r\n\ttype: 'AVAILABLE_ROOMS',\r\n\trooms,\r\n})\r\n\r\nexport const initSlacker = () => ({\r\n\ttype: 'INIT_SLACKER_SAGA',\r\n})\r\n\r\nexport const clearState = {\r\n\ttype: 'CLEAR_STATE',\r\n}\r\n\r\nexport const leaveRoom = (roomName: string, userId: string) => ({\r\n\ttype: 'LEAVE_ROOM',\r\n\troomName,\r\n\tuserId,\r\n})\r\n\r\n// export const startLeaveRoom = (roomName: string) => {\r\n// \treturn (dispatch: any, getState: any) => {\r\n// \t\tconst user = getState().auth\r\n// \t\tif (user) {\r\n// \t\t\tconst userId = user.uid\r\n// \t\t\tconst displayName = user.displayName\r\n// \t\t\tdatabase.ref(`rooms/${roomName}/people/${userId}`).remove()\r\n// \t\t\tdatabase.ref(`users/${userId}/rooms/${roomName}`).remove(() => {\r\n// \t\t\t\tdispatch(leaveRoom(roomName, userId))\r\n// \t\t\t\tdispatch(startSendMessage(`${displayName} left`, roomName, true))\r\n// \t\t\t\t// history.push(\"/join\");\r\n// \t\t\t})\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport const clearUnread = (\r\n\troomName: string,\r\n\tuid: string,\r\n\ttime: any,\r\n\tunread: number,\r\n) => ({\r\n\ttype: 'CLEAR_UNREAD',\r\n\troomName,\r\n\tuid,\r\n\ttime,\r\n\tunread,\r\n})\r\n\r\nexport const setUnread = (\r\n\troomName: string,\r\n\tuid: string,\r\n\ttime: any,\r\n\tunread: number,\r\n) => {\r\n\treturn (dispatch: any) => {\r\n\t\tdispatch(clearUnread(roomName, uid, time, unread))\r\n\t}\r\n}\r\n\r\n// export const startClearUnread = (roomName: string) => {\r\n// \treturn (dispatch: any, getState: any) => {\r\n// \t\t// let time = moment().endOf(\"month\");\r\n// \t\tconst uid = getState().auth.uid\r\n// \t\tif (uid) {\r\n// \t\t\tconst time = moment().format()\r\n// \t\t\treturn database\r\n// \t\t\t\t.ref(`rooms/${roomName}/people/${uid}`)\r\n// \t\t\t\t.update({\r\n// \t\t\t\t\tunread: 0,\r\n// \t\t\t\t\tlastRead: time,\r\n// \t\t\t\t})\r\n// \t\t\t\t.then(() => {\r\n// \t\t\t\t\tdispatch(clearUnread(roomName, uid, time, 0))\r\n// \t\t\t\t})\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport const onLeft = (roomName: string, personID: string) => ({\r\n\ttype: 'ON_LEFT',\r\n\troomName,\r\n\tpersonID,\r\n})\r\n\r\nexport const onJoined = (roomName: string, person: any) => ({\r\n\ttype: 'ON_JOINED',\r\n\troomName,\r\n\tperson,\r\n})\r\n\r\nexport const syncMessages = (messagesSnapshot: any, roomId: string) => {\r\n\tconst messages: any[] = []\r\n\tmessagesSnapshot.forEach((doc: any) => {\r\n\t\tmessages.push({ id: doc.id, ...doc.data() })\r\n\t})\r\n\r\n\tmessages.sort(byCreatedAt)\r\n\treturn updateMessages(messages, roomId)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { trySendMessage } from '../actions/rooms'\r\n\r\nconst InputForm = styled.form`\r\n\theight: 44px;\r\n\tbackground-color: #fff;\r\n\tborder-radius: 4px;\r\n\tborder: 1px solid #acacac;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tflex-shrink: 0;\r\n`\r\n\r\nconst Input = styled.input`\r\n\tpadding-left: 14px;\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n\tflex-grow: 1;\r\n\toutline: none;\r\n`\r\n\r\nconst SendButton = styled.button`\r\n\tflex-shrink: 0;\r\n\tpadding: 0px 15px;\r\n\tbackground: none;\r\n\tborder: none;\r\n`\r\n\r\ninterface Props {\r\n\troom: RoomItem | undefined\r\n\ttrySendMessage: (text: string, roomId: string) => void\r\n}\r\n\r\ninterface State {\r\n\tvalue: string\r\n}\r\n\r\nclass ChatInput extends Component<Props, State> {\r\n\tstate = {\r\n\t\tvalue: '',\r\n\t}\r\n\r\n\thandleTyping = (e: any) => {\r\n\t\tthis.setState({ value: e.target.value })\r\n\t}\r\n\r\n\thandleSend = (e: any) => {\r\n\t\te.preventDefault()\r\n\t\tconst { room } = this.props\r\n\t\tconst text = this.state.value\r\n\t\tif (!!room && !!room.id && text.length > 0) {\r\n\t\t\tthis.props.trySendMessage(text, room.id)\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalue: '',\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<InputForm onSubmit={this.handleSend}>\r\n\t\t\t\t<Input value={this.state.value} onChange={this.handleTyping} />\r\n\t\t\t\t<SendButton type={'submit'}>Send</SendButton>\r\n\t\t\t</InputForm>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ trySendMessage },\r\n)(ChatInput)\r\n","import { auth, githubAuthProvider } from '../firebase/firebase'\r\n\r\nexport const loginSuccess = (uid: string, displayName: string) => ({\r\n\ttype: 'LOGIN',\r\n\tuid,\r\n\tdisplayName,\r\n})\r\n\r\nexport const initAuth = () => {\r\n\treturn (dispatch: any) => {\r\n\t\treturn auth.onAuthStateChanged(user => {\r\n\t\t\tif (user) {\r\n\t\t\t\tconsole.log('user from saved whatever ?', user)\r\n\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tconst displayName = user.displayName || 'Ninja'\r\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, displayName))\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('user is undefined here lol')\r\n\r\n\t\t\t\t// which means we have to sign ppl anonymously and then they can sign in later\r\n\r\n\t\t\t\t// Implement logic to trigger the login dialog here or redirect to sign-in page.\r\n\t\t\t\t// e.g. showDialog()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const tryLogin = () => {\r\n\treturn (dispatch: any) => {\r\n\t\treturn auth\r\n\t\t\t.signInAnonymously()\r\n\t\t\t.then(response => {\r\n\t\t\t\t// console.log(response);\r\n\t\t\t\tconst { user } = response\r\n\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tconst displayName = user.displayName || 'Ninja'\r\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, displayName))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log({ error })\r\n\t\t\t\t// Handle Errors here.\r\n\t\t\t\tvar errorCode = error.code\r\n\t\t\t\tvar errorMessage = error.message\r\n\t\t\t\t// ...\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nexport const tryLoginProvider = () => {\r\n\treturn (dispatch: any) => {\r\n\t\treturn auth\r\n\t\t\t.signInWithPopup(githubAuthProvider)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst { user } = response\r\n\r\n\t\t\t\tconsole.log({ user })\r\n\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tconst displayName = user.displayName || 'Ninja'\r\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, displayName))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log({ error })\r\n\t\t\t\t// Handle Errors here.\r\n\t\t\t\tvar errorCode = error.code\r\n\t\t\t\tvar errorMessage = error.message\r\n\t\t\t\t// ...\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nexport const logout = () => ({\r\n\ttype: 'LOGOUT',\r\n})\r\n\r\nexport const tryLogout = () => {\r\n\treturn () => {\r\n\t\treturn auth\r\n\t\t\t.signOut()\r\n\t\t\t.then(() => {\r\n\t\t\t\tconsole.log('log out!!!')\r\n\t\t\t})\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Input, Typography, Row, Col, Icon, Button } from 'antd'\r\nimport { tryLoginProvider } from '../actions/auth'\r\nconst { TextArea } = Input\r\nconst { Text, Title } = Typography\r\n\r\nconst LoginProviders = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`\r\n\r\ninterface Props {\r\n\tisOpen: boolean\r\n\thandleClose: () => void\r\n\ttryLoginProvider: () => Promise<any>\r\n\tauth: Auth\r\n}\r\n\r\ninterface State {\r\n\troomName: string\r\n\tdescription: string\r\n}\r\n\r\nclass ProfileDialog extends Component<Props, State> {\r\n\thandleTryLogin = () => {\r\n\t\tthis.props.tryLoginProvider().then(() => {\r\n\t\t\tthis.props.handleClose()\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Profile\"\r\n\t\t\t\tvisible={this.props.isOpen}\r\n\t\t\t\tonOk={this.props.handleClose}\r\n\t\t\t\tonCancel={this.props.handleClose}\r\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Title level={4}>Login with</Title>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t\t<LoginProviders>\r\n\t\t\t\t\t\t\t\t<Button onClick={this.handleTryLogin} style={{ margin: 5 }}>\r\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"github\" />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"google\" />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</LoginProviders>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tauth: state.auth,\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ tryLoginProvider },\r\n)(ProfileDialog)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { Layout, Typography, Avatar, Menu, Dropdown } from 'antd'\r\n\r\nimport ProfileDialog from '../components/ProfileDialog'\r\n\r\nconst { Header } = Layout\r\nconst { Title } = Typography\r\n\r\nconst AccountButton = styled.button`\r\n\tbackground: none;\r\n\tborder: 1px solid transparent;\r\n\tborder-radius: 4px;\r\n\ttransition: border 0.5s;\r\n\toutline: none;\r\n\tpadding: 0px;\r\n\tline-height: normal;\r\n\tcursor: pointer;\r\n`\r\n\r\nconst TopRightMenu = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n`\r\n\r\ninterface Props {\r\n\troom?: RoomItem\r\n}\r\n\r\ninterface State {\r\n\tprofileOpen: boolean\r\n}\r\n\r\nclass AppHeader extends Component<Props, State> {\r\n\tstate = {\r\n\t\tprofileOpen: false,\r\n\t}\r\n\r\n\thandleProfileOpen = () => {\r\n\t\tthis.setState({\r\n\t\t\tprofileOpen: true,\r\n\t\t})\r\n\t}\r\n\r\n\thandleProfileClose = () => {\r\n\t\tthis.setState({\r\n\t\t\tprofileOpen: false,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { room } = this.props\r\n\t\t// TODO plan what is in here\r\n\t\tconst menu = (\r\n\t\t\t<Menu>\r\n\t\t\t\t<Menu.Item onClick={this.handleProfileOpen}>\r\n\t\t\t\t\t<a>Profile</a>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t<a>2nd menu item</a>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t<a>3rd menu item</a>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t)\r\n\t\treturn (\r\n\t\t\t<Header\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\tborderBottom: '1px solid #acacac',\r\n\t\t\t\t\tpadding: 16,\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Title style={{ margin: 0 }} level={3}>\r\n\t\t\t\t\t# {room ? room.name : ''}\r\n\t\t\t\t</Title>\r\n\t\t\t\t<TopRightMenu>\r\n\t\t\t\t\t<Dropdown overlay={menu} placement=\"bottomLeft\">\r\n\t\t\t\t\t\t<AccountButton onClick={this.handleProfileOpen}>\r\n\t\t\t\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\r\n\t\t\t\t\t\t</AccountButton>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t<ProfileDialog\r\n\t\t\t\t\t\tisOpen={this.state.profileOpen}\r\n\t\t\t\t\t\thandleClose={this.handleProfileClose}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TopRightMenu>\r\n\t\t\t</Header>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect()(AppHeader)\r\n","export const byCreatedAt = function(a: any, b: any) {\r\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\r\n}","import { createSelector } from 'reselect'\r\nimport { byCreatedAt } from '../utils/misc'\r\n\r\nconst getAuth = (state: StoreState) => state.auth\r\n\r\nconst getRoom = (state: StoreState, ownProps: any) => {\r\n\tconst { roomId } = ownProps.match.params\r\n\treturn state.rooms.joined[roomId]\r\n}\r\n\r\nconst getRoomMessages = (state: StoreState, ownProps: any) => {\r\n\tconst { roomId } = ownProps.match.params\r\n\tconst room = state.rooms.joined[roomId]\r\n\treturn room ? Object.values(room.messages).sort(byCreatedAt) : []\r\n}\r\n\r\nconst getProps = createSelector(\r\n\tgetRoom,\r\n\tgetRoomMessages,\r\n\tgetAuth,\r\n\t(room, messages, auth) => {\r\n\t\treturn {\r\n\t\t\tauth,\r\n\t\t\troom,\r\n\t\t\tmessages,\r\n\t\t\tisLoading: !room,\r\n\t\t}\r\n\t},\r\n)\r\n\r\nexport default getProps\r\n","import React, { Fragment, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { Layout, Typography } from 'antd'\r\n\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\nimport Message from '../components/Message'\r\nimport ChatInput from '../components/ChatInput'\r\nimport AppHeader from './AppHeader'\r\n\r\nimport { trySendMessage } from '../actions/rooms'\r\nimport getProps from '../selectors/room'\r\n\r\nconst { Content } = Layout\r\n\r\nconst ChatWrapper = styled.div`\r\n\theight: 100%;\r\n\tpadding: 24;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tbackground: '#fff';\r\n`\r\n\r\nconst Messages = styled.div`\r\n\tpadding-top: 8px;\r\n\tpadding-bottom: 8px;\r\n\tflex-grow: 1;\r\n\toverflow-y: scroll;\r\n\toverflow-x: hidden;\r\n`\r\n\r\ninterface Props {\r\n\tauth: Auth\r\n\troom: RoomItem | undefined\r\n\tmatch: any\r\n\tisLoading: boolean\r\n\tmessages: Message[]\r\n\ttrySendMessage: (text: string, roomId: string, status?: boolean) => void\r\n}\r\n\r\nclass RoomContainer extends Component<Props> {\r\n\tmessagesEnd: any = null\r\n\tmessagesContainer: HTMLElement | null = null\r\n\r\n\tcomponentWillMount() {\r\n\t\tconst { roomId } = this.props.match.params\r\n\t\tconsole.log(roomId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollToBottom()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Props) {\r\n\t\tif (prevProps.messages.length === 0 && this.props.messages.length > 0) {\r\n\t\t\tthis.scrollToBottom()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// scroll management\r\n\t\tif (\r\n\t\t\tprevProps.messages.length !== this.props.messages.length &&\r\n\t\t\tprevProps.messages.length > 0 &&\r\n\t\t\tthis.props.messages.length > 0\r\n\t\t) {\r\n\t\t\tconst previousLastMessage = prevProps.messages.slice(-1)[0]\r\n\t\t\tconst currentLastMessage = this.props.messages.slice(-1)[0]\r\n\t\t\tif (\r\n\t\t\t\tpreviousLastMessage.id !== currentLastMessage.id &&\r\n\t\t\t\t!!currentLastMessage &&\r\n\t\t\t\tcurrentLastMessage.sender.uid === this.props.auth.uid\r\n\t\t\t) {\r\n\t\t\t\t// last message was ours, scroll to the bottom\r\n\t\t\t\tthis.scrollToBottom()\r\n\t\t\t} else if (this.messagesContainer) {\r\n\t\t\t\t// last message is not ours, lets check scroll\r\n\t\t\t\tconst {\r\n\t\t\t\t\tscrollHeight,\r\n\t\t\t\t\tscrollTop,\r\n\t\t\t\t\toffsetHeight,\r\n\t\t\t\t\tclientHeight,\r\n\t\t\t\t} = this.messagesContainer\r\n\t\t\t\tconst calculato = scrollHeight - scrollTop === clientHeight\r\n\r\n\t\t\t\t// if our scroll is around bottom 2 messages, scroll to bottom pls\r\n\t\t\t\tif (Math.abs(clientHeight - (scrollHeight - scrollTop - 45)) < 45) {\r\n\t\t\t\t\tthis.scrollToBottom()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollToBottom = () => {\r\n\t\tif (this.messagesEnd) {\r\n\t\t\tthis.messagesEnd.scrollIntoView({ behavior: 'auto' })\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { room, messages, isLoading } = this.props\r\n\t\tlet content = <LoadingSpinner />\r\n\t\tif (!isLoading) {\r\n\t\t\tcontent = (\r\n\t\t\t\t<ChatWrapper>\r\n\t\t\t\t\t<Messages\r\n\t\t\t\t\t\tref={el => {\r\n\t\t\t\t\t\t\tthis.messagesContainer = el\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{messages.map((message, idx) => (\r\n\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\tisConsecutive={\r\n\t\t\t\t\t\t\t\t\t!!messages[idx - 1] &&\r\n\t\t\t\t\t\t\t\t\tmessages[idx - 1].sender.uid === message.sender.uid\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tname={message.sender.displayName || ''}\r\n\t\t\t\t\t\t\t\tkey={message.id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{message.text}\r\n\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{ float: 'left', clear: 'both' }}\r\n\t\t\t\t\t\t\tref={el => {\r\n\t\t\t\t\t\t\t\tthis.messagesEnd = el\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Messages>\r\n\t\t\t\t\t<ChatInput room={this.props.room} />\r\n\t\t\t\t</ChatWrapper>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<AppHeader room={room} />\r\n\t\t\t\t<Content\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: '0px 16px 24px 16px',\r\n\t\t\t\t\t\toverflow: 'initial',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</Content>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState, ownProps: any) => getProps(state, ownProps)\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ trySendMessage },\r\n)(RoomContainer)\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Input, Typography } from 'antd'\r\nimport { tryCreateRoom, RoomData } from '../actions/rooms'\r\n\r\nconst { TextArea } = Input\r\nconst { Text } = Typography\r\n\r\nconst TextWrap = styled.div`\r\n\tmargin-top: 5px;\r\n\tmargin-bottom: 5px;\r\n`\r\n\r\ninterface Props {\r\n\tisOpen: boolean;\r\n\thandleClose: () => void;\r\n\ttryCreateRoom: (roomData: RoomData, showCreateError?: any) => Promise<any>;\r\n\tauth: Auth;\r\n}\r\n\r\ninterface State {\r\n\troomName: string;\r\n\tdescription: string;\r\n}\r\n\r\nclass CreateChatDialog extends Component<Props, State> {\r\n\tstate = {\r\n\t\troomName: '',\r\n\t\tdescription: '',\r\n\t}\r\n\r\n\thandleChange = (e: any) => {\r\n\t\tconsole.log(e.target.name)\r\n\t\t// @ts-ignore\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = () => {\r\n\t\tconst { uid, displayName: userDisplayName } = this.props.auth\r\n\t\tif (uid) {\r\n\t\t\tconsole.log('Create this room pls')\r\n\t\t\tconst roomName = this.state.roomName\r\n\t\t\tif (roomName && roomName.length > 0) {\r\n\t\t\t\t// this.setState({ error: '' })\r\n\t\t\t\tconst room = {\r\n\t\t\t\t\tname: roomName,\r\n\t\t\t\t\tpeople: {\r\n\t\t\t\t\t\tid: uid,\r\n\t\t\t\t\t\tname: userDisplayName,\r\n\t\t\t\t\t\tunread: 0,\r\n\t\t\t\t\t\tlastRead: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.tryCreateRoom(room)\r\n\t\t\t\tthis.props.handleClose()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Create Room\"\r\n\t\t\t\tvisible={this.props.isOpen}\r\n\t\t\t\tonOk={this.handleSubmit}\r\n\t\t\t\tonCancel={this.props.handleClose}\r\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t>\r\n\t\t\t\t<TextWrap>\r\n\t\t\t\t\t<Text>Name:</Text>\r\n\t\t\t\t</TextWrap>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tname=\"roomName\"\r\n\t\t\t\t\tvalue={this.state.roomName}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextWrap>\r\n\t\t\t\t\t<Text>Description:</Text>\r\n\t\t\t\t</TextWrap>\r\n\t\t\t\t<TextArea\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tvalue={this.state.description}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\trows={4}\r\n\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tauth: state.auth,\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ tryCreateRoom },\r\n)(CreateChatDialog)\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, List, Avatar, Button } from 'antd'\r\n\r\nimport { tryJoinRoom } from '../actions/rooms'\r\n\r\nconst Label = styled.div`\r\n\tpadding: 10px;\r\n`\r\n\r\ninterface RoomWithAvailability extends RoomItem {\r\n\tcanJoin: boolean\r\n}\r\n\r\ninterface Props {\r\n\tisOpen: boolean\r\n\thandleClose: () => void\r\n\ttryJoinRoom: (roomId: string) => void\r\n\tauth: Auth\r\n\troomList: Array<RoomWithAvailability>\r\n}\r\n\r\ninterface State {\r\n\troomName: string\r\n\tdescription: string\r\n}\r\n\r\nclass BrowseRoomsDialog extends Component<Props, State> {\r\n\thandleJoinRoom = (room: RoomWithAvailability) => {\r\n\t\tif (!room.canJoin) {\r\n\t\t\tconsole.log('redirect to that room')\r\n\t\t\tthis.props.handleClose()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.props.tryJoinRoom(room.id)\r\n\t\t// this.props.handleClose()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Browse Rooms\"\r\n\t\t\t\tvisible={this.props.isOpen}\r\n\t\t\t\tonOk={this.props.handleClose}\r\n\t\t\t\tonCancel={this.props.handleClose}\r\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t\tbodyStyle={{ maxHeight: 450, overflowY: 'scroll' }}\r\n\t\t\t>\r\n\t\t\t\t<List\r\n\t\t\t\t\tdataSource={this.props.roomList}\r\n\t\t\t\t\trenderItem={item => (\r\n\t\t\t\t\t\t<List.Item key={item.id}>\r\n\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\tavatar={item.avatarUrl ? <Avatar src={item.avatarUrl} /> : null}\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t<a onClick={() => this.handleJoinRoom(item)}>{item.name}</a>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdescription={'TODO room descriptions'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{item.canJoin ? (\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.handleJoinRoom(item)}>\r\n\t\t\t\t\t\t\t\t\t\tJoin\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Label>joined</Label>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t</List>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n\tconst { available, joined } = state.rooms\r\n\tconst roomList = Object.values(available).map(room => {\r\n\t\tconst canJoin =\r\n\t\t\tObject.values(joined).find(item => item.id === room.id) === undefined\r\n\t\treturn {\r\n\t\t\t...room,\r\n\t\t\tcanJoin,\r\n\t\t}\r\n\t})\r\n\treturn {\r\n\t\troomList,\r\n\t\tauth: state.auth,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ tryJoinRoom },\r\n)(BrowseRoomsDialog)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport { Layout, Menu, Icon } from 'antd'\r\n\r\nimport RoomContainer from './Room'\r\nimport CreateChatDialog from '../components/CreateChatDialog'\r\nimport BrowseRoomsDialog from '../components/BrowseRoomsDialog'\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\n\r\nimport { initAuth } from '../actions/auth'\r\nimport { initSlacker } from '../actions/rooms'\r\n\r\nimport '../styles/index.css'\r\n\r\nconst { Sider } = Layout\r\n// const { Text } = Typography\r\n\r\nconst LogoWrap = styled.div`\r\n\ttext-align: center;\r\n\tpadding: 10px;\r\n\theight: 64px;\r\n\tborder-bottom: 1px solid grey;\r\n`\r\n\r\nconst Logo = styled.img`\r\n\theight: 100%;\r\n`\r\n\r\nconst RoomButtons = styled.div`\r\n\tpadding: 10px;\r\n\tcolor: rgba(255, 255, 255, 0.65);\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n`\r\n\r\nconst MenuButton = styled.button`\r\n\tfont-size: 16px;\r\n\tbackground: none;\r\n\tborder: none;\r\n\t-webkit-transition: color 0.5s;\r\n\ttransition: color 0.5s;\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tcolor: #fff;\r\n\t}\r\n`\r\n\r\ninterface Props {\r\n\tinitAuth: () => void\r\n\tinitSlacker: () => void\r\n\tauth: Auth\r\n\tjoinedRooms: RoomItem[]\r\n\tavailableRooms: RoomItem[]\r\n\thistory: any\r\n\tlocation: {\r\n\t\tpathname: any\r\n\t}\r\n}\r\n\r\ninterface State {\r\n\topenDialog: string | false\r\n}\r\n\r\nclass App extends Component<Props, State> {\r\n\tstate: State = {\r\n\t\topenDialog: false,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.initAuth()\r\n\t}\r\n\r\n\tcomponentWillUpdate(nextProps: Props) {\r\n\t\tif (!this.props.auth.uid && nextProps.auth.uid) {\r\n\t\t\tthis.props.initSlacker()\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Props) {\r\n\t\tconst { location, joinedRooms, history } = this.props\r\n\t\tif (\r\n\t\t\tlocation.pathname === '/' &&\r\n\t\t\tprevProps.joinedRooms.length === 0 &&\r\n\t\t\tjoinedRooms.length !== 0\r\n\t\t) {\r\n\t\t\tconsole.log('redirect to first room?')\r\n\t\t\thistory.push(`/r/${joinedRooms[0].id}`)\r\n\t\t}\r\n\t}\r\n\r\n\thandleCloseDialog = () => {\r\n\t\tthis.setState({\r\n\t\t\topenDialog: false,\r\n\t\t})\r\n\t}\r\n\r\n\thandleOpenDialog = (dialogName: string) => {\r\n\t\tthis.setState({\r\n\t\t\topenDialog: dialogName,\r\n\t\t})\r\n\t}\r\n\r\n\thandleRoomSelect = ({ key }: { key: string }) => {\r\n\t\tthis.props.history.push(key)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout style={{ height: '100%' }}>\r\n\t\t\t\t<Sider\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\t\theight: '100vh',\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<LogoWrap>\r\n\t\t\t\t\t\t<Logo src=\"fox.png\" />\r\n\t\t\t\t\t</LogoWrap>\r\n\r\n\t\t\t\t\t<RoomButtons>\r\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('browseRooms')}>\r\n\t\t\t\t\t\t\t<span>Rooms:</span>\r\n\t\t\t\t\t\t</MenuButton>\r\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('createRoom')}>\r\n\t\t\t\t\t\t\t<Icon type=\"plus-circle\" />\r\n\t\t\t\t\t\t</MenuButton>\r\n\t\t\t\t\t</RoomButtons>\r\n\t\t\t\t\t<CreateChatDialog\r\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'createRoom'}\r\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<BrowseRoomsDialog\r\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'browseRooms'}\r\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\ttheme=\"dark\"\r\n\t\t\t\t\t\tmode=\"inline\"\r\n\t\t\t\t\t\tonSelect={this.handleRoomSelect}\r\n\t\t\t\t\t\tselectedKeys={[this.props.location.pathname]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.props.joinedRooms.map(room => (\r\n\t\t\t\t\t\t\t<Menu.Item key={`/r/${room.id}`}>\r\n\t\t\t\t\t\t\t\t<span className=\"nav-text\"># {room.name}</span>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</Sider>\r\n\t\t\t\t<Layout style={{ marginLeft: 200, background: '#fff' }}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={'/r/:roomId'} component={RoomContainer} />\r\n\t\t\t\t\t\t<Route path={'/'}>\r\n\t\t\t\t\t\t\t{this.props.joinedRooms.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div>No chat selected</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n\tauth: state.auth,\r\n\tjoinedRooms: Object.values(state.rooms.joined),\r\n\tavailableRooms: Object.values(state.rooms.available),\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ initAuth, initSlacker },\r\n)(App)\r\n","import moment from 'moment'\r\ninterface RoomsState {\r\n\tjoined: {\r\n\t\t[key: string]: RoomItem\r\n\t}\r\n\tavailable: {\r\n\t\t[key: string]: RoomItem\r\n\t}\r\n}\r\n\r\nconst defaultState: RoomsState = {\r\n\tjoined: {},\r\n\tavailable: {},\r\n}\r\n\r\nexport default (state: RoomsState = defaultState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CREATE_ROOM':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjoined: { ...state.joined, [action.room.id]: action.room },\r\n\t\t\t}\r\n\t\tcase 'JOINED_ROOM':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjoined: { ...state.joined, [action.room.id]: action.room },\r\n\t\t\t}\r\n\r\n\t\tcase 'AVAILABLE_ROOMS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tavailable: {\r\n\t\t\t\t\t...action.rooms.reduce(\r\n\t\t\t\t\t\t(acc: any, value: RoomItem) => ({\r\n\t\t\t\t\t\t\t...acc,\r\n\t\t\t\t\t\t\t[value.id]: value,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t{},\r\n\t\t\t\t\t),\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\tcase 'SEND_MESSAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjoined: {\r\n\t\t\t\t\t...state.joined,\r\n\t\t\t\t\t[action.roomId]: {\r\n\t\t\t\t\t\t...[state.joined[action.roomId]],\r\n\t\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t\t...state.joined[action.roomId].messages,\r\n\t\t\t\t\t\t\t[action.message.id]: action.message,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'UPDATE_MESSAGES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjoined: {\r\n\t\t\t\t\t...state.joined,\r\n\t\t\t\t\t[action.roomId]: {\r\n\t\t\t\t\t\t...state.joined[action.roomId],\r\n\t\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t\t...state.joined[action.roomId].messages,\r\n\t\t\t\t\t\t\t...action.messages.reduce(\r\n\t\t\t\t\t\t\t\t(acc: any, message: Message) => ({\r\n\t\t\t\t\t\t\t\t\t...acc,\r\n\t\t\t\t\t\t\t\t\t[message.id]: message,\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t{},\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\t// case 'CLEAR_UNREAD':\r\n\t\t// \treturn state.map(room => {\r\n\t\t// \t\tif (room.name === action.roomName) {\r\n\t\t// \t\t\tconst people = room.people.map((person: Person) => {\r\n\t\t// \t\t\t\tif (person.id === action.uid) {\r\n\t\t// \t\t\t\t\treturn {\r\n\t\t// \t\t\t\t\t\t...person,\r\n\t\t// \t\t\t\t\t\tunread: action.unread,\r\n\t\t// \t\t\t\t\t\tlastRead: action.time,\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t} else {\r\n\t\t// \t\t\t\t\treturn person\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t})\r\n\t\t// \t\t\treturn { ...room, people }\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\treturn room\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\r\n\t\t// case 'LEAVE_ROOM':\r\n\t\t// \treturn state.filter(room => {\r\n\t\t// \t\treturn room.name !== action.roomName\r\n\t\t// \t})\r\n\t\t// case 'CLEAR_STATE':\r\n\t\t// \treturn []\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import authReducer from '../reducers/auth'\r\nimport roomsReducer from '../reducers/rooms'\r\nimport redirectReducer from '../reducers/redirect'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst reducers = combineReducers({\r\n\tauth: authReducer,\r\n\trooms: roomsReducer,\r\n\tredirect: redirectReducer,\r\n})\r\n\r\nexport default reducers\r\n","export default (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        uid: action.uid,\r\n        displayName: action.displayName\r\n      };\r\n    case \"LOGOUT\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = {}, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'REDIRECT_TO':\r\n\t\t\treturn {\r\n\t\t\t\tredirectTo: action.redirectTo,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { put, select, takeLatest, fork, call } from 'redux-saga/effects'\r\nimport database, { firebase, rsf } from '../firebase/firebase'\r\nimport { availableRooms, createRoom, syncMessages } from '../actions/rooms'\r\n\r\nimport { Query, CollectionReference } from '@firebase/firestore-types'\r\n\r\nconst byCreatedAt = function(a: any, b: any) {\r\n\t// @ts-ignore\r\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\r\n}\r\n\r\nexport function* fetchRoomSaga(roomId: string) {\r\n\tconsole.log('try fetch room ', roomId)\r\n\t// fetch joined room from firestore\r\n\tconst roomRef = database.collection('rooms').doc(roomId)\r\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\r\n\r\n\t// if we have such room\r\n\tif (roomDoc.exists) {\r\n\t\tconst room = roomDoc.data()\r\n\t\tconst people: any[] = []\r\n\t\tconst messages: any = {}\r\n\r\n\t\t// get room's people\r\n\t\tconst peopleQuery = yield call(\r\n\t\t\trsf.firestore.getCollection,\r\n\t\t\troomRef.collection('people'),\r\n\t\t)\r\n\t\tpeopleQuery.forEach((peopleDoc: any) => {\r\n\t\t\tpeople.push({ id: peopleDoc.id, ...peopleDoc.data() })\r\n\t\t})\r\n\t\tconsole.log({ people })\r\n\r\n\t\t// get room's messages first page\r\n\t\tconst messagePage = <CollectionReference>roomRef\r\n\t\t\t.collection('messages')\r\n\t\t\t.orderBy('createdAt', 'desc')\r\n\t\t\t.limit(25)\r\n\t\tconst messagesQuery = yield call(rsf.firestore.getCollection, messagePage)\r\n\r\n\t\tmessagesQuery.forEach((messageDoc: any) => {\r\n\t\t\tmessages[messageDoc.id] = { id: messageDoc.id, ...messageDoc.data() }\r\n\t\t})\r\n\t\t// messages.sort(byCreatedAt)\r\n\r\n\t\tyield put(\r\n\t\t\tcreateRoom({\r\n\t\t\t\tid: roomRef.id,\r\n\t\t\t\tname: room ? room.name : 'Error',\r\n\t\t\t\tpeople,\r\n\t\t\t\tmessages,\r\n\t\t\t}),\r\n\t\t)\r\n\r\n\t\t// subscribe to messages\r\n\t\tconst newestMessage = <CollectionReference>roomRef\r\n\t\t\t.collection('messages')\r\n\t\t\t.orderBy('createdAt', 'desc')\r\n\t\t\t.limit(1)\r\n\r\n\t\t// TODO merge this with other messages to save on reads\r\n\t\tyield fork(rsf.firestore.syncCollection, newestMessage, {\r\n\t\t\tsuccessActionCreator: (snapshot: any) => syncMessages(snapshot, roomId),\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// worker Saga\r\nfunction* initSlackerSaga(action: any) {\r\n\tconst auth = yield select(state => state.auth)\r\n\r\n\tif (!auth.uid) {\r\n\t\tconsole.log('no auth!')\r\n\t\treturn\r\n\t}\r\n\r\n\t// fetch all rooms\r\n\tconst roomsPromise = database.collection('rooms').get()\r\n\r\n\tconst roomsQuery: firebase.firestore.QuerySnapshot = yield roomsPromise\r\n\tconst rooms: RoomItem[] = []\r\n\troomsQuery.forEach(doc => {\r\n\t\tconst room = {\r\n\t\t\tid: doc.id,\r\n\t\t\t...doc.data(),\r\n\t\t}\r\n\t\t// @ts-ignore\r\n\t\trooms.push(room)\r\n\t})\r\n\r\n\tyield put(availableRooms(rooms))\r\n\tconst generalRoom = rooms.find(room => room.name === 'general')\r\n\r\n\t// get user rooms\r\n\tconst userRoomsQuery = yield call(\r\n\t\trsf.firestore.getCollection,\r\n\t\t`users/${auth.uid}/rooms`,\r\n\t)\r\n\r\n\tif (!userRoomsQuery.empty) {\r\n\t\tconst userRoomIds: string[] = []\r\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) =>\r\n\t\t\tuserRoomIds.push(userRoomDoc.id),\r\n\t\t)\r\n\r\n\t\t// fetch each joined room\r\n\t\tfor (let roomId of userRoomIds) {\r\n\t\t\tconst task = yield fork(fetchRoomSaga, roomId)\r\n\t\t}\r\n\r\n\t\t// if no general room, join that as well\r\n\t\tif (generalRoom && !userRoomIds.includes(generalRoom.id)) {\r\n\t\t\tyield put({\r\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\r\n\t\t\t\troomId: generalRoom.id,\r\n\t\t\t\troom: generalRoom,\r\n\t\t\t})\r\n\t\t}\r\n\t} else {\r\n\t\tif (generalRoom) {\r\n\t\t\tyield put({\r\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\r\n\t\t\t\troomId: generalRoom.id,\r\n\t\t\t\troom: generalRoom,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction* mySaga() {\r\n\tyield takeLatest('INIT_SLACKER_SAGA', initSlackerSaga)\r\n}\r\n\r\nexport default mySaga\r\n","import { put, select, takeEvery, fork, call } from 'redux-saga/effects'\r\nimport { AnyAction } from 'redux'\r\nimport database, { firebase, rsf } from '../firebase/firebase'\r\nimport { joinedRoom, showError, syncMessages } from '../actions/rooms'\r\nimport { fetchRoomSaga } from './initSaga'\r\n\r\nconst byCreatedAt = function(a: any, b: any) {\r\n\t// @ts-ignore\r\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\r\n}\r\n\r\nfunction* joinRoom(action: AnyAction) {\r\n\tconst { roomId } = action\r\n\tconst { uid, displayName } = yield select(state => state.auth)\r\n\tconst roomRef = database.doc(`rooms/${roomId}`)\r\n\r\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\r\n\tconst room = <RoomItem>{ id: roomDoc.id, ...roomDoc.data() }\r\n\r\n\tif (!room || !roomDoc.exists) {\r\n\t\tyield put(showError('Room not found!'))\r\n\t\treturn\r\n\t} else if (\r\n\t\troom.people &&\r\n\t\troom.people.find((person: Person) => person.id === uid)\r\n\t) {\r\n\t\t// if we are already in this room then\r\n\t\t// history.push(`room/${data.roomName}`);\r\n\t\t// return i guess ?\r\n\t\treturn\r\n\t} else {\r\n\t\t// we should add ourselves to this room\r\n\r\n\t\tconst person = {\r\n\t\t\tname: displayName,\r\n\t\t\tid: uid,\r\n\t\t\tunread: 0,\r\n\t\t\tlastRead: 0,\r\n\t\t}\r\n\r\n\t\t// TODO figure wtf is wrong here\r\n\t\tyield call(\r\n\t\t\t// @ts-ignore\r\n\t\t\trsf.firestore.setDocument,\r\n\t\t\t`rooms/${roomId}/people/${person.id}`,\r\n\t\t\tperson,\r\n\t\t)\r\n\r\n\t\tyield call(\r\n\t\t\t// @ts-ignore\r\n\t\t\trsf.firestore.setDocument,\r\n\t\t\t`users/${person.id}/rooms/${roomId}`,\r\n\t\t\t{ roomName: room.name },\r\n\t\t)\r\n\r\n\t\t// fetch full room and subscribe\r\n\t\tyield call(fetchRoomSaga, roomId)\r\n\t}\r\n}\r\n\r\nfunction* joinRoomSaga() {\r\n\tyield takeEvery('JOIN_ROOM_SAGA', joinRoom)\r\n}\r\n\r\nexport default joinRoomSaga\r\n","import { all } from 'redux-saga/effects'\r\nimport initSaga from './initSaga'\r\nimport joinRoomSaga from './joinRoomSaga'\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([initSaga(), joinRoomSaga()])\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport reducers from '../reducers'\r\n\r\nimport mySaga from '../sagas/rootSaga'\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport default () => {\r\n\tconst store = createStore(\r\n\t\treducers,\r\n\t\tcomposeEnhancers(applyMiddleware(thunk, sagaMiddleware)),\r\n\t)\r\n\r\n\tsagaMiddleware.run(mySaga)\r\n\r\n\treturn store\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport ReactDOM from 'react-dom'\r\nimport 'antd/dist/antd.css'\r\n\r\nimport App from './containers/App'\r\nimport configureStore from './store/configureStore'\r\n\r\nconst store = configureStore()\r\nconst jsx = (\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<Route path={'/'} component={App} />\r\n\t\t</Router>\r\n\t</Provider>\r\n)\r\n\r\nReactDOM.render(jsx, document.getElementById('container'))\r\n"],"sourceRoot":""}