{"version":3,"sources":["components/LoadingSpinner.tsx","components/Message.tsx","firebase/firebase.ts","actions/rooms.ts","components/ChatInput.tsx","actions/auth.ts","components/ProfileDialog.tsx","containers/AppHeader.tsx","utils/misc.ts","selectors/room.ts","containers/Room.tsx","components/CreateChatDialog.tsx","components/BrowseRoomsDialog.tsx","containers/App.tsx","reducers/rooms.ts","reducers/index.ts","reducers/auth.ts","reducers/redirect.ts","sagas/initSaga.ts","sagas/joinRoomSaga.ts","sagas/rootSaga.ts","store/configureStore.ts","index.tsx"],"names":["LoadingWrapper","styled","div","_templateObject","LoadingSpinner","react_default","a","createElement","spin","size","MessageLayout","Message_templateObject","LeftPanel","_templateObject2","RightPanel","_templateObject3","MessageHeader","_templateObject4","Message","_ref","children","name","isConsecutive","avatar","shape","icon","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rsf","ReduxSagaFirebase","database","firestore","githubAuthProvider","auth","GithubAuthProvider","byCreatedAt","b","Date","createdAt","getTime","createRoom","id","people","_ref$messages","messages","type","room","showError","message","trySendMessage","text","roomId","status","arguments","length","undefined","dispatch","getState","user","sender","uid","displayName","moment","format","collection","concat","add","availableRooms","rooms","syncMessages","messagesSnapshot","forEach","doc","push","Object","objectSpread","data","sort","updateMessages","InputForm","form","ChatInput_templateObject","Input","input","ChatInput_templateObject2","SendButton","button","ChatInput_templateObject3","ChatInput","state","value","handleTyping","e","_this","setState","target","handleSend","preventDefault","props","onSubmit","this","onChange","Component","connect","loginSuccess","tryLoginAnonymously","signInAnonymously","then","response","catch","error","console","log","code","TextArea","Typography","Text","Title","LoginProviders","ProfileDialog_templateObject","ProfileDialog","handleTryLogin","tryLoginProvider","handleClose","modal","title","visible","isOpen","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","level","row","col","span","es_button","onClick","style","margin","fontSize","signInWithPopup","Header","Layout","AccountButton","AppHeader_templateObject","TopRightMenu","AppHeader_templateObject2","AppHeader","profileOpen","handleProfileOpen","handleProfileClose","menu","es_menu","Item","background","borderBottom","padding","display","flexDirection","alignItems","justifyContent","AppHeader_Title","dropdown","overlay","placement","components_ProfileDialog","getProps","createSelector","ownProps","match","params","joined","values","isLoading","Content","ChatWrapper","Room_templateObject","Messages","Room_templateObject2","RoomContainer","messagesEnd","messagesContainer","scrollToBottom","scrollIntoView","behavior","prevProps","previousLastMessage","slice","currentLastMessage","_this$messagesContain","scrollHeight","scrollTop","clientHeight","offsetHeight","Math","abs","_this2","_this$props","content","components_LoadingSpinner","ref","el","map","idx","components_Message","key","float","clear","components_ChatInput","react","containers_AppHeader","overflow","TextWrap","CreateChatDialog_templateObject","CreateChatDialog","roomName","description","handleChange","defineProperty","handleSubmit","_this$props$auth","userDisplayName","unread","lastRead","tryCreateRoom","CreateChatDialog_Text","CreateChatDialog_TextArea","rows","roomData","showCreateError","get","snapshot","find","r","roomRef","set","Label","BrowseRoomsDialog_templateObject","BrowseRoomsDialog","handleJoinRoom","canJoin","tryJoinRoom","bodyStyle","maxHeight","overflowY","list","dataSource","roomList","renderItem","item","Meta","avatarUrl","src","_state$rooms","available","Sider","LogoWrap","App_templateObject","Logo","img","App_templateObject2","RoomButtons","App_templateObject3","MenuButton","App_templateObject4","App","openDialog","handleCloseDialog","handleOpenDialog","dialogName","handleRoomSelect","history","initAuth","nextProps","initSlacker","location","joinedRooms","pathname","layout","height","position","left","components_CreateChatDialog","components_BrowseRoomsDialog","theme","mode","onSelect","selectedKeys","className","marginLeft","react_router","path","component","onAuthStateChanged","defaultState","reducers","combineReducers","action","reduce","acc","redirect","redirectTo","fetchRoomSaga","initSlackerSaga","mySaga","roomDoc","messagePage","newestMessage","regenerator_default","wrap","_context","prev","next","call","getDocument","sent","exists","getCollection","peopleDoc","orderBy","limit","messageDoc","put","fork","syncCollection","successActionCreator","stop","_marked","roomsPromise","roomsQuery","generalRoom","userRoomsQuery","userRoomIds","_i","_userRoomIds","_context2","select","abrupt","empty","userRoomDoc","includes","_marked2","_context3","takeLatest","_marked3","joinRoom","joinRoomSaga","person","setDocument","joinRoomSaga_marked","takeEvery","joinRoomSaga_marked2","rootSaga","all","initSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","configureStore","jsx","es","react_router_dom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b502ade8.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Spin } from 'antd'\n\nconst LoadingWrapper = styled.div`\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst LoadingSpinner = () => (\n\t<LoadingWrapper>\n\t\t<Spin size=\"large\" />\n\t</LoadingWrapper>\n)\n\nexport default LoadingSpinner\n","import React, { FunctionComponent } from 'react'\nimport { Avatar } from 'antd'\nimport styled from 'styled-components'\n\nconst MessageLayout = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 2px;\n`\n\nconst LeftPanel = styled.div`\n\twidth: 46px;\n\tpadding: 5px;\n`\n\n// const Avatar = styled.div`\n// \t/* width: 35px;\n// \theight: 35px;\n// \tmargin: 5px;\n// \tborder-radius: 2px;\n// \tbackground-color: #cecece;\n// ` */\n\nconst RightPanel = styled.div`\n\tcolor: black;\n`\n\nconst MessageHeader = styled.div`\n\tcolor: black;\n\tfont-weight: bold;\n\tmargin-top: 2px;\n`\n\ninterface Props {\n\tname: string\n\tisConsecutive?: boolean\n}\n\nconst Message: FunctionComponent<Props> = ({\n\tchildren,\n\tname,\n\tisConsecutive,\n}) => {\n\tif (isConsecutive) {\n\t\treturn (\n\t\t\t<MessageLayout>\n\t\t\t\t<LeftPanel />\n\t\t\t\t<RightPanel>{children}</RightPanel>\n\t\t\t</MessageLayout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<MessageLayout>\n\t\t\t<LeftPanel>\n\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\n\t\t\t</LeftPanel>\n\t\t\t<RightPanel>\n\t\t\t\t<MessageHeader>{name}</MessageHeader>\n\t\t\t\t{children}\n\t\t\t</RightPanel>\n\t\t</MessageLayout>\n\t)\n}\n\nexport default Message\n","import firebase from 'firebase'\nimport '@firebase/firestore' // 👈 Don't forget this!\nimport ReduxSagaFirebase from 'redux-saga-firebase'\nconst config = {\n\tapiKey: 'AIzaSyB2tCxT6yP0CWtCbD9JDj3ZKaxxW8T25PI',\n\tauthDomain: 'slacker-c3b01.firebaseapp.com',\n\tdatabaseURL: 'https://slacker-c3b01.firebaseio.com',\n\tprojectId: 'slacker-c3b01',\n\tstorageBucket: 'slacker-c3b01.appspot.com',\n\tmessagingSenderId: '286218247810',\n}\nconst firebaseApp = firebase.initializeApp(config)\nconst rsf = new ReduxSagaFirebase(firebaseApp)\nconst database = firebase.firestore()\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\n\nconst auth = firebase.auth()\n\nexport { firebase, rsf, auth, githubAuthProvider, database as default }\n","import database, { firebase } from '../firebase/firebase'\nimport moment from 'moment'\n// import { ipcRenderer } from 'electron';\n\nconst byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}\n\nexport interface RoomData {\n\tid?: string\n\tname: string\n\tpeople: any\n\tmessages?: any\n}\n\nexport const createRoom = ({ id, name, people, messages = [] }: RoomData) => ({\n\ttype: 'CREATE_ROOM',\n\troom: {\n\t\tid,\n\t\tname,\n\t\tpeople,\n\t\tmessages,\n\t},\n})\n\nexport const joinedRoom = (joinedRoom: RoomItem) => ({\n\ttype: 'JOINED_ROOM',\n\tjoinedRoom,\n})\n\nexport const tryJoinRoom = (roomId: string) => ({\n\ttype: 'JOIN_ROOM_SAGA',\n\troomId\n})\n\nexport const tryCreateRoom = (roomData: RoomData, showCreateError: any) => {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\tconst room = {\n\t\t\tname: roomData.name,\n\t\t}\n\t\t// get all rooms\n\t\treturn database\n\t\t\t.collection('rooms')\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst rooms: Room[] = []\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\tconsole.log(doc)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst room: Room = doc.data()\n\t\t\t\t\trooms.push({\n\t\t\t\t\t\t...room,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// if no room with this name\n\t\t\t\tif (!rooms.find(r => r.name === room.name)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t.collection('rooms')\n\t\t\t\t\t\t\t.add(room)\n\t\t\t\t\t\t\t// create this room and\n\t\t\t\t\t\t\t.then(roomRef => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t.collection(`rooms/${roomRef.id}/people`)\n\t\t\t\t\t\t\t\t\t\t.doc(roomData.people.id)\n\t\t\t\t\t\t\t\t\t\t// assign people to it?\n\t\t\t\t\t\t\t\t\t\t.set(roomData.people)\n\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t\t\t.collection(`users/${roomData.people.id}/rooms`)\n\t\t\t\t\t\t\t\t\t\t\t\t.doc(roomRef.id)\n\t\t\t\t\t\t\t\t\t\t\t\t.set({ roomName: room.name })\n\n\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\tcreateRoom({\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: roomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t...roomData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpeople: [roomData.people],\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\tconst perName = roomData.people.name\n\t\t\t\t\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t\t\t\t\t// \tstartSendMessage(\n\t\t\t\t\t\t\t\t\t\t\t// \t\t`${perName} created this room`,\n\t\t\t\t\t\t\t\t\t\t\t// \t\troom.name,\n\t\t\t\t\t\t\t\t\t\t\t// \t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t// \t),\n\t\t\t\t\t\t\t\t\t\t\t// ).then(() => {\n\t\t\t\t\t\t\t\t\t\t\t// \tdispatch(startListening(room.name))\n\t\t\t\t\t\t\t\t\t\t\t// \t// history.push(`/room/${room.name}`);\n\t\t\t\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn showCreateError('Room name not available!')\n\t\t\t\t}\n\t\t\t})\n\t}\n}\n\nconst isAlreadyAdded = (data: any, id: string) => {\n\tfor (var key in data) {\n\t\tif (data[key].id === id) return true\n\t}\n\treturn false\n}\n\nexport const showError = (message: string) => ({\n\ttype: 'ERROR_MESSAGE',\n\tmessage,\n})\n\n// export const sendMessage = (message: any, roomId: string) => ({\n// \ttype: 'SEND_MESSAGE',\n// \tmessage,\n// \troomId,\n// })\n\nexport const updateMessages = (messages: any, roomId: string) => ({\n\ttype: 'UPDATE_MESSAGES',\n\tmessages,\n\troomId,\n})\n\nexport const trySendMessage = (\n\ttext: string,\n\troomId: string,\n\tstatus: boolean = false,\n) => {\n\treturn (dispatch: any, getState: any) => {\n\t\tconst user = getState().auth\n\t\tif (user) {\n\t\t\tconst uid = user.uid\n\t\t\tconst displayName = user.displayName\n\t\t\tconst message = {\n\t\t\t\tsender: { uid, displayName },\n\t\t\t\ttext,\n\t\t\t\tcreatedAt: moment().format(),\n\t\t\t\tstatus,\n\t\t\t}\n\t\t\treturn database.collection(`rooms/${roomId}/messages`).add(message)\n\t\t}\n\t}\n}\n\nexport const orderRoomsStartState = () => ({\n\ttype: 'ORDER_ROOMS_START_STATE',\n})\n\nexport const availableRooms = (rooms: RoomItem[]) => ({\n\ttype: 'AVAILABLE_ROOMS',\n\trooms,\n})\n\nexport const initSlacker = () => ({\n\ttype: 'INIT_SLACKER_SAGA',\n})\n\nexport const clearState = {\n\ttype: 'CLEAR_STATE',\n}\n\nexport const leaveRoom = (roomName: string, userId: string) => ({\n\ttype: 'LEAVE_ROOM',\n\troomName,\n\tuserId,\n})\n\n// export const startLeaveRoom = (roomName: string) => {\n// \treturn (dispatch: any, getState: any) => {\n// \t\tconst user = getState().auth\n// \t\tif (user) {\n// \t\t\tconst userId = user.uid\n// \t\t\tconst displayName = user.displayName\n// \t\t\tdatabase.ref(`rooms/${roomName}/people/${userId}`).remove()\n// \t\t\tdatabase.ref(`users/${userId}/rooms/${roomName}`).remove(() => {\n// \t\t\t\tdispatch(leaveRoom(roomName, userId))\n// \t\t\t\tdispatch(startSendMessage(`${displayName} left`, roomName, true))\n// \t\t\t\t// history.push(\"/join\");\n// \t\t\t})\n// \t\t}\n// \t}\n// }\n\nexport const clearUnread = (\n\troomName: string,\n\tuid: string,\n\ttime: any,\n\tunread: number,\n) => ({\n\ttype: 'CLEAR_UNREAD',\n\troomName,\n\tuid,\n\ttime,\n\tunread,\n})\n\nexport const setUnread = (\n\troomName: string,\n\tuid: string,\n\ttime: any,\n\tunread: number,\n) => {\n\treturn (dispatch: any) => {\n\t\tdispatch(clearUnread(roomName, uid, time, unread))\n\t}\n}\n\n// export const startClearUnread = (roomName: string) => {\n// \treturn (dispatch: any, getState: any) => {\n// \t\t// let time = moment().endOf(\"month\");\n// \t\tconst uid = getState().auth.uid\n// \t\tif (uid) {\n// \t\t\tconst time = moment().format()\n// \t\t\treturn database\n// \t\t\t\t.ref(`rooms/${roomName}/people/${uid}`)\n// \t\t\t\t.update({\n// \t\t\t\t\tunread: 0,\n// \t\t\t\t\tlastRead: time,\n// \t\t\t\t})\n// \t\t\t\t.then(() => {\n// \t\t\t\t\tdispatch(clearUnread(roomName, uid, time, 0))\n// \t\t\t\t})\n// \t\t}\n// \t}\n// }\n\nexport const onLeft = (roomName: string, personID: string) => ({\n\ttype: 'ON_LEFT',\n\troomName,\n\tpersonID,\n})\n\nexport const onJoined = (roomName: string, person: any) => ({\n\ttype: 'ON_JOINED',\n\troomName,\n\tperson,\n})\n\nexport const syncMessages = (messagesSnapshot: any, roomId: string) => {\n\tconst messages: any[] = []\n\tmessagesSnapshot.forEach((doc: any) => {\n\t\tmessages.push({ id: doc.id, ...doc.data() })\n\t})\n\n\tmessages.sort(byCreatedAt)\n\treturn updateMessages(messages, roomId)\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { trySendMessage } from '../actions/rooms'\n\nconst InputForm = styled.form`\n\theight: 44px;\n\tbackground-color: #fff;\n\tborder-radius: 4px;\n\tborder: 1px solid #acacac;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-shrink: 0;\n`\n\nconst Input = styled.input`\n\tpadding-left: 14px;\n\tborder: none;\n\tborder-radius: 4px;\n\tflex-grow: 1;\n\toutline: none;\n`\n\nconst SendButton = styled.button`\n\tflex-shrink: 0;\n\tpadding: 0px 15px;\n\tbackground: none;\n\tborder: none;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\ttrySendMessage: (text: string, roomId: string) => void\n}\n\ninterface State {\n\tvalue: string\n}\n\nclass ChatInput extends Component<Props, State> {\n\tstate = {\n\t\tvalue: '',\n\t}\n\n\thandleTyping = (e: any) => {\n\t\tthis.setState({ value: e.target.value })\n\t}\n\n\thandleSend = (e: any) => {\n\t\te.preventDefault()\n\t\tconst { room } = this.props\n\t\tconst text = this.state.value\n\t\tif (!!room && !!room.id && text.length > 0) {\n\t\t\tthis.props.trySendMessage(text, room.id)\n\t\t\tthis.setState({\n\t\t\t\tvalue: '',\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<InputForm onSubmit={this.handleSend}>\n\t\t\t\t<Input value={this.state.value} onChange={this.handleTyping} />\n\t\t\t\t<SendButton type={'submit'}>Send</SendButton>\n\t\t\t</InputForm>\n\t\t)\n\t}\n}\n\nexport default connect(\n\tnull,\n\t{ trySendMessage },\n)(ChatInput)\n","import { auth, githubAuthProvider } from '../firebase/firebase'\n\nexport const loginSuccess = (uid: string, displayName: string) => ({\n\ttype: 'LOGIN',\n\tuid,\n\tdisplayName,\n})\n\nexport const initAuth = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth.onAuthStateChanged(user => {\n\t\t\tif (user) {\n\t\t\t\t// user authenticated, update redux\n\t\t\t\tif (user) {\n\t\t\t\t\tconst displayName = user.displayName || 'Ninja'\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, displayName))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// no saved user, create shadow\n\t\t\t\ttryLoginAnonymously()(dispatch)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const tryLoginAnonymously = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth\n\t\t\t.signInAnonymously()\n\t\t\t.then(response => {\n\t\t\t\t// console.log(response);\n\t\t\t\tconst { user } = response\n\n\t\t\t\tif (user) {\n\t\t\t\t\tconst displayName = user.displayName || 'Ninja'\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, displayName))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\t\t\t\t// Handle Errors here.\n\t\t\t\tvar errorCode = error.code\n\t\t\t\tvar errorMessage = error.message\n\t\t\t\t// ...\n\t\t\t})\n\t}\n}\n\nexport const tryLoginProvider = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth\n\t\t\t.signInWithPopup(githubAuthProvider)\n\t\t\t.then(response => {\n\t\t\t\tconst { user } = response\n\n\t\t\t\tconsole.log({ user })\n\n\t\t\t\tif (user) {\n\t\t\t\t\tconst displayName = user.displayName || 'Ninja'\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, displayName))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\t\t\t\t// Handle Errors here.\n\t\t\t\tvar errorCode = error.code\n\t\t\t\tvar errorMessage = error.message\n\t\t\t\t// ...\n\t\t\t})\n\t}\n}\n\nexport const logout = () => ({\n\ttype: 'LOGOUT',\n})\n\nexport const tryLogout = () => {\n\treturn () => {\n\t\treturn auth.signOut().then(() => {\n\t\t\tconsole.log('log out!!!')\n\t\t})\n\t}\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Input, Typography, Row, Col, Icon, Button } from 'antd'\nimport { tryLoginProvider } from '../actions/auth'\nconst { TextArea } = Input\nconst { Text, Title } = Typography\n\nconst LoginProviders = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryLoginProvider: () => Promise<any>\n\tauth: Auth\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass ProfileDialog extends Component<Props, State> {\n\thandleTryLogin = () => {\n\t\tthis.props.tryLoginProvider().then(() => {\n\t\t\tthis.props.handleClose()\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Profile\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<Title level={4}>Login with</Title>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<LoginProviders>\n\t\t\t\t\t\t\t\t<Button onClick={this.handleTryLogin} style={{ margin: 5 }}>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"github\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"google\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</LoginProviders>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryLoginProvider },\n)(ProfileDialog)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Layout, Typography, Avatar, Menu, Dropdown } from 'antd'\n\nimport ProfileDialog from '../components/ProfileDialog'\n\nconst { Header } = Layout\nconst { Title } = Typography\n\nconst AccountButton = styled.button`\n\tbackground: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 4px;\n\ttransition: border 0.5s;\n\toutline: none;\n\tpadding: 0px;\n\tline-height: normal;\n\tcursor: pointer;\n`\n\nconst TopRightMenu = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n`\n\ninterface Props {\n\troom?: RoomItem\n}\n\ninterface State {\n\tprofileOpen: boolean\n}\n\nclass AppHeader extends Component<Props, State> {\n\tstate = {\n\t\tprofileOpen: false,\n\t}\n\n\thandleProfileOpen = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: true,\n\t\t})\n\t}\n\n\thandleProfileClose = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: false,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { room } = this.props\n\t\t// TODO plan what is in here\n\t\tconst menu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item onClick={this.handleProfileOpen}>\n\t\t\t\t\t<a>Profile</a>\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<a>2nd menu item</a>\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<a>3rd menu item</a>\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\t\treturn (\n\t\t\t<Header\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\tborderBottom: '1px solid #acacac',\n\t\t\t\t\tpadding: 16,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Title style={{ margin: 0 }} level={3}>\n\t\t\t\t\t# {room ? room.name : ''}\n\t\t\t\t</Title>\n\t\t\t\t<TopRightMenu>\n\t\t\t\t\t<Dropdown overlay={menu} placement=\"bottomLeft\">\n\t\t\t\t\t\t<AccountButton onClick={this.handleProfileOpen}>\n\t\t\t\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\n\t\t\t\t\t\t</AccountButton>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<ProfileDialog\n\t\t\t\t\t\tisOpen={this.state.profileOpen}\n\t\t\t\t\t\thandleClose={this.handleProfileClose}\n\t\t\t\t\t/>\n\t\t\t\t</TopRightMenu>\n\t\t\t</Header>\n\t\t)\n\t}\n}\n\nexport default connect()(AppHeader)\n","export const byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}","import { createSelector } from 'reselect'\nimport { byCreatedAt } from '../utils/misc'\n\nconst getAuth = (state: StoreState) => state.auth\n\nconst getRoom = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\treturn state.rooms.joined[roomId]\n}\n\nconst getRoomMessages = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\tconst room = state.rooms.joined[roomId]\n\treturn room ? Object.values(room.messages).sort(byCreatedAt) : []\n}\n\nconst getProps = createSelector(\n\tgetRoom,\n\tgetRoomMessages,\n\tgetAuth,\n\t(room, messages, auth) => {\n\t\treturn {\n\t\t\tauth,\n\t\t\troom,\n\t\t\tmessages,\n\t\t\tisLoading: !room,\n\t\t}\n\t},\n)\n\nexport default getProps\n","import React, { Fragment, Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Layout, Typography } from 'antd'\n\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport Message from '../components/Message'\nimport ChatInput from '../components/ChatInput'\nimport AppHeader from './AppHeader'\n\nimport { trySendMessage } from '../actions/rooms'\nimport getProps from '../selectors/room'\n\nconst { Content } = Layout\n\nconst ChatWrapper = styled.div`\n\t/* height: 100%; */\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n`\n\nconst Messages = styled.div`\n\tpadding-top: 8px;\n\tpadding-bottom: 8px;\n\tflex-grow: 1;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n`\n\ninterface Props {\n\tauth: Auth\n\troom: RoomItem | undefined\n\tmatch: any\n\tisLoading: boolean\n\tmessages: Message[]\n\ttrySendMessage: (text: string, roomId: string, status?: boolean) => void\n}\n\nclass RoomContainer extends Component<Props> {\n\tmessagesEnd: any = null\n\tmessagesContainer: HTMLElement | null = null\n\n\tcomponentWillMount() {\n\t\tconst { roomId } = this.props.match.params\n\t\tconsole.log(roomId)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.scrollToBottom()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\t// scroll management\n\t\tif (prevProps.messages.length === 0 && this.props.messages.length > 0) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.room &&\n\t\t\tthis.props.room &&\n\t\t\tprevProps.room.id !== this.props.room.id\n\t\t) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.messages.length !== this.props.messages.length &&\n\t\t\tprevProps.messages.length > 0 &&\n\t\t\tthis.props.messages.length > 0\n\t\t) {\n\t\t\tconst previousLastMessage = prevProps.messages.slice(-1)[0]\n\t\t\tconst currentLastMessage = this.props.messages.slice(-1)[0]\n\t\t\tif (\n\t\t\t\tpreviousLastMessage.id !== currentLastMessage.id &&\n\t\t\t\t!!currentLastMessage &&\n\t\t\t\tcurrentLastMessage.sender.uid === this.props.auth.uid\n\t\t\t) {\n\t\t\t\t// last message was ours, scroll to the bottom\n\t\t\t\tthis.scrollToBottom()\n\t\t\t} else if (this.messagesContainer) {\n\t\t\t\t// last message is not ours, lets check scroll\n\t\t\t\tconst {\n\t\t\t\t\tscrollHeight,\n\t\t\t\t\tscrollTop,\n\t\t\t\t\toffsetHeight,\n\t\t\t\t\tclientHeight,\n\t\t\t\t} = this.messagesContainer\n\t\t\t\tconst calculato = scrollHeight - scrollTop === clientHeight\n\n\t\t\t\t// if our scroll is around bottom 2 messages, scroll to bottom pls\n\t\t\t\tif (Math.abs(clientHeight - (scrollHeight - scrollTop - 45)) < 45) {\n\t\t\t\t\tthis.scrollToBottom()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tscrollToBottom = () => {\n\t\tif (this.messagesEnd) {\n\t\t\tthis.messagesEnd.scrollIntoView({ behavior: 'auto' })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { room, messages, isLoading } = this.props\n\t\tlet content = <LoadingSpinner />\n\t\tif (!isLoading) {\n\t\t\tcontent = (\n\t\t\t\t<ChatWrapper>\n\t\t\t\t\t<Messages\n\t\t\t\t\t\tref={el => {\n\t\t\t\t\t\t\tthis.messagesContainer = el\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{messages.map((message, idx) => (\n\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\tisConsecutive={\n\t\t\t\t\t\t\t\t\t!!messages[idx - 1] &&\n\t\t\t\t\t\t\t\t\tmessages[idx - 1].sender.uid === message.sender.uid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={message.sender.displayName || ''}\n\t\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{message.text}\n\t\t\t\t\t\t\t</Message>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ float: 'left', clear: 'both' }}\n\t\t\t\t\t\t\tref={el => {\n\t\t\t\t\t\t\t\tthis.messagesEnd = el\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Messages>\n\t\t\t\t\t<ChatInput room={this.props.room} />\n\t\t\t\t</ChatWrapper>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<AppHeader room={room} />\n\t\t\t\t<Content\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: '0px 16px 24px 16px',\n\t\t\t\t\t\toverflow: 'initial',\n\t\t\t\t\t\tdisplay: 'flex'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{content}\n\t\t\t\t</Content>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: any) =>\n\tgetProps(state, ownProps)\nexport default connect(\n\tmapStateToProps,\n\t{ trySendMessage },\n)(RoomContainer)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Input, Typography } from 'antd'\nimport { tryCreateRoom, RoomData } from '../actions/rooms'\n\nconst { TextArea } = Input\nconst { Text } = Typography\n\nconst TextWrap = styled.div`\n\tmargin-top: 5px;\n\tmargin-bottom: 5px;\n`\n\ninterface Props {\n\tisOpen: boolean;\n\thandleClose: () => void;\n\ttryCreateRoom: (roomData: RoomData, showCreateError?: any) => Promise<any>;\n\tauth: Auth;\n}\n\ninterface State {\n\troomName: string;\n\tdescription: string;\n}\n\nclass CreateChatDialog extends Component<Props, State> {\n\tstate = {\n\t\troomName: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = (e: any) => {\n\t\tconsole.log(e.target.name)\n\t\t// @ts-ignore\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\thandleSubmit = () => {\n\t\tconst { uid, displayName: userDisplayName } = this.props.auth\n\t\tif (uid) {\n\t\t\tconsole.log('Create this room pls')\n\t\t\tconst roomName = this.state.roomName\n\t\t\tif (roomName && roomName.length > 0) {\n\t\t\t\t// this.setState({ error: '' })\n\t\t\t\tconst room = {\n\t\t\t\t\tname: roomName,\n\t\t\t\t\tpeople: {\n\t\t\t\t\t\tid: uid,\n\t\t\t\t\t\tname: userDisplayName,\n\t\t\t\t\t\tunread: 0,\n\t\t\t\t\t\tlastRead: 0,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tthis.props.tryCreateRoom(room)\n\t\t\t\tthis.props.handleClose()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Create Room\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.handleSubmit}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Name:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"roomName\"\n\t\t\t\t\tvalue={this.state.roomName}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Description:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<TextArea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trows={4}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryCreateRoom },\n)(CreateChatDialog)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, List, Avatar, Button } from 'antd'\n\nimport { tryJoinRoom } from '../actions/rooms'\n\nconst Label = styled.div`\n\tpadding: 10px;\n`\n\ninterface RoomWithAvailability extends RoomItem {\n\tcanJoin: boolean\n}\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryJoinRoom: (roomId: string) => void\n\tauth: Auth\n\troomList: Array<RoomWithAvailability>\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass BrowseRoomsDialog extends Component<Props, State> {\n\thandleJoinRoom = (room: RoomWithAvailability) => {\n\t\tif (!room.canJoin) {\n\t\t\tconsole.log('redirect to that room')\n\t\t\tthis.props.handleClose()\n\t\t\treturn\n\t\t}\n\n\t\tthis.props.tryJoinRoom(room.id)\n\t\t// this.props.handleClose()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Browse Rooms\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tbodyStyle={{ maxHeight: 450, overflowY: 'scroll' }}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tdataSource={this.props.roomList}\n\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t<List.Item key={item.id}>\n\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\tavatar={item.avatarUrl ? <Avatar src={item.avatarUrl} /> : null}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<a onClick={() => this.handleJoinRoom(item)}>{item.name}</a>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdescription={'TODO room descriptions'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item.canJoin ? (\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Label>joined</Label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t</List>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { available, joined } = state.rooms\n\tconst roomList = Object.values(available).map(room => {\n\t\tconst canJoin =\n\t\t\tObject.values(joined).find(item => item.id === room.id) === undefined\n\t\treturn {\n\t\t\t...room,\n\t\t\tcanJoin,\n\t\t}\n\t})\n\treturn {\n\t\troomList,\n\t\tauth: state.auth,\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryJoinRoom },\n)(BrowseRoomsDialog)\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Icon } from 'antd'\n\nimport RoomContainer from './Room'\nimport CreateChatDialog from '../components/CreateChatDialog'\nimport BrowseRoomsDialog from '../components/BrowseRoomsDialog'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\nimport { initAuth } from '../actions/auth'\nimport { initSlacker } from '../actions/rooms'\n\nimport '../styles/index.css'\n\nconst { Sider } = Layout\n// const { Text } = Typography\n\nconst LogoWrap = styled.div`\n\ttext-align: center;\n\tpadding: 10px;\n\theight: 64px;\n\tborder-bottom: 1px solid grey;\n`\n\nconst Logo = styled.img`\n\theight: 100%;\n`\n\nconst RoomButtons = styled.div`\n\tpadding: 10px;\n\tcolor: rgba(255, 255, 255, 0.65);\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`\n\nconst MenuButton = styled.button`\n\tfont-size: 16px;\n\tbackground: none;\n\tborder: none;\n\t-webkit-transition: color 0.5s;\n\ttransition: color 0.5s;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: #fff;\n\t}\n`\n\ninterface Props {\n\tinitAuth: () => void\n\tinitSlacker: () => void\n\tauth: Auth\n\tjoinedRooms: RoomItem[]\n\tavailableRooms: RoomItem[]\n\thistory: any\n\tlocation: {\n\t\tpathname: any\n\t}\n}\n\ninterface State {\n\topenDialog: string | false\n}\n\nclass App extends Component<Props, State> {\n\tstate: State = {\n\t\topenDialog: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initAuth()\n\t}\n\n\tcomponentWillUpdate(nextProps: Props) {\n\t\tif (!this.props.auth.uid && nextProps.auth.uid) {\n\t\t\tthis.props.initSlacker()\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\tconst { location, joinedRooms, history } = this.props\n\t\tif (\n\t\t\tlocation.pathname === '/' &&\n\t\t\tprevProps.joinedRooms.length === 0 &&\n\t\t\tjoinedRooms.length !== 0\n\t\t) {\n\t\t\tconsole.log('redirect to first room?')\n\t\t\thistory.push(`/r/${joinedRooms[0].id}`)\n\t\t}\n\t}\n\n\thandleCloseDialog = () => {\n\t\tthis.setState({\n\t\t\topenDialog: false,\n\t\t})\n\t}\n\n\thandleOpenDialog = (dialogName: string) => {\n\t\tthis.setState({\n\t\t\topenDialog: dialogName,\n\t\t})\n\t}\n\n\thandleRoomSelect = ({ key }: { key: string }) => {\n\t\tthis.props.history.push(key)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout style={{ height: '100%' }}>\n\t\t\t\t<Sider\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\theight: '100vh',\n\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<LogoWrap>\n\t\t\t\t\t\t<Logo src=\"fox.png\" />\n\t\t\t\t\t</LogoWrap>\n\n\t\t\t\t\t<RoomButtons>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('browseRooms')}>\n\t\t\t\t\t\t\t<span>Rooms:</span>\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('createRoom')}>\n\t\t\t\t\t\t\t<Icon type=\"plus-circle\" />\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t</RoomButtons>\n\t\t\t\t\t<CreateChatDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'createRoom'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<BrowseRoomsDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'browseRooms'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\t\tonSelect={this.handleRoomSelect}\n\t\t\t\t\t\tselectedKeys={[this.props.location.pathname]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.joinedRooms.map(room => (\n\t\t\t\t\t\t\t<Menu.Item key={`/r/${room.id}`}>\n\t\t\t\t\t\t\t\t<span className=\"nav-text\"># {room.name}</span>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout style={{ marginLeft: 200, background: '#fff' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={'/r/:roomId'} component={RoomContainer} />\n\t\t\t\t\t\t<Route path={'/'}>\n\t\t\t\t\t\t\t{this.props.joinedRooms.length === 0 ? (\n\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>No chat selected</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n\tauth: state.auth,\n\tjoinedRooms: Object.values(state.rooms.joined),\n\tavailableRooms: Object.values(state.rooms.available),\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ initAuth, initSlacker },\n)(App)\n","import moment from 'moment'\ninterface RoomsState {\n\tjoined: {\n\t\t[key: string]: RoomItem\n\t}\n\tavailable: {\n\t\t[key: string]: RoomItem\n\t}\n}\n\nconst defaultState: RoomsState = {\n\tjoined: {},\n\tavailable: {},\n}\n\nexport default (state: RoomsState = defaultState, action: any) => {\n\tswitch (action.type) {\n\t\tcase 'CREATE_ROOM':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: { ...state.joined, [action.room.id]: action.room },\n\t\t\t}\n\t\tcase 'JOINED_ROOM':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: { ...state.joined, [action.room.id]: action.room },\n\t\t\t}\n\n\t\tcase 'AVAILABLE_ROOMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tavailable: {\n\t\t\t\t\t...action.rooms.reduce(\n\t\t\t\t\t\t(acc: any, value: RoomItem) => ({\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t[value.id]: value,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t{},\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t}\n\n\t\tcase 'SEND_MESSAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: {\n\t\t\t\t\t...state.joined,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...[state.joined[action.roomId]],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.joined[action.roomId].messages,\n\t\t\t\t\t\t\t[action.message.id]: action.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tcase 'UPDATE_MESSAGES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tjoined: {\n\t\t\t\t\t...state.joined,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...state.joined[action.roomId],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.joined[action.roomId].messages,\n\t\t\t\t\t\t\t...action.messages.reduce(\n\t\t\t\t\t\t\t\t(acc: any, message: Message) => ({\n\t\t\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t\t\t[message.id]: message,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\n\t\t// case 'CLEAR_UNREAD':\n\t\t// \treturn state.map(room => {\n\t\t// \t\tif (room.name === action.roomName) {\n\t\t// \t\t\tconst people = room.people.map((person: Person) => {\n\t\t// \t\t\t\tif (person.id === action.uid) {\n\t\t// \t\t\t\t\treturn {\n\t\t// \t\t\t\t\t\t...person,\n\t\t// \t\t\t\t\t\tunread: action.unread,\n\t\t// \t\t\t\t\t\tlastRead: action.time,\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t} else {\n\t\t// \t\t\t\t\treturn person\n\t\t// \t\t\t\t}\n\t\t// \t\t\t})\n\t\t// \t\t\treturn { ...room, people }\n\t\t// \t\t} else {\n\t\t// \t\t\treturn room\n\t\t// \t\t}\n\t\t// \t})\n\n\t\t// case 'LEAVE_ROOM':\n\t\t// \treturn state.filter(room => {\n\t\t// \t\treturn room.name !== action.roomName\n\t\t// \t})\n\t\t// case 'CLEAR_STATE':\n\t\t// \treturn []\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import authReducer from '../reducers/auth'\nimport roomsReducer from '../reducers/rooms'\nimport redirectReducer from '../reducers/redirect'\nimport { combineReducers } from 'redux'\n\nconst reducers = combineReducers({\n\tauth: authReducer,\n\trooms: roomsReducer,\n\tredirect: redirectReducer,\n})\n\nexport default reducers\n","export default (state = {}, action: any) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        uid: action.uid,\n        displayName: action.displayName\n      };\n    case \"LOGOUT\":\n      return {};\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action: any) => {\n\tswitch (action.type) {\n\t\tcase 'REDIRECT_TO':\n\t\t\treturn {\n\t\t\t\tredirectTo: action.redirectTo,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { put, select, takeLatest, fork, call } from 'redux-saga/effects'\nimport database, { firebase, rsf } from '../firebase/firebase'\nimport { availableRooms, createRoom, syncMessages } from '../actions/rooms'\n\nimport { Query, CollectionReference } from '@firebase/firestore-types'\n\nconst byCreatedAt = function(a: any, b: any) {\n\t// @ts-ignore\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\n}\n\nexport function* fetchRoomSaga(roomId: string) {\n\tconsole.log('try fetch room ', roomId)\n\t// fetch joined room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\t// if we have such room\n\tif (roomDoc.exists) {\n\t\tconst room = roomDoc.data()\n\t\tconst people: any[] = []\n\t\tconst messages: any = {}\n\n\t\t// get room's people\n\t\tconst peopleQuery = yield call(\n\t\t\trsf.firestore.getCollection,\n\t\t\troomRef.collection('people'),\n\t\t)\n\t\tpeopleQuery.forEach((peopleDoc: any) => {\n\t\t\tpeople.push({ id: peopleDoc.id, ...peopleDoc.data() })\n\t\t})\n\t\tconsole.log({ people })\n\n\t\t// get room's messages first page\n\t\tconst messagePage = <CollectionReference>roomRef\n\t\t\t.collection('messages')\n\t\t\t.orderBy('createdAt', 'desc')\n\t\t\t.limit(25)\n\t\tconst messagesQuery = yield call(rsf.firestore.getCollection, messagePage)\n\n\t\tmessagesQuery.forEach((messageDoc: any) => {\n\t\t\tmessages[messageDoc.id] = { id: messageDoc.id, ...messageDoc.data() }\n\t\t})\n\t\t// messages.sort(byCreatedAt)\n\n\t\tyield put(\n\t\t\tcreateRoom({\n\t\t\t\tid: roomRef.id,\n\t\t\t\tname: room ? room.name : 'Error',\n\t\t\t\tpeople,\n\t\t\t\tmessages,\n\t\t\t}),\n\t\t)\n\n\t\t// subscribe to messages\n\t\tconst newestMessage = <CollectionReference>roomRef\n\t\t\t.collection('messages')\n\t\t\t.orderBy('createdAt', 'desc')\n\t\t\t.limit(1)\n\n\t\t// TODO merge this with other messages to save on reads\n\t\tyield fork(rsf.firestore.syncCollection, newestMessage, {\n\t\t\tsuccessActionCreator: (snapshot: any) => syncMessages(snapshot, roomId),\n\t\t})\n\t}\n}\n\n// worker Saga\nfunction* initSlackerSaga(action: any) {\n\tconst auth = yield select(state => state.auth)\n\n\tif (!auth.uid) {\n\t\tconsole.log('no auth!')\n\t\treturn\n\t}\n\n\t// fetch all rooms\n\tconst roomsPromise = database.collection('rooms').get()\n\n\tconst roomsQuery: firebase.firestore.QuerySnapshot = yield roomsPromise\n\tconst rooms: RoomItem[] = []\n\troomsQuery.forEach(doc => {\n\t\tconst room = {\n\t\t\tid: doc.id,\n\t\t\t...doc.data(),\n\t\t}\n\t\t// @ts-ignore\n\t\trooms.push(room)\n\t})\n\n\tyield put(availableRooms(rooms))\n\tconst generalRoom = rooms.find(room => room.name === 'general')\n\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) =>\n\t\t\tuserRoomIds.push(userRoomDoc.id),\n\t\t)\n\n\t\t// fetch each joined room\n\t\tfor (let roomId of userRoomIds) {\n\t\t\tconst task = yield fork(fetchRoomSaga, roomId)\n\t\t}\n\n\t\t// if no general room, join that as well\n\t\tif (generalRoom && !userRoomIds.includes(generalRoom.id)) {\n\t\t\tyield put({\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t} else {\n\t\tif (generalRoom) {\n\t\t\tyield put({\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t}\n}\n\nfunction* mySaga() {\n\tyield takeLatest('INIT_SLACKER_SAGA', initSlackerSaga)\n}\n\nexport default mySaga\n","import { put, select, takeEvery, fork, call } from 'redux-saga/effects'\nimport { AnyAction } from 'redux'\nimport database, { firebase, rsf } from '../firebase/firebase'\nimport { joinedRoom, showError, syncMessages } from '../actions/rooms'\nimport { fetchRoomSaga } from './initSaga'\n\nconst byCreatedAt = function(a: any, b: any) {\n\t// @ts-ignore\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\n}\n\nfunction* joinRoom(action: AnyAction) {\n\tconst { roomId } = action\n\tconst { uid, displayName } = yield select(state => state.auth)\n\tconst roomRef = database.doc(`rooms/${roomId}`)\n\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\tconst room = <RoomItem>{ id: roomDoc.id, ...roomDoc.data() }\n\n\tif (!room || !roomDoc.exists) {\n\t\tyield put(showError('Room not found!'))\n\t\treturn\n\t} else if (\n\t\troom.people &&\n\t\troom.people.find((person: Person) => person.id === uid)\n\t) {\n\t\t// if we are already in this room then\n\t\t// history.push(`room/${data.roomName}`);\n\t\t// return i guess ?\n\t\treturn\n\t} else {\n\t\t// we should add ourselves to this room\n\n\t\tconst person = {\n\t\t\tname: displayName,\n\t\t\tid: uid,\n\t\t\tunread: 0,\n\t\t\tlastRead: 0,\n\t\t}\n\n\t\t// TODO figure wtf is wrong here\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`rooms/${roomId}/people/${person.id}`,\n\t\t\tperson,\n\t\t)\n\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`users/${person.id}/rooms/${roomId}`,\n\t\t\t{ roomName: room.name },\n\t\t)\n\n\t\t// fetch full room and subscribe\n\t\tyield call(fetchRoomSaga, roomId)\n\t}\n}\n\nfunction* joinRoomSaga() {\n\tyield takeEvery('JOIN_ROOM_SAGA', joinRoom)\n}\n\nexport default joinRoomSaga\n","import { all } from 'redux-saga/effects'\nimport initSaga from './initSaga'\nimport joinRoomSaga from './joinRoomSaga'\n\nexport default function* rootSaga() {\n\tyield all([initSaga(), joinRoomSaga()])\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport reducers from '../reducers'\n\nimport mySaga from '../sagas/rootSaga'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default () => {\n\tconst store = createStore(\n\t\treducers,\n\t\tcomposeEnhancers(applyMiddleware(thunk, sagaMiddleware)),\n\t)\n\n\tsagaMiddleware.run(mySaga)\n\n\treturn store\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\n\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\nconst jsx = (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<Route path={'/'} component={App} />\n\t\t</Router>\n\t</Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('container'))\n"],"sourceRoot":""}