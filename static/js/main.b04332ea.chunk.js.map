{"version":3,"sources":["components/LoadingSpinner.tsx","components/Message.tsx","firebase/firebase.ts","actions/rooms.ts","components/ChatInput.tsx","components/RoomContainer.tsx","components/CreateChatDialog.tsx","components/BrowseRoomsDialog.tsx","components/App.tsx","actions/auth.ts","reducers/rooms.ts","reducers/index.ts","reducers/auth.ts","reducers/redirect.ts","sagas/initSaga.ts","sagas/joinRoomSaga.ts","sagas/rootSaga.ts","store/configureStore.ts","index.tsx"],"names":["LoadingWrapper","styled","div","_templateObject","LoadingSpinner","react_default","a","createElement","spin","size","MessageLayout","Message_templateObject","LeftPanel","_templateObject2","RightPanel","_templateObject3","MessageHeader","_templateObject4","Message","_ref","children","name","isConsecutive","avatar","shape","icon","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rsf","ReduxSagaFirebase","database","firestore","byCreatedAt","b","Date","createdAt","getTime","createRoom","id","people","_ref$messages","messages","type","room","showError","message","trySendMessage","text","roomId","status","arguments","length","undefined","dispatch","getState","user","auth","sender","uid","displayName","moment","format","collection","concat","add","availableRooms","rooms","syncMessages","messagesSnapshot","forEach","doc","push","Object","objectSpread","data","sort","updateMessages","InputForm","form","ChatInput_templateObject","Input","input","ChatInput_templateObject2","SendButton","button","ChatInput_templateObject3","ChatInput","state","value","handleTyping","e","_this","setState","target","handleSend","preventDefault","props","onSubmit","this","onChange","Component","connect","Header","Layout","Content","Title","Typography","ChatWrapper","RoomContainer_templateObject","Messages","RoomContainer_templateObject2","RoomContainer","messagesEnd","messagesContainer","scrollToBottom","scrollIntoView","behavior","match","params","console","log","prevProps","previousLastMessage","slice","currentLastMessage","_this$messagesContain","scrollHeight","scrollTop","clientHeight","offsetHeight","Math","abs","_this2","_this$props","isLoading","content","components_LoadingSpinner","ref","el","map","idx","components_Message","key","style","float","clear","components_ChatInput","react","background","borderBottom","padding","display","flexDirection","alignItems","margin","level","overflow","ownProps","joined","find","TextArea","Text","TextWrap","CreateChatDialog_templateObject","CreateChatDialog","roomName","description","handleChange","defineProperty","handleSubmit","_this$props$auth","userDisplayName","unread","lastRead","tryCreateRoom","handleClose","modal","title","visible","isOpen","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","rows","roomData","showCreateError","get","then","snapshot","r","roomRef","set","Label","BrowseRoomsDialog_templateObject","BrowseRoomsDialog","handleJoinRoom","canJoin","tryJoinRoom","bodyStyle","maxHeight","overflowY","list","dataSource","roomList","renderItem","item","Item","Meta","avatarUrl","src","onClick","es_button","_state$rooms","available","Sider","LogoWrap","App_templateObject","Logo","img","App_templateObject2","RoomButtons","App_templateObject3","MenuButton","App_templateObject4","App","openDialog","handleCloseDialog","handleOpenDialog","dialogName","handleRoomSelect","history","tryLogin","nextProps","initSlacker","location","pathname","layout","height","position","left","components_CreateChatDialog","components_BrowseRoomsDialog","menu","theme","mode","onSelect","selectedKeys","className","marginLeft","react_router","path","component","signInAnonymously","response","loginSuccess","catch","error","code","defaultState","reducers","combineReducers","action","toConsumableArray","redirect","redirectTo","fetchRoomSaga","initSlackerSaga","mySaga","roomDoc","regenerator_default","wrap","_context","prev","next","call","getDocument","sent","exists","getCollection","peopleDoc","messageDoc","put","fork","syncCollection","successActionCreator","stop","_marked","roomsPromise","roomsQuery","generalRoom","userRoomsQuery","userRoomIds","_i","_userRoomIds","_context2","select","abrupt","empty","userRoomDoc","includes","_marked2","_context3","takeLatest","_marked3","joinRoom","joinRoomSaga","person","setDocument","joinRoomSaga_marked","takeEvery","joinRoomSaga_marked2","rootSaga","all","initSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","configureStore","jsx","es","react_router_dom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b04332ea.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spin } from 'antd'\r\n\r\nconst LoadingWrapper = styled.div`\r\n\theight: 100%;\r\n\tpadding: 24;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tbackground: '#fff';\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`\r\n\r\nconst LoadingSpinner = () => (\r\n\t<LoadingWrapper>\r\n\t\t<Spin size=\"large\" />\r\n\t</LoadingWrapper>\r\n)\r\n\r\nexport default LoadingSpinner\r\n","import React, { FunctionComponent } from 'react'\r\nimport { Avatar } from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nconst MessageLayout = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tmargin-bottom: 2px;\r\n`\r\n\r\nconst LeftPanel = styled.div`\r\n\twidth: 46px;\r\n\tpadding: 5px;\r\n`\r\n\r\n// const Avatar = styled.div`\r\n// \t/* width: 35px;\r\n// \theight: 35px;\r\n// \tmargin: 5px;\r\n// \tborder-radius: 2px;\r\n// \tbackground-color: #cecece;\r\n// ` */\r\n\r\nconst RightPanel = styled.div`\r\n\tcolor: black;\r\n`\r\n\r\nconst MessageHeader = styled.div`\r\n\tcolor: black;\r\n\tfont-weight: bold;\r\n\tmargin-top: 2px;\r\n`\r\n\r\ninterface Props {\r\n\tname: string\r\n\tisConsecutive?: boolean\r\n}\r\n\r\nconst Message: FunctionComponent<Props> = ({\r\n\tchildren,\r\n\tname,\r\n\tisConsecutive,\r\n}) => {\r\n\tif (isConsecutive) {\r\n\t\treturn (\r\n\t\t\t<MessageLayout>\r\n\t\t\t\t<LeftPanel />\r\n\t\t\t\t<RightPanel>{children}</RightPanel>\r\n\t\t\t</MessageLayout>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<MessageLayout>\r\n\t\t\t<LeftPanel>\r\n\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\r\n\t\t\t</LeftPanel>\r\n\t\t\t<RightPanel>\r\n\t\t\t\t<MessageHeader>{name}</MessageHeader>\r\n\t\t\t\t{children}\r\n\t\t\t</RightPanel>\r\n\t\t</MessageLayout>\r\n\t)\r\n}\r\n\r\nexport default Message\r\n","import firebase from 'firebase'\r\nimport '@firebase/firestore' // 👈 Don't forget this!\r\nimport ReduxSagaFirebase from 'redux-saga-firebase'\r\nconst config = {\r\n\tapiKey: 'AIzaSyB2tCxT6yP0CWtCbD9JDj3ZKaxxW8T25PI',\r\n\tauthDomain: 'slacker-c3b01.firebaseapp.com',\r\n\tdatabaseURL: 'https://slacker-c3b01.firebaseio.com',\r\n\tprojectId: 'slacker-c3b01',\r\n\tstorageBucket: 'slacker-c3b01.appspot.com',\r\n\tmessagingSenderId: '286218247810',\r\n}\r\nconst firebaseApp = firebase.initializeApp(config)\r\nconst rsf = new ReduxSagaFirebase(firebaseApp)\r\nconst database = firebase.firestore() // const githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\nexport { firebase, rsf, database as default }\r\n","import database, { firebase } from '../firebase/firebase'\r\nimport moment from 'moment'\r\n// import { ipcRenderer } from 'electron';\r\n\r\nconst byCreatedAt = function(a: any, b: any) {\r\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\r\n}\r\n\r\nexport interface RoomData {\r\n\tid?: string\r\n\tname: string\r\n\tpeople: any\r\n\tmessages?: any\r\n}\r\n\r\nexport const createRoom = ({ id, name, people, messages = [] }: RoomData) => ({\r\n\ttype: 'CREATE_ROOM',\r\n\troom: {\r\n\t\tid,\r\n\t\tname,\r\n\t\tpeople,\r\n\t\tmessages,\r\n\t},\r\n})\r\n\r\nexport const joinedRoom = (joinedRoom: RoomItem) => ({\r\n\ttype: 'JOINED_ROOM',\r\n\tjoinedRoom,\r\n})\r\n\r\nexport const tryJoinRoom = (roomId: string) => ({\r\n\ttype: 'JOIN_ROOM_SAGA',\r\n\troomId\r\n})\r\n\r\nexport const tryCreateRoom = (roomData: RoomData, showCreateError: any) => {\r\n\treturn (dispatch: any, getState: () => StoreState) => {\r\n\t\tconst room = {\r\n\t\t\tname: roomData.name,\r\n\t\t}\r\n\t\t// get all rooms\r\n\t\treturn database\r\n\t\t\t.collection('rooms')\r\n\t\t\t.get()\r\n\t\t\t.then(snapshot => {\r\n\t\t\t\tconst rooms: Room[] = []\r\n\t\t\t\tsnapshot.forEach(doc => {\r\n\t\t\t\t\tconsole.log(doc)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tconst room: Room = doc.data()\r\n\t\t\t\t\trooms.push({\r\n\t\t\t\t\t\t...room,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t// if no room with this name\r\n\t\t\t\tif (!rooms.find(r => r.name === room.name)) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tdatabase\r\n\t\t\t\t\t\t\t.collection('rooms')\r\n\t\t\t\t\t\t\t.add(room)\r\n\t\t\t\t\t\t\t// create this room and\r\n\t\t\t\t\t\t\t.then(roomRef => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\tdatabase\r\n\t\t\t\t\t\t\t\t\t\t.collection(`rooms/${roomRef.id}/people`)\r\n\t\t\t\t\t\t\t\t\t\t.doc(roomData.people.id)\r\n\t\t\t\t\t\t\t\t\t\t// assign people to it?\r\n\t\t\t\t\t\t\t\t\t\t.set(roomData.people)\r\n\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdatabase\r\n\t\t\t\t\t\t\t\t\t\t\t\t.collection(`users/${roomData.people.id}/rooms`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.doc(roomRef.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.set({ roomName: room.name })\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\t\t\tcreateRoom({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: roomRef.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...roomData,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpeople: [roomData.people],\r\n\t\t\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\tconst perName = roomData.people.name\r\n\t\t\t\t\t\t\t\t\t\t\t// dispatch(\r\n\t\t\t\t\t\t\t\t\t\t\t// \tstartSendMessage(\r\n\t\t\t\t\t\t\t\t\t\t\t// \t\t`${perName} created this room`,\r\n\t\t\t\t\t\t\t\t\t\t\t// \t\troom.name,\r\n\t\t\t\t\t\t\t\t\t\t\t// \t\ttrue,\r\n\t\t\t\t\t\t\t\t\t\t\t// \t),\r\n\t\t\t\t\t\t\t\t\t\t\t// ).then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t// \tdispatch(startListening(room.name))\r\n\t\t\t\t\t\t\t\t\t\t\t// \t// history.push(`/room/${room.name}`);\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn showCreateError('Room name not available!')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nconst isAlreadyAdded = (data: any, id: string) => {\r\n\tfor (var key in data) {\r\n\t\tif (data[key].id === id) return true\r\n\t}\r\n\treturn false\r\n}\r\n\r\nexport const showError = (message: string) => ({\r\n\ttype: 'ERROR_MESSAGE',\r\n\tmessage,\r\n})\r\n\r\nexport const sendMessage = (message: any, roomName: string) => ({\r\n\ttype: 'SEND_MESSAGE',\r\n\tmessage,\r\n\troomName,\r\n})\r\n\r\nexport const updateMessages = (messages: any, roomId: string) => ({\r\n\ttype: 'UPDATE_MESSAGES',\r\n\tmessages,\r\n\troomId,\r\n})\r\n\r\nexport const trySendMessage = (\r\n\ttext: string,\r\n\troomId: string,\r\n\tstatus: boolean = false,\r\n) => {\r\n\treturn (dispatch: any, getState: any) => {\r\n\t\tconst user = getState().auth\r\n\t\tif (user) {\r\n\t\t\tconst uid = user.uid\r\n\t\t\tconst displayName = user.displayName\r\n\t\t\tconst message = {\r\n\t\t\t\tsender: { uid, displayName },\r\n\t\t\t\ttext,\r\n\t\t\t\tcreatedAt: moment().format(),\r\n\t\t\t\tstatus,\r\n\t\t\t}\r\n\t\t\treturn database.collection(`rooms/${roomId}/messages`).add(message)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const orderRoomsStartState = () => ({\r\n\ttype: 'ORDER_ROOMS_START_STATE',\r\n})\r\n\r\nexport const availableRooms = (rooms: RoomItem[]) => ({\r\n\ttype: 'AVAILABLE_ROOMS',\r\n\trooms,\r\n})\r\n\r\nexport const initSlacker = () => ({\r\n\ttype: 'INIT_SLACKER_SAGA',\r\n})\r\n\r\nexport const clearState = {\r\n\ttype: 'CLEAR_STATE',\r\n}\r\n\r\nexport const leaveRoom = (roomName: string, userId: string) => ({\r\n\ttype: 'LEAVE_ROOM',\r\n\troomName,\r\n\tuserId,\r\n})\r\n\r\n// export const startLeaveRoom = (roomName: string) => {\r\n// \treturn (dispatch: any, getState: any) => {\r\n// \t\tconst user = getState().auth\r\n// \t\tif (user) {\r\n// \t\t\tconst userId = user.uid\r\n// \t\t\tconst displayName = user.displayName\r\n// \t\t\tdatabase.ref(`rooms/${roomName}/people/${userId}`).remove()\r\n// \t\t\tdatabase.ref(`users/${userId}/rooms/${roomName}`).remove(() => {\r\n// \t\t\t\tdispatch(leaveRoom(roomName, userId))\r\n// \t\t\t\tdispatch(startSendMessage(`${displayName} left`, roomName, true))\r\n// \t\t\t\t// history.push(\"/join\");\r\n// \t\t\t})\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport const clearUnread = (\r\n\troomName: string,\r\n\tuid: string,\r\n\ttime: any,\r\n\tunread: number,\r\n) => ({\r\n\ttype: 'CLEAR_UNREAD',\r\n\troomName,\r\n\tuid,\r\n\ttime,\r\n\tunread,\r\n})\r\n\r\nexport const setUnread = (\r\n\troomName: string,\r\n\tuid: string,\r\n\ttime: any,\r\n\tunread: number,\r\n) => {\r\n\treturn (dispatch: any) => {\r\n\t\tdispatch(clearUnread(roomName, uid, time, unread))\r\n\t}\r\n}\r\n\r\n// export const startClearUnread = (roomName: string) => {\r\n// \treturn (dispatch: any, getState: any) => {\r\n// \t\t// let time = moment().endOf(\"month\");\r\n// \t\tconst uid = getState().auth.uid\r\n// \t\tif (uid) {\r\n// \t\t\tconst time = moment().format()\r\n// \t\t\treturn database\r\n// \t\t\t\t.ref(`rooms/${roomName}/people/${uid}`)\r\n// \t\t\t\t.update({\r\n// \t\t\t\t\tunread: 0,\r\n// \t\t\t\t\tlastRead: time,\r\n// \t\t\t\t})\r\n// \t\t\t\t.then(() => {\r\n// \t\t\t\t\tdispatch(clearUnread(roomName, uid, time, 0))\r\n// \t\t\t\t})\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport const onLeft = (roomName: string, personID: string) => ({\r\n\ttype: 'ON_LEFT',\r\n\troomName,\r\n\tpersonID,\r\n})\r\n\r\nexport const onJoined = (roomName: string, person: any) => ({\r\n\ttype: 'ON_JOINED',\r\n\troomName,\r\n\tperson,\r\n})\r\n\r\nexport const syncMessages = (messagesSnapshot: any, roomId: string) => {\r\n\tconst messages: any[] = []\r\n\tmessagesSnapshot.forEach((doc: any) => {\r\n\t\tmessages.push({ id: doc.id, ...doc.data() })\r\n\t})\r\n\r\n\tmessages.sort(byCreatedAt)\r\n\treturn updateMessages(messages, roomId)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { trySendMessage } from '../actions/rooms'\r\n\r\nconst InputForm = styled.form`\r\n\theight: 44px;\r\n\tbackground-color: #fff;\r\n\tborder-radius: 4px;\r\n\tborder: 1px solid #acacac;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tflex-shrink: 0;\r\n`\r\n\r\nconst Input = styled.input`\r\n\tpadding-left: 14px;\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n\tflex-grow: 1;\r\n\toutline: none;\r\n`\r\n\r\nconst SendButton = styled.button`\r\n\tflex-shrink: 0;\r\n\tpadding: 0px 15px;\r\n\tbackground: none;\r\n\tborder: none;\r\n`\r\n\r\ninterface Props {\r\n\troom: RoomItem | undefined\r\n\ttrySendMessage: (text: string, roomId: string) => void\r\n}\r\n\r\ninterface State {\r\n\tvalue: string\r\n}\r\n\r\nclass ChatInput extends Component<Props, State> {\r\n\tstate = {\r\n\t\tvalue: '',\r\n\t}\r\n\r\n\thandleTyping = (e: any) => {\r\n\t\tthis.setState({ value: e.target.value })\r\n\t}\r\n\r\n\thandleSend = (e: any) => {\r\n\t\te.preventDefault()\r\n\t\tconst { room } = this.props\r\n\t\tconst text = this.state.value\r\n\t\tif (!!room && !!room.id && text.length > 0) {\r\n\t\t\tthis.props.trySendMessage(text, room.id)\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalue: '',\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<InputForm onSubmit={this.handleSend}>\r\n\t\t\t\t<Input value={this.state.value} onChange={this.handleTyping} />\r\n\t\t\t\t<SendButton type={'submit'}>Send</SendButton>\r\n\t\t\t</InputForm>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ trySendMessage },\r\n)(ChatInput)\r\n","import React, { Fragment, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { Layout, Typography } from 'antd'\r\n\r\nimport LoadingSpinner from './LoadingSpinner'\r\nimport Message from './Message'\r\nimport ChatInput from './ChatInput'\r\n\r\nimport { trySendMessage } from '../actions/rooms'\r\n\r\nconst { Header, Content } = Layout\r\nconst { Title } = Typography\r\n\r\nconst ChatWrapper = styled.div`\r\n\theight: 100%;\r\n\tpadding: 24;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tbackground: '#fff';\r\n`\r\n\r\nconst Messages = styled.div`\r\n\tpadding-top: 8px;\r\n\tpadding-bottom: 8px;\r\n\tflex-grow: 1;\r\n\toverflow-y: scroll;\r\n\toverflow-x: hidden;\r\n`\r\n\r\ninterface Props {\r\n\tauth: Auth\r\n\troom: RoomItem | undefined\r\n\tmatch: any\r\n\tisLoading: boolean\r\n\tmessages: Message[]\r\n\ttrySendMessage: (text: string, roomId: string, status?: boolean) => void\r\n}\r\n\r\nclass RoomContainer extends Component<Props> {\r\n\tmessagesEnd: any = null\r\n\tmessagesContainer: HTMLElement | null = null\r\n\r\n\tcomponentWillMount() {\r\n\t\tconst { roomId } = this.props.match.params\r\n\t\tconsole.log(roomId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollToBottom()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Props) {\r\n\t\tif (prevProps.messages.length === 0 && this.props.messages.length > 0) {\r\n\t\t\tthis.scrollToBottom()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// scroll management\r\n\t\tif (\r\n\t\t\tprevProps.messages.length !== this.props.messages.length &&\r\n\t\t\tprevProps.messages.length > 0 &&\r\n\t\t\tthis.props.messages.length > 0\r\n\t\t) {\r\n\t\t\tconst previousLastMessage = prevProps.messages.slice(-1)[0]\r\n\t\t\tconst currentLastMessage = this.props.messages.slice(-1)[0]\r\n\t\t\tif (\r\n\t\t\t\tpreviousLastMessage.id !== currentLastMessage.id &&\r\n\t\t\t\t!!currentLastMessage &&\r\n\t\t\t\tcurrentLastMessage.sender.uid === this.props.auth.uid\r\n\t\t\t) {\r\n\t\t\t\t// last message was ours, scroll to the bottom\r\n\t\t\t\tthis.scrollToBottom()\r\n\t\t\t} else if (this.messagesContainer) {\r\n\t\t\t\t// last message is not ours, lets check scroll\r\n\t\t\t\tconst {\r\n\t\t\t\t\tscrollHeight,\r\n\t\t\t\t\tscrollTop,\r\n\t\t\t\t\toffsetHeight,\r\n\t\t\t\t\tclientHeight,\r\n\t\t\t\t} = this.messagesContainer\r\n\t\t\t\tconst calculato = scrollHeight - scrollTop === clientHeight\r\n\r\n\t\t\t\t// if our scroll is around bottom 2 messages, scroll to bottom pls\r\n\t\t\t\tif (Math.abs(clientHeight - (scrollHeight - scrollTop - 45)) < 45) {\r\n\t\t\t\t\tthis.scrollToBottom()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollToBottom = () => {\r\n\t\tif (this.messagesEnd) {\r\n\t\t\tthis.messagesEnd.scrollIntoView({ behavior: 'auto' })\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { room, messages, isLoading } = this.props\r\n\t\tlet content = <LoadingSpinner />\r\n\t\tif (!isLoading) {\r\n\t\t\tcontent = (\r\n\t\t\t\t<ChatWrapper>\r\n\t\t\t\t\t<Messages\r\n\t\t\t\t\t\tref={el => {\r\n\t\t\t\t\t\t\tthis.messagesContainer = el\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{messages.map((message, idx) => (\r\n\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\tisConsecutive={\r\n\t\t\t\t\t\t\t\t\t!!messages[idx - 1] &&\r\n\t\t\t\t\t\t\t\t\tmessages[idx - 1].sender.uid === message.sender.uid\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tname={message.sender.displayName || ''}\r\n\t\t\t\t\t\t\t\tkey={message.id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{message.text}\r\n\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{ float: 'left', clear: 'both' }}\r\n\t\t\t\t\t\t\tref={el => {\r\n\t\t\t\t\t\t\t\tthis.messagesEnd = el\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Messages>\r\n\t\t\t\t\t<ChatInput room={this.props.room} />\r\n\t\t\t\t</ChatWrapper>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\tborderBottom: '1px solid #acacac',\r\n\t\t\t\t\t\tpadding: 16,\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Title style={{ margin: 0 }} level={3}>\r\n\t\t\t\t\t\t# {room ? room.name : ''}\r\n\t\t\t\t\t</Title>\r\n\t\t\t\t</Header>\r\n\t\t\t\t<Content\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: '0px 16px 24px 16px',\r\n\t\t\t\t\t\toverflow: 'initial',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</Content>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState, ownProps: any) => {\r\n\tconst { roomId } = ownProps.match.params\r\n\tconst room = state.rooms.joined.find(room => room.id === roomId)\r\n\tconst messages = room ? room.messages : []\r\n\treturn {\r\n\t\tauth: state.auth,\r\n\t\troom,\r\n\t\tmessages,\r\n\t\tisLoading: !room,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ trySendMessage },\r\n)(RoomContainer)\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Input, Typography } from 'antd'\r\nimport { tryCreateRoom, RoomData } from '../actions/rooms'\r\n\r\nconst { TextArea } = Input\r\nconst { Text } = Typography\r\n\r\nconst TextWrap = styled.div`\r\n\tmargin-top: 5px;\r\n\tmargin-bottom: 5px;\r\n`\r\n\r\ninterface Props {\r\n\tisOpen: boolean;\r\n\thandleClose: () => void;\r\n\ttryCreateRoom: (roomData: RoomData, showCreateError?: any) => Promise<any>;\r\n\tauth: Auth;\r\n}\r\n\r\ninterface State {\r\n\troomName: string;\r\n\tdescription: string;\r\n}\r\n\r\nclass CreateChatDialog extends Component<Props, State> {\r\n\tstate = {\r\n\t\troomName: '',\r\n\t\tdescription: '',\r\n\t}\r\n\r\n\thandleChange = (e: any) => {\r\n\t\tconsole.log(e.target.name)\r\n\t\t// @ts-ignore\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = () => {\r\n\t\tconst { uid, displayName: userDisplayName } = this.props.auth\r\n\t\tif (uid) {\r\n\t\t\tconsole.log('Create this room pls')\r\n\t\t\tconst roomName = this.state.roomName\r\n\t\t\tif (roomName && roomName.length > 0) {\r\n\t\t\t\t// this.setState({ error: '' })\r\n\t\t\t\tconst room = {\r\n\t\t\t\t\tname: roomName,\r\n\t\t\t\t\tpeople: {\r\n\t\t\t\t\t\tid: uid,\r\n\t\t\t\t\t\tname: userDisplayName,\r\n\t\t\t\t\t\tunread: 0,\r\n\t\t\t\t\t\tlastRead: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.tryCreateRoom(room)\r\n\t\t\t\tthis.props.handleClose()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Create Room\"\r\n\t\t\t\tvisible={this.props.isOpen}\r\n\t\t\t\tonOk={this.handleSubmit}\r\n\t\t\t\tonCancel={this.props.handleClose}\r\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t>\r\n\t\t\t\t<TextWrap>\r\n\t\t\t\t\t<Text>Name:</Text>\r\n\t\t\t\t</TextWrap>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tname=\"roomName\"\r\n\t\t\t\t\tvalue={this.state.roomName}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextWrap>\r\n\t\t\t\t\t<Text>Description:</Text>\r\n\t\t\t\t</TextWrap>\r\n\t\t\t\t<TextArea\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tvalue={this.state.description}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\trows={4}\r\n\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n\tauth: state.auth,\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ tryCreateRoom },\r\n)(CreateChatDialog)\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tModal,\r\n\tList,\r\n\tAvatar,\r\n\tButton,\r\n} from 'antd'\r\n\r\nimport { tryJoinRoom } from '../actions/rooms'\r\n\r\nconst Label = styled.div`\r\n\tpadding: 10px;\r\n`\r\n\r\ninterface RoomWithAvailability extends RoomItem {\r\n\tcanJoin: boolean\r\n}\r\n\r\ninterface Props {\r\n\tisOpen: boolean\r\n\thandleClose: () => void\r\n\ttryJoinRoom: (roomId: string) => void\r\n\tauth: Auth\r\n\troomList: Array<RoomWithAvailability>\r\n}\r\n\r\ninterface State {\r\n\troomName: string\r\n\tdescription: string\r\n}\r\n\r\nclass BrowseRoomsDialog extends Component<Props, State> {\r\n\thandleJoinRoom = (room: RoomWithAvailability) => {\r\n\t\tif (!room.canJoin) {\r\n            console.log('redirect to that room')\r\n            this.props.handleClose()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.props.tryJoinRoom(room.id)\r\n\t\t// this.props.handleClose()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Browse Rooms\"\r\n\t\t\t\tvisible={this.props.isOpen}\r\n\t\t\t\tonOk={this.props.handleClose}\r\n\t\t\t\tonCancel={this.props.handleClose}\r\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\r\n\t\t\t\tbodyStyle={{ maxHeight: 450, overflowY: 'scroll' }}\r\n\t\t\t>\r\n\t\t\t\t<List\r\n\t\t\t\t\tdataSource={this.props.roomList}\r\n\t\t\t\t\trenderItem={item => (\r\n\t\t\t\t\t\t<List.Item key={item.id}>\r\n\t\t\t\t\t\t\t<List.Item.Meta\r\n\t\t\t\t\t\t\t\tavatar={item.avatarUrl ? <Avatar src={item.avatarUrl} /> : null}\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t<a onClick={() => this.handleJoinRoom(item)}>{item.name}</a>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdescription={'TODO room descriptions'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{item.canJoin ? (\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.handleJoinRoom(item)}>\r\n\t\t\t\t\t\t\t\t\t\tJoin\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Label>joined</Label>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t</List>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => {\r\n\tconst { available, joined } = state.rooms\r\n\tconst roomList = available.map(room => {\r\n\t\tconst canJoin = joined.find(item => item.id === room.id) === undefined\r\n\t\treturn {\r\n\t\t\t...room,\r\n\t\t\tcanJoin,\r\n\t\t}\r\n\t})\r\n\treturn {\r\n\t\troomList,\r\n\t\tauth: state.auth,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ tryJoinRoom },\r\n)(BrowseRoomsDialog)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport { Layout, Menu, Icon } from 'antd'\r\n\r\nimport RoomContainer from './RoomContainer'\r\nimport CreateChatDialog from './CreateChatDialog'\r\nimport BrowseRoomsDialog from './BrowseRoomsDialog'\r\nimport LoadingSpinner from './LoadingSpinner'\r\n\r\nimport { tryLogin } from '../actions/auth'\r\nimport { initSlacker } from '../actions/rooms'\r\n\r\nimport '../styles/index.css'\r\n\r\nconst { Sider } = Layout\r\n// const { Text } = Typography\r\n\r\nconst LogoWrap = styled.div`\r\n\ttext-align: center;\r\n\tpadding: 10px;\r\n\theight: 64px;\r\n\tborder-bottom: 1px solid grey;\r\n`\r\n\r\nconst Logo = styled.img`\r\n\theight: 100%;\r\n`\r\n\r\nconst RoomButtons = styled.div`\r\n\tpadding: 10px;\r\n\tcolor: rgba(255, 255, 255, 0.65);\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n`\r\n\r\nconst MenuButton = styled.button`\r\n\tfont-size: 16px;\r\n\tbackground: none;\r\n\tborder: none;\r\n\t-webkit-transition: color 0.5s;\r\n\ttransition: color 0.5s;\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tcolor: #fff;\r\n\t}\r\n`\r\n\r\ninterface Props {\r\n\ttryLogin: () => void\r\n\tinitSlacker: () => void\r\n\tauth: Auth\r\n\trooms: {\r\n\t\tjoined: RoomItem[]\r\n\t\tavailable: RoomItem[]\r\n\t}\r\n\thistory: any\r\n\tlocation: {\r\n\t\tpathname: any\r\n\t}\r\n}\r\n\r\ninterface State {\r\n\topenDialog: string | false\r\n}\r\n\r\nclass App extends Component<Props, State> {\r\n\tstate: State = {\r\n\t\topenDialog: false,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.tryLogin()\r\n\t}\r\n\r\n\tcomponentWillUpdate(nextProps: Props) {\r\n\t\tif (!this.props.auth.uid && nextProps.auth.uid) {\r\n\t\t\tthis.props.initSlacker()\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Props) {\r\n\t\tconst { location, rooms, history } = this.props\r\n\t\tif (\r\n\t\t\tlocation.pathname === '/' &&\r\n\t\t\tprevProps.rooms.joined.length === 0 &&\r\n\t\t\trooms.joined.length !== 0\r\n\t\t) {\r\n\t\t\tconsole.log('redirect to first room?')\r\n\t\t\thistory.push(`/r/${rooms.joined[0].id}`)\r\n\t\t}\r\n\t}\r\n\r\n\thandleCloseDialog = () => {\r\n\t\tthis.setState({\r\n\t\t\topenDialog: false,\r\n\t\t})\r\n\t}\r\n\r\n\thandleOpenDialog = (dialogName: string) => {\r\n\t\tthis.setState({\r\n\t\t\topenDialog: dialogName,\r\n\t\t})\r\n\t}\r\n\r\n\thandleRoomSelect = ({ key }: { key: string }) => {\r\n\t\tthis.props.history.push(key)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Layout style={{ height: '100%' }}>\r\n\t\t\t\t<Sider\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\t\theight: '100vh',\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<LogoWrap>\r\n\t\t\t\t\t\t<Logo src=\"fox.png\" />\r\n\t\t\t\t\t</LogoWrap>\r\n\r\n\t\t\t\t\t<RoomButtons>\r\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('browseRooms')}>\r\n\t\t\t\t\t\t\t<span>Rooms:</span>\r\n\t\t\t\t\t\t</MenuButton>\r\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('createRoom')}>\r\n\t\t\t\t\t\t\t<Icon type=\"plus-circle\" />\r\n\t\t\t\t\t\t</MenuButton>\r\n\t\t\t\t\t</RoomButtons>\r\n\t\t\t\t\t<CreateChatDialog\r\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'createRoom'}\r\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<BrowseRoomsDialog\r\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'browseRooms'}\r\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\ttheme=\"dark\"\r\n\t\t\t\t\t\tmode=\"inline\"\r\n\t\t\t\t\t\tonSelect={this.handleRoomSelect}\r\n\t\t\t\t\t\tselectedKeys={[this.props.location.pathname]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.props.rooms.joined.map(room => (\r\n\t\t\t\t\t\t\t<Menu.Item key={`/r/${room.id}`}>\r\n\t\t\t\t\t\t\t\t<span className=\"nav-text\"># {room.name}</span>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</Sider>\r\n\t\t\t\t<Layout style={{ marginLeft: 200, background: '#fff' }}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path={'/r/:roomId'} component={RoomContainer} />\r\n\t\t\t\t\t\t<Route path={'/'}>\r\n\t\t\t\t\t\t\t{this.props.rooms.joined.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div>No chat selected</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n\tauth: state.auth,\r\n\trooms: state.rooms,\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ tryLogin, initSlacker },\r\n)(App)\r\n","import { firebase } from \"../firebase/firebase\";\r\n\r\nexport const loginSuccess = (uid: string, displayName: string) => ({\r\n  type: \"LOGIN\",\r\n  uid,\r\n  displayName\r\n});\r\n\r\nexport const tryLogin = () => {\r\n  return (dispatch: any) => {\r\n    return firebase\r\n      .auth()\r\n      .signInAnonymously()\r\n      .then(response => {\r\n        // console.log(response);\r\n        const { user } = response;\r\n\r\n        if (user) {\r\n          const displayName = user.displayName || \"Ninja\";\r\n          return dispatch(loginSuccess(user.uid, displayName));\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log({ error });\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // ...\r\n      });\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: \"LOGOUT\"\r\n});\r\n\r\nexport const tryLogout = () => {\r\n  return () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        console.log(\"log out!!!\");\r\n      });\r\n  };\r\n};\r\n","import moment from 'moment'\r\n\r\ninterface RoomsState {\r\n\tjoined: Room[];\r\n\tavailable: Room[];\r\n}\r\n\r\nconst defaultState: RoomsState = {\r\n\tjoined: [],\r\n\tavailable: [],\r\n}\r\n\r\nexport default (state: RoomsState = defaultState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CREATE_ROOM':\r\n\t\t\treturn { ...state, joined: [...state.joined, action.room] }\r\n\t\tcase 'JOINED_ROOM':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjoined: [...state.joined, action.room],\r\n\t\t\t}\r\n\r\n\t\tcase 'AVAILABLE_ROOMS':\r\n\t\t\treturn { ...state, available: action.rooms }\r\n\r\n\t\t// case 'ON_LEFT':\r\n\t\t// \t// console.log('onleft');\r\n\r\n\t\t// \treturn state.map(room => {\r\n\t\t// \t\t// console.log(room);\r\n\t\t// \t\tif (room.name === action.roomName) {\r\n\t\t// \t\t\tconst p = room.people.filter((person: Person) => {\r\n\t\t// \t\t\t\treturn person.id !== action.personID\r\n\t\t// \t\t\t})\r\n\t\t// \t\t\t// console.log(p);\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t...room,\r\n\t\t// \t\t\t\tpeople: p,\r\n\t\t// \t\t\t}\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\treturn room\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\r\n\t\t// case 'ON_JOINED':\r\n\t\t// \treturn state.map(room => {\r\n\t\t// \t\tif (room.name === action.roomName) {\r\n\t\t// \t\t\troom.people.push(action.person)\r\n\t\t// \t\t\treturn room\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\treturn room\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\r\n\t\tcase 'SEND_MESSAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjoined: state.joined.map(room => {\r\n\t\t\t\t\tif (room.name === action.roomName) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...room,\r\n\t\t\t\t\t\t\tmessages: [...room.messages, action.message],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn room\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\t\tcase 'UPDATE_MESSAGES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tjoined: state.joined.map(room => {\r\n\t\t\t\t\tif (room.id === action.roomId) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...room,\r\n\t\t\t\t\t\t\tmessages: [...action.messages],\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn room\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t}\r\n\t\t// case 'REORDER_ROOMS':\r\n\t\t//   let room;\r\n\t\t//   let rooms = state.filter((r) => {\r\n\t\t//     if(r.name === action.roomName) {\r\n\t\t//       room = r;\r\n\t\t//       return false;\r\n\t\t//     }\r\n\t\t//     else {\r\n\t\t//       return true;\r\n\t\t//     }\r\n\t\t//   });\r\n\t\t//   rooms.unshift(room);\r\n\t\t//   return rooms;\r\n\t\t// case 'ORDER_ROOMS_START_STATE':\r\n\t\t// \t//  const x =  action.rooms.sort((a, b) => {\r\n\t\t// \t//   //  console.log('a', a);\r\n\t\t// \t//   //  console.log('b', b);\r\n\t\t// \t//   if(a.messages.length > 0 && b.messages.length > 0) {\r\n\t\t// \t//     console.log(typeof a.messages);\r\n\r\n\t\t// \t//     return moment(a.messages[a.messages.length-1].createdAt) > moment(b.messages[b.messages.length-1].createdAt)\r\n\t\t// \t//     // {\r\n\t\t// \t//   //     return -1;\r\n\t\t// \t//   //   } else {\r\n\t\t// \t//   //     return 1;\r\n\t\t// \t//   //   }\r\n\t\t// \t//   // }\r\n\t\t// \t//   // else {\r\n\t\t// \t//   //   return -1;\r\n\t\t// \t//   }\r\n\t\t// \t// });\r\n\t\t// \t// console.log(typeof x)\r\n\t\t// \t// console.log(x);\r\n\t\t// \t// return x;\r\n\t\t// \tstate.sort((a: any, b: any) => {\r\n\t\t// \t\treturn moment(a.messages[a.messages.length - 1].createdAt) <\r\n\t\t// \t\t\tmoment(b.messages[b.messages.length - 1].createdAt)\r\n\t\t// \t\t\t? 1\r\n\t\t// \t\t\t: -1\r\n\t\t// \t})\r\n\t\t// \t// console.log(state);\r\n\t\t// \treturn state.map(room => room)\r\n\r\n\t\t// case 'CLEAR_UNREAD':\r\n\t\t// \treturn state.map(room => {\r\n\t\t// \t\tif (room.name === action.roomName) {\r\n\t\t// \t\t\tconst people = room.people.map((person: Person) => {\r\n\t\t// \t\t\t\tif (person.id === action.uid) {\r\n\t\t// \t\t\t\t\treturn {\r\n\t\t// \t\t\t\t\t\t...person,\r\n\t\t// \t\t\t\t\t\tunread: action.unread,\r\n\t\t// \t\t\t\t\t\tlastRead: action.time,\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t} else {\r\n\t\t// \t\t\t\t\treturn person\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t})\r\n\t\t// \t\t\treturn { ...room, people }\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\treturn room\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\r\n\t\t// case 'LEAVE_ROOM':\r\n\t\t// \treturn state.filter(room => {\r\n\t\t// \t\treturn room.name !== action.roomName\r\n\t\t// \t})\r\n\t\t// case 'CLEAR_STATE':\r\n\t\t// \treturn []\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import authReducer from '../reducers/auth'\r\nimport roomsReducer from '../reducers/rooms'\r\nimport redirectReducer from '../reducers/redirect'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst reducers = combineReducers({\r\n\tauth: authReducer,\r\n\trooms: roomsReducer,\r\n\tredirect: redirectReducer,\r\n})\r\n\r\nexport default reducers\r\n","export default (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        uid: action.uid,\r\n        displayName: action.displayName\r\n      };\r\n    case \"LOGOUT\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = {}, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'REDIRECT_TO':\r\n\t\t\treturn {\r\n\t\t\t\tredirectTo: action.redirectTo,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { put, select, takeLatest, fork, call } from 'redux-saga/effects'\r\nimport database, { firebase, rsf } from '../firebase/firebase'\r\nimport { availableRooms, createRoom, syncMessages } from '../actions/rooms'\r\n\r\nconst byCreatedAt = function(a: any, b: any) {\r\n\t// @ts-ignore\r\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\r\n}\r\n\r\nexport function* fetchRoomSaga(roomId: string) {\r\n\tconsole.log('try fetch room ', roomId)\r\n\t// fetch joined room from firestore\r\n\tconst roomRef = database.collection('rooms').doc(roomId)\r\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\r\n\r\n\t// if we have such room\r\n\tif (roomDoc.exists) {\r\n\t\tconst room = roomDoc.data()\r\n\t\tconst people: any[] = []\r\n\t\tconst messages: any[] = []\r\n\r\n\t\t// get room's people\r\n\t\tconst peopleQuery = yield call(\r\n\t\t\trsf.firestore.getCollection,\r\n\t\t\troomRef.collection('people'),\r\n\t\t)\r\n\t\tpeopleQuery.forEach((peopleDoc: any) => {\r\n\t\t\tpeople.push({ id: peopleDoc.id, ...peopleDoc.data() })\r\n\t\t})\r\n\t\tconsole.log({ people })\r\n\r\n\t\t// get room's people\r\n\t\tconst messagesQuery = yield call(\r\n\t\t\trsf.firestore.getCollection,\r\n\t\t\troomRef.collection('messages'),\r\n\t\t)\r\n\t\tmessagesQuery.forEach((messageDoc: any) => {\r\n\t\t\tmessages.push({\r\n\t\t\t\tid: messageDoc.id,\r\n\t\t\t\t...messageDoc.data(),\r\n\t\t\t})\r\n\t\t})\r\n\t\tmessages.sort(byCreatedAt)\r\n\t\tconsole.log({ messages })\r\n\r\n\t\tyield put(\r\n\t\t\tcreateRoom({\r\n\t\t\t\tid: roomRef.id,\r\n\t\t\t\tname: room ? room.name : 'Error',\r\n\t\t\t\tpeople,\r\n\t\t\t\tmessages,\r\n\t\t\t}),\r\n\t\t)\r\n\r\n\t\t// subscribe to messages\r\n\t\tyield fork(rsf.firestore.syncCollection, roomRef.collection('messages'), {\r\n\t\t\tsuccessActionCreator: (snapshot: any) => syncMessages(snapshot, roomId),\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\r\nfunction* initSlackerSaga(action: any) {\r\n\tconst auth = yield select(state => state.auth)\r\n\r\n\tif (!auth.uid) {\r\n\t\tconsole.log('no auth!')\r\n\t\treturn\r\n\t}\r\n\r\n\t// fetch all rooms\r\n\tconst roomsPromise = database.collection('rooms').get()\r\n\r\n\tconst roomsQuery: firebase.firestore.QuerySnapshot = yield roomsPromise\r\n\tconst rooms: RoomItem[] = []\r\n\troomsQuery.forEach(doc => {\r\n\t\tconst room = {\r\n\t\t\tid: doc.id,\r\n\t\t\t...doc.data(),\r\n\t\t}\r\n\t\t// @ts-ignore\r\n\t\trooms.push(room)\r\n\t})\r\n\r\n\tyield put(availableRooms(rooms))\r\n\tconst generalRoom = rooms.find(room => room.name === 'general')\r\n\r\n\t// get user rooms\r\n\tconst userRoomsQuery = yield call(\r\n\t\trsf.firestore.getCollection,\r\n\t\t`users/${auth.uid}/rooms`,\r\n\t)\r\n\r\n\tif (!userRoomsQuery.empty) {\r\n\t\tconst userRoomIds: string[] = []\r\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) =>\r\n\t\t\tuserRoomIds.push(userRoomDoc.id),\r\n\t\t)\r\n\r\n\t\t// fetch each joined room\r\n\t\tfor (let roomId of userRoomIds) {\r\n\t\t\tconst task = yield fork(fetchRoomSaga, roomId)\r\n\t\t}\r\n\r\n\t\t// if no general room, join that as well\r\n\t\tif(generalRoom && !userRoomIds.includes(generalRoom.id)) {\r\n\t\t\tyield put({\r\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\r\n\t\t\t\troomId: generalRoom.id,\r\n\t\t\t\troom: generalRoom,\r\n\t\t\t})\r\n\t\t}\r\n\t} else {\r\n\t\tif (generalRoom) {\r\n\t\t\tyield put({\r\n\t\t\t\ttype: 'JOIN_ROOM_SAGA',\r\n\t\t\t\troomId: generalRoom.id,\r\n\t\t\t\troom: generalRoom,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction* mySaga() {\r\n\tyield takeLatest('INIT_SLACKER_SAGA', initSlackerSaga)\r\n}\r\n\r\nexport default mySaga\r\n","import { put, select, takeEvery, fork, call } from 'redux-saga/effects'\r\nimport { AnyAction } from 'redux'\r\nimport database, { firebase, rsf } from '../firebase/firebase'\r\nimport { joinedRoom, showError, syncMessages } from '../actions/rooms'\r\nimport { fetchRoomSaga } from './initSaga'\r\n\r\nconst byCreatedAt = function(a: any, b: any) {\r\n\t// @ts-ignore\r\n\treturn new Date(a.createdAt) - new Date(b.createdAt)\r\n}\r\n\r\nfunction* joinRoom(action: AnyAction) {\r\n\tconst { roomId } = action\r\n\tconst { uid, displayName } = yield select(state => state.auth)\r\n\tconst roomRef = database.doc(`rooms/${roomId}`)\r\n\r\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\r\n\tconst room = <RoomItem>{ id: roomDoc.id, ...roomDoc.data() }\r\n\r\n\tif (!room || !roomDoc.exists) {\r\n\t\tyield put(showError('Room not found!'))\r\n\t\treturn\r\n\t} else if (\r\n\t\troom.people &&\r\n\t\troom.people.find((person: Person) => person.id === uid)\r\n\t) {\r\n\t\t// if we are already in this room then\r\n\t\t// history.push(`room/${data.roomName}`);\r\n\t\t// return i guess ?\r\n\t\treturn\r\n\t} else {\r\n\t\t// we should add ourselves to this room\r\n\r\n\t\tconst person = {\r\n\t\t\tname: displayName,\r\n\t\t\tid: uid,\r\n\t\t\tunread: 0,\r\n\t\t\tlastRead: 0,\r\n\t\t}\r\n\r\n\t\t// TODO figure wtf is wrong here\r\n\t\tyield call(\r\n\t\t\t// @ts-ignore\r\n\t\t\trsf.firestore.setDocument,\r\n\t\t\t`rooms/${roomId}/people/${person.id}`,\r\n\t\t\tperson,\r\n\t\t)\r\n\r\n\t\tyield call(\r\n\t\t\t// @ts-ignore\r\n\t\t\trsf.firestore.setDocument,\r\n\t\t\t`users/${person.id}/rooms/${roomId}`,\r\n\t\t\t{ roomName: room.name },\r\n\t\t)\r\n\r\n\t\t// fetch full room and subscribe\r\n\t\tyield call(fetchRoomSaga, roomId)\r\n\t}\r\n}\r\n\r\nfunction* joinRoomSaga() {\r\n\tyield takeEvery('JOIN_ROOM_SAGA', joinRoom)\r\n}\r\n\r\nexport default joinRoomSaga\r\n","import { all } from 'redux-saga/effects'\r\nimport initSaga from './initSaga'\r\nimport joinRoomSaga from './joinRoomSaga'\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([initSaga(), joinRoomSaga()])\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport reducers from '../reducers'\r\n\r\nimport mySaga from '../sagas/rootSaga'\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport default () => {\r\n\tconst store = createStore(\r\n\t\treducers,\r\n\t\tcomposeEnhancers(applyMiddleware(thunk, sagaMiddleware)),\r\n\t)\r\n\r\n\tsagaMiddleware.run(mySaga)\r\n\r\n\treturn store\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport ReactDOM from 'react-dom'\r\nimport 'antd/dist/antd.css'\r\n\r\nimport App from './components/App'\r\nimport configureStore from './store/configureStore'\r\n\r\nconst store = configureStore()\r\nconst jsx = (\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<Route path={'/'} component={App} />\r\n\t\t</Router>\r\n\t</Provider>\r\n)\r\n\r\nReactDOM.render(jsx, document.getElementById('container'))\r\n"],"sourceRoot":""}