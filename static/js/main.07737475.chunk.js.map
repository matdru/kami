{"version":3,"sources":["components/Message.tsx","firebase/firebase.ts","actions/messages.ts","components/ChatInput.tsx","components/Conversation.tsx","constants/ActionTypes.ts","actions/auth.ts","components/ProfileDialog.tsx","containers/AppHeader.tsx","components/LoadingSpinner.tsx","components/Room.tsx","actions/rooms.ts","utils/misc.ts","selectors/room.ts","containers/Room.tsx","components/CreateChatDialog.tsx","components/BrowseRoomsDialog.tsx","containers/App.tsx","reducers/rooms.ts","reducers/index.ts","reducers/auth.ts","reducers/redirect.ts","sagas/roomSagas.ts","sagas/initSaga.ts","sagas/rootSaga.ts","store/configureStore.ts","index.tsx"],"names":["MessageLayout","styled","div","LeftPanel","RightPanel","MessageHeader","Message","children","name","isConsecutive","size","shape","icon","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rsf","ReduxSagaFirebase","database","firestore","functions","githubAuthProvider","auth","GithubAuthProvider","googleAuthProvider","GoogleAuthProvider","sendMessage","httpsCallable","trySendMessage","text","roomId","_","getState","InputForm","form","Input","input","SendButton","button","ChatInput","state","value","handleTyping","e","setState","target","handleSend","preventDefault","room","props","id","length","onSubmit","this","onChange","type","Component","connect","ChatWrapper","Messages","TopAnchor","BottomAnchor","Conversation","messages","getMessagesRef","getBottomAnchorRef","onMessagesScroll","onLoadMoreVisibilityChange","onScroll","ref","canFetchMore","map","message","idx","sender","uid","displayName","key","UPDATE_ROOM_PRESENCES","FETCH_MORE_MESSAGES","JOIN_ROOM_SAGA","INIT_SLACKER_SAGA","loginError","error","tryLoginAnonymously","dispatch","signInAnonymously","then","catch","console","log","Title","Typography","LoginProviders","ProfileDialog","handleTryLogin","providerName","tryLoginProvider","handleClose","title","visible","isOpen","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","level","span","onClick","style","margin","fontSize","provider","Promise","reject","signInWithPopup","response","user","Header","Layout","AccountButton","TopRightMenu","AppHeader","profileOpen","handleProfileOpen","handleProfileClose","photoURL","background","borderBottom","padding","display","flexDirection","alignItems","justifyContent","paddingTop","marginRight","src","LoadingWrapper","LoadingSpinner","Content","Room","isLoading","overflow","updateRoom","people","messageCount","availableRooms","rooms","showError","syncMessages","messagesSnapshot","forEach","doc","data","updateMessages","byCreatedAt","a","b","Date","createdAt","getTime","getEarliestMessageForRoomId","active","Object","values","sort","getProps","createSelector","ownProps","match","params","RoomContainer","messagesEnd","messagesContainer","scrollData","handleMessagesScroll","element","scrollHeight","scrollTop","clientHeight","scrollToBottom","scrollIntoView","behavior","handleLoadMoreVisibilityChange","isVisible","loadMoreVisible","tryFetchMoreMessages","prevProps","previousLastMessage","slice","currentLastMessage","Math","abs","scrollBottom","calculatedScrollTop","scrollTo","top","types","TextArea","Text","TextWrap","CreateChatDialog","roomName","description","handleChange","handleSubmit","userDisplayName","unread","lastRead","tryCreateRoom","rows","roomData","showCreateError","collection","get","snapshot","push","find","r","add","roomRef","set","Label","BrowseRoomsDialog","handleJoinRoom","canJoin","tryJoinRoom","bodyStyle","maxHeight","overflowY","dataSource","roomList","renderItem","item","Item","Meta","avatar","avatarUrl","available","undefined","Sider","LogoWrap","Logo","img","RoomButtons","MenuButton","App","openDialog","handleCloseDialog","handleOpenDialog","dialogName","handleRoomSelect","history","initAuth","location","activeRooms","pathname","initSlacker","height","position","left","theme","mode","onSelect","selectedKeys","className","marginLeft","path","component","onAuthStateChanged","userData","email","loginSuccess","defaultState","roomReducer","action","reduce","acc","reducers","combineReducers","roomsReducer","redirect","redirectTo","updateRoomPresences","joinRoom","fetchMessages","fetchRoom","subscribeToLastMessage","fetchMoreMessages","fetchMoreMessagesListener","joinRoomListener","updateRoomPresencesListener","select","call","getCollection","userRoomsQuery","empty","userRoomIds","userRoomDoc","setDocument","getDocument","roomDoc","exists","put","person","cursor","messagePage","orderBy","limit","startAfter","messageDoc","peopleDoc","keys","newestMessage","fork","syncCollection","successActionCreator","earliestMessage","takeEvery","initSlackerListner","roomsPromise","roomsQuery","generalRoom","includes","takeLatest","rootSaga","all","initSaga","roomSagas","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","mySaga","configureStore","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07737475.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react'\nimport { Avatar } from 'antd'\nimport styled from 'styled-components'\n\nconst MessageLayout = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 2px;\n`\n\nconst LeftPanel = styled.div`\n\twidth: 46px;\n\tpadding: 5px;\n`\n\n// const Avatar = styled.div`\n// \t/* width: 35px;\n// \theight: 35px;\n// \tmargin: 5px;\n// \tborder-radius: 2px;\n// \tbackground-color: #cecece;\n// ` */\n\nconst RightPanel = styled.div`\n\tcolor: black;\n`\n\nconst MessageHeader = styled.div`\n\tcolor: black;\n\tfont-weight: bold;\n\tmargin-top: 2px;\n`\n\ninterface Props {\n\tname: string\n\tisConsecutive?: boolean\n}\n\nconst Message: FunctionComponent<Props> = ({\n\tchildren,\n\tname,\n\tisConsecutive,\n}) => {\n\tif (isConsecutive) {\n\t\treturn (\n\t\t\t<MessageLayout>\n\t\t\t\t<LeftPanel />\n\t\t\t\t<RightPanel>{children}</RightPanel>\n\t\t\t</MessageLayout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<MessageLayout>\n\t\t\t<LeftPanel>\n\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\n\t\t\t</LeftPanel>\n\t\t\t<RightPanel>\n\t\t\t\t<MessageHeader>{name}</MessageHeader>\n\t\t\t\t{children}\n\t\t\t</RightPanel>\n\t\t</MessageLayout>\n\t)\n}\n\nexport default Message\n","import firebase from 'firebase'\nimport '@firebase/firestore' // 👈 Don't forget this!\nimport ReduxSagaFirebase from 'redux-saga-firebase'\nconst config = {\n\tapiKey: 'AIzaSyB2tCxT6yP0CWtCbD9JDj3ZKaxxW8T25PI',\n\tauthDomain: 'slacker-c3b01.firebaseapp.com',\n\tdatabaseURL: 'https://slacker-c3b01.firebaseio.com',\n\tprojectId: 'slacker-c3b01',\n\tstorageBucket: 'slacker-c3b01.appspot.com',\n\tmessagingSenderId: '286218247810',\n}\nconst firebaseApp = firebase.initializeApp(config)\nconst rsf = new ReduxSagaFirebase(firebaseApp)\nconst database = firebase.firestore()\nconst functions = firebaseApp.functions('europe-west1')\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nconst auth = firebase.auth()\n\nexport {\n\tfirebase,\n\tfunctions,\n\trsf,\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n\tdatabase as default,\n}\n","import { functions } from '../firebase/firebase'\n\n// get function handler\nconst sendMessage = functions.httpsCallable('sendMessage')\nexport const trySendMessage = (\n\ttext: string,\n\troomId: string,\n\tstatus: boolean = false,\n) => {\n\treturn (_: any, getState: any) => {\n\t\tconst user = getState().auth\n\t\tif (user) {\n\t\t\tconst message = {\n\t\t\t\ttext,\n\t\t\t\troomId,\n\t\t\t}\n\t\t\treturn sendMessage(message)\n\t\t}\n\t}\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { trySendMessage } from '../actions/messages'\n\nconst InputForm = styled.form`\n\theight: 44px;\n\tbackground-color: #fff;\n\tborder-radius: 4px;\n\tborder: 1px solid #acacac;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-shrink: 0;\n`\n\nconst Input = styled.input`\n\tpadding-left: 14px;\n\tborder: none;\n\tborder-radius: 4px;\n\tflex-grow: 1;\n\toutline: none;\n`\n\nconst SendButton = styled.button`\n\tflex-shrink: 0;\n\tpadding: 0px 15px;\n\tbackground: none;\n\tborder: none;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\ttrySendMessage: (text: string, roomId: string) => void\n}\n\ninterface State {\n\tvalue: string\n}\n\nclass ChatInput extends Component<Props, State> {\n\tstate = {\n\t\tvalue: '',\n\t}\n\n\thandleTyping = (e: any) => {\n\t\tthis.setState({ value: e.target.value })\n\t}\n\n\thandleSend = (e: any) => {\n\t\te.preventDefault()\n\t\tconst { room } = this.props\n\t\tconst text = this.state.value\n\t\tif (!!room && !!room.id && text.length > 0) {\n\t\t\tthis.props.trySendMessage(text, room.id)\n\t\t\tthis.setState({\n\t\t\t\tvalue: '',\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<InputForm onSubmit={this.handleSend}>\n\t\t\t\t<Input value={this.state.value} onChange={this.handleTyping} />\n\t\t\t\t<SendButton type={'submit'}>Send</SendButton>\n\t\t\t</InputForm>\n\t\t)\n\t}\n}\n\nexport default connect(\n\tnull,\n\t{ trySendMessage },\n)(ChatInput)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'antd'\nimport VisibilitySensor from 'react-visibility-sensor'\n\nimport Message from './Message'\nimport ChatInput from './ChatInput'\n\nconst ChatWrapper = styled.div`\n\t/* height: 100%; */\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n`\n\nconst Messages = styled.div`\n\tpadding-top: 8px;\n\tpadding-bottom: 8px;\n\tflex-grow: 1;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n`\n\nconst TopAnchor = styled.div`\n\twidth: 100%;\n\theight: 60px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst BottomAnchor = styled.div`\n\tfloat: left;\n\tclear: both;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\tmessages: Message[]\n\tonLoadMoreVisibilityChange: (isVisible: boolean) => void\n\tonMessagesScroll: (arg: any) => void\n\tgetMessagesRef: (ref: any) => void\n\tgetBottomAnchorRef: (ref: any) => void\n}\n\nconst Conversation = ({\n\troom,\n\tmessages,\n\tgetMessagesRef,\n\tgetBottomAnchorRef,\n\tonMessagesScroll,\n\tonLoadMoreVisibilityChange,\n}: Props) => (\n\t<ChatWrapper>\n\t\t<Messages onScroll={onMessagesScroll} ref={getMessagesRef}>\n\t\t\t{!!room && room.canFetchMore && (\n\t\t\t\t<TopAnchor>\n\t\t\t\t\t<VisibilitySensor onChange={onLoadMoreVisibilityChange}>\n\t\t\t\t\t\t<Button>Load more</Button>\n\t\t\t\t\t</VisibilitySensor>\n\t\t\t\t</TopAnchor>\n\t\t\t)}\n\t\t\t{messages.map((message, idx) => (\n\t\t\t\t<Message\n\t\t\t\t\tisConsecutive={\n\t\t\t\t\t\t!!messages[idx - 1] &&\n\t\t\t\t\t\tmessages[idx - 1].sender.uid === message.sender.uid\n\t\t\t\t\t}\n\t\t\t\t\tname={message.sender.displayName || ''}\n\t\t\t\t\tkey={message.id}\n\t\t\t\t>\n\t\t\t\t\t{message.text}\n\t\t\t\t</Message>\n\t\t\t))}\n\t\t\t<BottomAnchor ref={getBottomAnchorRef} />\n\t\t</Messages>\n\t\t<ChatInput room={room} />\n\t</ChatWrapper>\n)\n\nexport default Conversation\n","// auth\nexport const LOGIN_SUCCESS = 'LOGIN'\nexport const LOGOUT_SUCCESS = 'LOGOUT'\n\n// update state actions\nexport const UPDATE_USER_ROOM_PRESENCE = 'UPDATE_USER_ROOM_PRESENCE'\nexport const UPDATE_ROOM_PRESENCES = 'UPDATE_ROOM_PRESENCES'\nexport const UPDATE_MESSAGES = 'UPDATE_MESSAGES'\nexport const UPDATE_ROOM = 'UPDATE_ROOM'\nexport const UPDATE_AVAILABLE_ROOMS = 'UPDATE_AVAILABLE_ROOMS'\n\n// room related events\nexport const ACTIVE_ROOM = 'ACTIVE_ROOM'\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\n\nexport const FETCH_MORE_MESSAGES = 'FETCH_MORE_MESSAGES'\n\nexport const FETCH_MESSAGES_REQUEST = 'FETCH_MESSAGES_REQUEST'\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS'\nexport const FETCH_MESSAGES_ERROR = 'FETCH_MESSAGES_ERROR'\n\n// saga triggers\nexport const JOIN_ROOM_SAGA = 'JOIN_ROOM_SAGA'\nexport const INIT_SLACKER_SAGA = 'INIT_SLACKER_SAGA'\n","import {\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n} from '../firebase/firebase'\n\nimport * as types from '../constants/ActionTypes'\n\nexport const loginSuccess = (uid: string, userData: any) => ({\n\ttype: types.LOGIN_SUCCESS,\n\tuid,\n\tuserData,\n})\n\nexport const loginError = (error: any) => ({\n\ttype: types.LOGIN_SUCCESS,\n\terror\n})\n\nexport const initAuth = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth.onAuthStateChanged(user => {\n\t\t\tif (user) {\n\t\t\t\t// user authenticated, update redux\n\t\t\t\tif (user) {\n\t\t\t\t\tconst userData = {\n\t\t\t\t\t\tdisplayName: user.displayName || 'Ninja',\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\tphotoURL: user.photoURL,\n\t\t\t\t\t}\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, userData))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// no saved user, create shadow\n\t\t\t\ttryLoginAnonymously()(dispatch)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const tryLoginAnonymously = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth\n\t\t\t.signInAnonymously()\n\t\t\t.then(() => {\n\t\t\t\t// console.log(response);\n\t\t\t\t// const { user } = response\n\n\t\t\t\t// if (user) {\n\t\t\t\t// \tconst displayName = user.displayName || 'Ninja'\n\t\t\t\t// \treturn dispatch(loginSuccess(user.uid, displayName))\n\t\t\t\t// }\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\n\t\t\t\treturn dispatch(loginError({ error }))\n\t\t\t})\n\t}\n}\n\nexport const tryLoginProvider = (providerName: string) => {\n\treturn (dispatch: any) => {\n\t\t// pick login provider\n\t\tlet provider = null\n\t\tif (providerName === 'github') {\n\t\t\tprovider = githubAuthProvider\n\t\t} else if (providerName === 'google') {\n\t\t\tprovider = googleAuthProvider\n\t\t} else {\n\t\t\treturn Promise.reject('Invalid auth provider')\n\t\t}\n\n\t\t// TODO check if user exits maybe?\n\n\t\treturn auth\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then(response => {\n\t\t\t\tconst { user } = response\n\n\t\t\t\tconsole.log({ user })\n\n\t\t\t\t// go through user rooms and update people collection with name and picture?\n\n\t\t\t\tif (user) {\n\t\t\t\t\treturn dispatch({\n\t\t\t\t\t\ttype: types.UPDATE_USER_ROOM_PRESENCE,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\t\t\t\t\n\t\t\t\treturn dispatch(loginError({ error }))\n\t\t\t})\n\t}\n}\n\nexport const logout = () => ({\n\ttype: types.LOGOUT_SUCCESS,\n})\n\nexport const tryLogout = () => {\n\treturn () => {\n\t\treturn auth.signOut().then(() => {\n\t\t\tconsole.log('log out!!!')\n\t\t})\n\t}\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Typography, Row, Col, Icon, Button } from 'antd'\nimport { tryLoginProvider } from '../actions/auth'\nconst { Title } = Typography\n\nconst LoginProviders = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryLoginProvider: (providerName: string) => Promise<any>\n\tauth: Auth\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass ProfileDialog extends Component<Props, State> {\n\thandleTryLogin = (providerName: string) => {\n\t\tthis.props.tryLoginProvider(providerName).then(() => {\n\t\t\tthis.props.handleClose()\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Profile\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<Title level={4}>Login with</Title>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<LoginProviders>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => this.handleTryLogin('github')}\n\t\t\t\t\t\t\t\t\tstyle={{ margin: 5 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"github\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={() => this.handleTryLogin('google')}>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"google\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</LoginProviders>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryLoginProvider },\n)(ProfileDialog)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Layout, Typography, Avatar, Button } from 'antd'\n\nimport ProfileDialog from '../components/ProfileDialog'\n\nconst { Header } = Layout\nconst { Title } = Typography\n\nconst AccountButton = styled.button`\n\tbackground: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 4px;\n\ttransition: border 0.5s;\n\toutline: none;\n\tpadding: 0px;\n\tline-height: normal;\n\tcursor: pointer;\n`\n\nconst TopRightMenu = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n`\n\ninterface Props {\n\troom?: RoomItem\n\tuid?: string\n\tphotoURL?: string\n}\n\ninterface State {\n\tprofileOpen: boolean\n}\n\nclass AppHeader extends Component<Props, State> {\n\tstate = {\n\t\tprofileOpen: false,\n\t}\n\n\thandleProfileOpen = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: true,\n\t\t})\n\t}\n\n\thandleProfileClose = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: false,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { room, uid, photoURL } = this.props\n\t\t// TODO plan what is in here\n\t\t// const menu = (\n\t\t// \t<Menu>\n\t\t// \t\t<Menu.Item onClick={this.handleProfileOpen}>\n\t\t// \t\t\t<a>Profile</a>\n\t\t// \t\t</Menu.Item>\n\t\t// \t\t{/* <Menu.Item>\n\t\t// \t\t\t<a>2nd menu item</a>\n\t\t// \t\t</Menu.Item>\n\t\t// \t\t<Menu.Item>\n\t\t// \t\t\t<a>3rd menu item</a>\n\t\t// \t\t</Menu.Item> */}\n\t\t// \t</Menu>\n\t\t// )\n\t\treturn (\n\t\t\t<Header\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\tborderBottom: '1px solid #acacac',\n\t\t\t\t\tpadding: 16,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Title style={{ margin: 0 }} level={3}>\n\t\t\t\t\t# {room ? room.name : ''}\n\t\t\t\t</Title>\n\t\t\t\t{!!uid && (\n\t\t\t\t\t<TopRightMenu>\n\t\t\t\t\t\t<Button icon=\"setting\" shape=\"circle\" style={{ paddingTop: 1, marginRight: 10 }} />\n\n\t\t\t\t\t\t<AccountButton onClick={this.handleProfileOpen}>\n\t\t\t\t\t\t\t<Avatar src={photoURL} size={35} shape=\"square\" />\n\t\t\t\t\t\t</AccountButton>\n\t\t\t\t\t\t<ProfileDialog\n\t\t\t\t\t\t\tisOpen={this.state.profileOpen}\n\t\t\t\t\t\t\thandleClose={this.handleProfileClose}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TopRightMenu>\n\t\t\t\t)}\n\t\t\t</Header>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { auth } = state\n\treturn {\n\t\tuid: auth.uid,\n\t\tphotoURL: auth.photoURL,\n\t}\n}\n\nexport default connect(mapStateToProps)(AppHeader)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spin } from 'antd'\n\nconst LoadingWrapper = styled.div`\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst LoadingSpinner = () => (\n\t<LoadingWrapper>\n\t\t<Spin size=\"large\" />\n\t</LoadingWrapper>\n)\n\nexport default LoadingSpinner\n","import React, { Fragment, FunctionComponent } from 'react'\nimport AppHeader from '../containers/AppHeader'\nimport { Layout } from 'antd'\nimport LoadingSpinner from './LoadingSpinner'\n\nconst { Content } = Layout\n\ninterface Props {\n\troom: RoomItem | undefined\n\tisLoading?: boolean\n}\n\nconst Room: FunctionComponent<Props> = ({ room, children, isLoading }) => (\n\t<Fragment>\n\t\t<AppHeader room={room} />\n\t\t<Content\n\t\t\tstyle={{\n\t\t\t\tmargin: '0px 16px 24px 16px',\n\t\t\t\toverflow: 'initial',\n\t\t\t\tdisplay: 'flex',\n\t\t\t}}\n\t\t>\n\t\t\t{isLoading ? <LoadingSpinner /> : children}\n\t\t</Content>\n\t</Fragment>\n)\n\nexport default Room\n","import database from '../firebase/firebase'\n// import { ipcRenderer } from 'electron';\n\nimport { trySendMessage } from './messages'\n\nimport * as types from '../constants/ActionTypes'\n\n// const byCreatedAt = function(a: any, b: any) {\n// \treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n// }\n\nexport interface RoomData {\n\tid?: string\n\tname?: string\n\tpeople?: any\n\tmessages?: any\n\tmessageCount?: number\n\tcanFetchMore?: boolean\n}\n\nexport const updateRoom = ({\n\tid,\n\tname,\n\tpeople,\n\tmessages = [],\n\tcanFetchMore,\n\tmessageCount,\n}: RoomData) => ({\n\ttype: types.UPDATE_ROOM,\n\troom: {\n\t\tid,\n\t\tname,\n\t\tpeople,\n\t\tmessages,\n\t\tcanFetchMore,\n\t\tmessageCount,\n\t},\n})\n\nexport const activeRoom = (activeRoom: RoomItem) => ({\n\ttype: types.ACTIVE_ROOM,\n\tactiveRoom,\n})\n\nexport const tryJoinRoom = (roomId: string) => ({\n\ttype: types.JOIN_ROOM_SAGA,\n\troomId,\n})\n\nexport const tryCreateRoom = (roomData: RoomData, showCreateError: any) => {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\tconst room = {\n\t\t\tname: roomData.name,\n\t\t}\n\t\t// get all rooms\n\t\treturn database\n\t\t\t.collection('rooms')\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst rooms: Room[] = []\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\tconsole.log(doc)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst room: Room = doc.data()\n\t\t\t\t\trooms.push({\n\t\t\t\t\t\t...room,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// if no room with this name\n\t\t\t\tif (!rooms.find(r => r.name === room.name)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t.collection('rooms')\n\t\t\t\t\t\t\t.add(room)\n\t\t\t\t\t\t\t// create this room and\n\t\t\t\t\t\t\t.then(roomRef => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t.collection(`rooms/${roomRef.id}/people`)\n\t\t\t\t\t\t\t\t\t\t.doc(roomData.people.id)\n\t\t\t\t\t\t\t\t\t\t// assign people to it?\n\t\t\t\t\t\t\t\t\t\t.set(roomData.people)\n\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t\t\t.collection(`users/${roomData.people.id}/rooms`)\n\t\t\t\t\t\t\t\t\t\t\t\t.doc(roomRef.id)\n\t\t\t\t\t\t\t\t\t\t\t\t.set({ roomName: room.name })\n\n\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\tupdateRoom({\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: roomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t...roomData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpeople: [roomData.people],\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t\t\t\tconst user = getState().auth\n\t\t\t\t\t\t\t\t\t\t\tif (user) {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrySendMessage(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${user.displayName} created this room`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\troomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn showCreateError('Room name not available!')\n\t\t\t\t}\n\t\t\t})\n\t}\n}\n\nexport const tryFetchMoreMessages = (roomId: string) => ({\n\ttype: types.FETCH_MORE_MESSAGES,\n\troomId,\n})\n\nexport const availableRooms = (rooms: RoomItem[]) => ({\n\ttype: types.UPDATE_AVAILABLE_ROOMS,\n\trooms,\n})\n\nexport const initSlacker = () => ({\n\ttype: types.INIT_SLACKER_SAGA,\n})\n\nexport const showError = (message: string) => ({\n\ttype: 'ERROR_MESSAGE',\n\tmessage,\n})\n\nexport const clearState = {\n\ttype: 'CLEAR_STATE',\n}\n\nexport const leaveRoom = (roomName: string, userId: string) => ({\n\ttype: 'LEAVE_ROOM',\n\troomName,\n\tuserId,\n})\n\nexport const syncMessages = (messagesSnapshot: any, roomId: string) => {\n\tconst messages: Messages = {}\n\tmessagesSnapshot.forEach((doc: any) => {\n\t\tmessages[doc.id] = { id: doc.id, ...doc.data() }\n\t})\n\n\treturn updateMessages(messages, roomId)\n}\n\nexport const updateMessages = (\n\tmessages: any,\n\troomId: string,\n\tcanFetchMore: boolean = true,\n) => ({\n\ttype: types.UPDATE_MESSAGES,\n\tmessages,\n\tcanFetchMore,\n\troomId,\n})\n","export const byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}","import { createSelector } from 'reselect'\nimport { byCreatedAt } from '../utils/misc'\n\nimport { SelectorProps } from '../containers/Room'\n\nconst getAuth = (state: StoreState) => state.auth\n\nconst getRoom = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\treturn state.rooms.active[roomId]\n}\n\nconst getRoomMessages = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\tconst room = state.rooms.active[roomId]\n\treturn room ? Object.values(room.messages).sort(byCreatedAt) : []\n}\n\nexport const getEarliestMessageForRoomId = (roomId: string) => (\n\tstate: StoreState,\n) => {\n\tconst room = state.rooms.active[roomId]\n\tconst messages = Object.values(room.messages).sort(byCreatedAt)\n\treturn messages[0] || null\n}\n\nconst getProps = createSelector(\n\tgetRoom,\n\tgetRoomMessages,\n\tgetAuth,\n\t(room, messages, auth): SelectorProps => {\n\t\treturn {\n\t\t\tauth,\n\t\t\troom,\n\t\t\tmessages,\n\t\t\tisLoading: !room\n\t\t}\n\t},\n)\n\nexport default getProps\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Conversation from '../components/Conversation'\nimport Room from '../components/Room'\n\nimport { tryFetchMoreMessages } from '../actions/rooms'\nimport { trySendMessage } from '../actions/messages'\nimport getProps from '../selectors/room'\n\ninterface State {\n\tloadMoreVisible: boolean | null\n}\n\nexport interface SelectorProps {\n\tauth: Auth\n\troom: RoomItem | undefined\n\tmessages: Message[]\n\tisLoading: boolean\n}\n\ninterface DispatchProps {\n\ttrySendMessage: (text: string, roomId: string, status?: boolean) => void\n\ttryFetchMoreMessages: (roomId: string) => void\n}\n\ninterface OwnProps {\n\tmatch: any\n}\n\ntype Props = SelectorProps & DispatchProps & OwnProps\n\nclass RoomContainer extends Component<Props, State> {\n\tmessagesEnd: any = null\n\tmessagesContainer: HTMLElement | null = null\n\tscrollData: any = null\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tloadMoreVisible: null,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.scrollToBottom()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\t// scroll management\n\t\tif (prevProps.messages.length === 0 && this.props.messages.length > 0) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.room &&\n\t\t\tthis.props.room &&\n\t\t\tprevProps.room.id !== this.props.room.id\n\t\t) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.messages.length !== this.props.messages.length &&\n\t\t\tprevProps.messages.length > 0 &&\n\t\t\tthis.props.messages.length > 0\n\t\t) {\n\t\t\tconst previousLastMessage = prevProps.messages.slice(-1)[0]\n\t\t\tconst currentLastMessage = this.props.messages.slice(-1)[0]\n\t\t\t// if last message is different\n\t\t\tif (previousLastMessage.id !== currentLastMessage.id) {\n\t\t\t\tif (\n\t\t\t\t\t!!currentLastMessage &&\n\t\t\t\t\tcurrentLastMessage.sender.uid === this.props.auth.uid\n\t\t\t\t) {\n\t\t\t\t\t// last message was ours, scroll to the bottom\n\t\t\t\t\tthis.scrollToBottom()\n\t\t\t\t} else if (this.messagesContainer) {\n\t\t\t\t\t// last message is not ours, lets check scroll\n\t\t\t\t\tconst {\n\t\t\t\t\t\tscrollHeight,\n\t\t\t\t\t\tscrollTop,\n\t\t\t\t\t\tclientHeight,\n\t\t\t\t\t} = this.messagesContainer\n\n\t\t\t\t\t// if our scroll is around bottom 2 messages, scroll to bottom pls\n\t\t\t\t\tif (Math.abs(clientHeight - (scrollHeight - scrollTop - 45)) < 45) {\n\t\t\t\t\t\tthis.scrollToBottom()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if we loaded earlier messages we need to restore scroll position\n\t\t\t\tif (this.scrollData && this.messagesContainer) {\n\t\t\t\t\tconst { scrollHeight, scrollTop, clientHeight } = this.scrollData\n\t\t\t\t\tconst scrollBottom = scrollHeight - clientHeight - scrollTop\n\t\t\t\t\tif (scrollBottom > 0) {\n\t\t\t\t\t\tconst updatedScrollHeight = this.messagesContainer.scrollHeight\n\t\t\t\t\t\tconst updatedClientHeight = this.messagesContainer.clientHeight\n\t\t\t\t\t\tconst calculatedScrollTop =\n\t\t\t\t\t\t\tupdatedScrollHeight - updatedClientHeight - scrollBottom\n\n\t\t\t\t\t\tthis.messagesContainer.scrollTo({ top: calculatedScrollTop })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetMessagesRef = (ref: any) => {\n\t\tthis.messagesContainer = ref\n\t}\n\n\t// TODO improve typings\n\thandleMessagesScroll = (e: any) => {\n\t\tif (e && e.target) {\n\t\t\tlet element = e.target\n\t\t\tthis.scrollData = {\n\t\t\t\tscrollHeight: element.scrollHeight,\n\t\t\t\tscrollTop: element.scrollTop,\n\t\t\t\tclientHeight: element.clientHeight,\n\t\t\t}\n\t\t}\n\t}\n\n\tscrollToBottom = () => {\n\t\tif (this.messagesEnd) {\n\t\t\tthis.messagesEnd.scrollIntoView({ behavior: 'auto' })\n\t\t}\n\t}\n\n\thandleLoadMoreVisibilityChange = (isVisible: any) => {\n\t\tconst { room } = this.props\n\t\tif (isVisible && this.state.loadMoreVisible === false && room) {\n\t\t\tconsole.log('load more messages')\n\t\t\tthis.props.tryFetchMoreMessages(room.id)\n\t\t}\n\n\t\tthis.setState({\n\t\t\tloadMoreVisible: isVisible,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { room, messages, isLoading } = this.props\n\n\t\treturn (\n\t\t\t<Room room={room} isLoading={isLoading}>\n\t\t\t\t<Conversation\n\t\t\t\t\troom={room}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tonLoadMoreVisibilityChange={this.handleLoadMoreVisibilityChange}\n\t\t\t\t\tonMessagesScroll={this.handleMessagesScroll}\n\t\t\t\t\tgetMessagesRef={this.getMessagesRef}\n\t\t\t\t\tgetBottomAnchorRef={ref => (this.messagesEnd = ref)}\n\t\t\t\t/>\n\t\t\t</Room>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: any): SelectorProps =>\n\tgetProps(state, ownProps)\n\nexport default connect(\n\tmapStateToProps,\n\t{ trySendMessage, tryFetchMoreMessages },\n)(RoomContainer)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Input, Typography } from 'antd'\nimport { tryCreateRoom, RoomData } from '../actions/rooms'\n\nconst { TextArea } = Input\nconst { Text } = Typography\n\nconst TextWrap = styled.div`\n\tmargin-top: 5px;\n\tmargin-bottom: 5px;\n`\n\ninterface Props {\n\tisOpen: boolean;\n\thandleClose: () => void;\n\ttryCreateRoom: (roomData: RoomData, showCreateError?: any) => Promise<any>;\n\tauth: Auth;\n}\n\ninterface State {\n\troomName: string;\n\tdescription: string;\n}\n\nclass CreateChatDialog extends Component<Props, State> {\n\tstate = {\n\t\troomName: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = (e: any) => {\n\t\tconsole.log(e.target.name)\n\t\t// @ts-ignore\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\thandleSubmit = () => {\n\t\tconst { uid, displayName: userDisplayName } = this.props.auth\n\t\tif (uid) {\n\t\t\tconsole.log('Create this room pls')\n\t\t\tconst roomName = this.state.roomName\n\t\t\tif (roomName && roomName.length > 0) {\n\t\t\t\t// this.setState({ error: '' })\n\t\t\t\tconst room = {\n\t\t\t\t\tname: roomName,\n\t\t\t\t\tpeople: {\n\t\t\t\t\t\tid: uid,\n\t\t\t\t\t\tname: userDisplayName,\n\t\t\t\t\t\tunread: 0,\n\t\t\t\t\t\tlastRead: 0,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tthis.props.tryCreateRoom(room)\n\t\t\t\tthis.props.handleClose()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Create Room\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.handleSubmit}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Name:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"roomName\"\n\t\t\t\t\tvalue={this.state.roomName}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Description:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<TextArea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trows={4}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryCreateRoom },\n)(CreateChatDialog)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, List, Avatar, Button } from 'antd'\n\nimport { tryJoinRoom } from '../actions/rooms'\n\nconst Label = styled.div`\n\tpadding: 10px;\n`\n\ninterface RoomWithAvailability extends RoomItem {\n\tcanJoin: boolean\n}\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryJoinRoom: (roomId: string) => void\n\tauth: Auth\n\troomList: Array<RoomWithAvailability>\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass BrowseRoomsDialog extends Component<Props, State> {\n\thandleJoinRoom = (room: RoomWithAvailability) => {\n\t\tif (!room.canJoin) {\n\t\t\tconsole.log('redirect to that room')\n\t\t\tthis.props.handleClose()\n\t\t\treturn\n\t\t}\n\n\t\tthis.props.tryJoinRoom(room.id)\n\t\t// this.props.handleClose()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Browse Rooms\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tbodyStyle={{ maxHeight: 450, overflowY: 'scroll' }}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tdataSource={this.props.roomList}\n\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t<List.Item key={item.id}>\n\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\tavatar={item.avatarUrl ? <Avatar src={item.avatarUrl} /> : null}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdescription={'TODO room descriptions'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item.canJoin ? (\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Label>Active</Label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t</List>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { available, active } = state.rooms\n\tconst roomList = Object.values(available).map(room => {\n\t\tconst canJoin =\n\t\t\tObject.values(active).find(item => item.id === room.id) === undefined\n\t\treturn {\n\t\t\t...room,\n\t\t\tcanJoin,\n\t\t}\n\t})\n\treturn {\n\t\troomList,\n\t\tauth: state.auth,\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryJoinRoom },\n)(BrowseRoomsDialog)\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Icon } from 'antd'\n\nimport RoomContainer from './Room'\nimport CreateChatDialog from '../components/CreateChatDialog'\nimport BrowseRoomsDialog from '../components/BrowseRoomsDialog'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\nimport { initAuth } from '../actions/auth'\nimport { initSlacker } from '../actions/rooms'\n\nimport '../styles/index.css'\n\nconst { Sider } = Layout\n\nconst LogoWrap = styled.div`\n\ttext-align: center;\n\tpadding: 10px;\n\theight: 64px;\n\tborder-bottom: 1px solid grey;\n`\n\nconst Logo = styled.img`\n\theight: 100%;\n`\n\nconst RoomButtons = styled.div`\n\tpadding: 10px;\n\tcolor: rgba(255, 255, 255, 0.65);\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`\n\nconst MenuButton = styled.button`\n\tfont-size: 16px;\n\tbackground: none;\n\tborder: none;\n\t-webkit-transition: color 0.5s;\n\ttransition: color 0.5s;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: #fff;\n\t}\n`\n\nconst Content = styled.div`\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tinitAuth: () => void\n\tinitSlacker: () => void\n\tauth: Auth\n\tactiveRooms: RoomItem[]\n\tavailableRooms: RoomItem[]\n\thistory: any\n\tlocation: {\n\t\tpathname: any\n\t}\n}\n\ninterface State {\n\topenDialog: string | false\n}\n\nclass App extends Component<Props, State> {\n\tstate: State = {\n\t\topenDialog: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initAuth()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\tconst { location, activeRooms, history } = this.props\n\t\tif (\n\t\t\tlocation.pathname === '/' &&\n\t\t\tprevProps.activeRooms.length === 0 &&\n\t\t\tactiveRooms.length !== 0\n\t\t) {\n\t\t\thistory.push(`/r/${activeRooms[0].id}`)\n\t\t}\n\n\t\tif (!prevProps.auth.uid && this.props.auth.uid) {\n\t\t\tthis.props.initSlacker()\n\t\t}\n\t}\n\n\thandleCloseDialog = () => {\n\t\tthis.setState({\n\t\t\topenDialog: false,\n\t\t})\n\t}\n\n\thandleOpenDialog = (dialogName: string) => {\n\t\tthis.setState({\n\t\t\topenDialog: dialogName,\n\t\t})\n\t}\n\n\thandleRoomSelect = ({ key }: { key: string }) => {\n\t\tthis.props.history.push(key)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout style={{ height: '100%' }}>\n\t\t\t\t<Sider\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\theight: '100vh',\n\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<LogoWrap>\n\t\t\t\t\t\t<Logo src=\"fox.png\" />\n\t\t\t\t\t</LogoWrap>\n\n\t\t\t\t\t<RoomButtons>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('browseRooms')}>\n\t\t\t\t\t\t\t<span>Rooms:</span>\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('createRoom')}>\n\t\t\t\t\t\t\t<Icon type=\"plus-circle\" />\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t</RoomButtons>\n\t\t\t\t\t<CreateChatDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'createRoom'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<BrowseRoomsDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'browseRooms'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\t\tonSelect={this.handleRoomSelect}\n\t\t\t\t\t\tselectedKeys={[this.props.location.pathname]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.activeRooms.map(room => (\n\t\t\t\t\t\t\t<Menu.Item key={`/r/${room.id}`}>\n\t\t\t\t\t\t\t\t<span className=\"nav-text\"># {room.name}</span>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout style={{ marginLeft: 200, background: '#fff' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={'/r/:roomId'} component={RoomContainer} />\n\t\t\t\t\t\t<Route path={'/'}>\n\t\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t\t{this.props.activeRooms.length === 0 ? (\n\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div>No chat selected</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n\tauth: state.auth,\n\tactiveRooms: Object.values(state.rooms.active),\n\tavailableRooms: Object.values(state.rooms.available),\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ initAuth, initSlacker },\n)(App)\n","import * as types from '../constants/ActionTypes'\nimport { Reducer } from 'redux'\n\ninterface RoomsState {\n\tactive: {\n\t\t[key: string]: RoomItem\n\t}\n\tavailable: {\n\t\t[key: string]: RoomItem\n\t}\n}\n\nconst defaultState: RoomsState = {\n\tactive: {},\n\tavailable: {},\n}\n\nconst roomReducer: Reducer<RoomsState> = (\n\tstate: RoomsState = defaultState,\n\taction: any,\n): RoomsState => {\n\tswitch (action.type) {\n\t\tcase types.UPDATE_ROOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.room.id]: { ...state.active[action.room.id], ...action.room },\n\t\t\t\t},\n\t\t\t}\n\t\tcase types.ACTIVE_ROOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.room.id]: { ...state.active[action.room.id], ...action.room },\n\t\t\t\t},\n\t\t\t}\n\n\t\tcase types.UPDATE_AVAILABLE_ROOMS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tavailable: {\n\t\t\t\t\t...action.rooms.reduce(\n\t\t\t\t\t\t(acc: any, value: RoomItem) => ({\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t[value.id]: value,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t{},\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t}\n\n\t\tcase types.SEND_MESSAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...[state.active[action.roomId]],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.active[action.roomId].messages,\n\t\t\t\t\t\t\t[action.message.id]: action.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tcase types.UPDATE_MESSAGES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...state.active[action.roomId],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.active[action.roomId].messages,\n\t\t\t\t\t\t\t...action.messages,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcanFetchMore: action.canFetchMore,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default roomReducer\n","import authReducer from './auth'\nimport roomsReducer from './rooms'\nimport redirectReducer from './redirect'\nimport { combineReducers } from 'redux'\n\nconst reducers = combineReducers({\n\tauth: authReducer,\n\trooms: roomsReducer,\n\tredirect: redirectReducer,\n})\n\nexport default reducers\n","export default (state = {}, action: any) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        uid: action.uid,\n        ...action.userData,\n      };\n    case \"LOGOUT\":\n      return {};\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action: any) => {\n\tswitch (action.type) {\n\t\tcase 'REDIRECT_TO':\n\t\t\treturn {\n\t\t\t\tredirectTo: action.redirectTo,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { put, select, takeEvery, call, fork } from 'redux-saga/effects'\nimport { AnyAction } from 'redux'\nimport database, { rsf } from '../firebase/firebase'\nimport * as types from '../constants/ActionTypes'\nimport {\n\tshowError,\n\tupdateRoom,\n\tsyncMessages,\n\tupdateMessages,\n} from '../actions/rooms'\nimport { CollectionReference, QuerySnapshot } from '@firebase/firestore-types'\nimport { getEarliestMessageForRoomId } from '../selectors/room'\n\nexport function* updateRoomPresences() {\n\tconst auth = yield select(state => state.auth)\n\tconst { uid, ...userData } = auth\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) => {\n\t\t\tuserRoomIds.push(userRoomDoc.id)\n\t\t})\n\n\t\tfor (var roomId in userRoomIds) {\n\t\t\tyield call(\n\t\t\t\t// @ts-ignore\n\t\t\t\trsf.firestore.setDocument,\n\t\t\t\t`rooms/${roomId}/people/${auth.uid}`,\n\t\t\t\t{\n\t\t\t\t\tid: auth.uid,\n\t\t\t\t\t...userData,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport function* joinRoom(action: AnyAction) {\n\tconst { roomId } = action\n\tconst { uid, displayName, photoURL } = yield select(state => state.auth)\n\tconst roomRef = database.doc(`rooms/${roomId}`)\n\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\tconst room = { id: roomDoc.id, ...roomDoc.data() } as RoomItem\n\n\tif (!room || !roomDoc.exists) {\n\t\tyield put(showError('Room not found!'))\n\t\treturn\n\t} else if (\n\t\troom.people &&\n\t\troom.people.find((person: Person) => person.id === uid)\n\t) {\n\t\t// if we are already in this room then\n\t\t// history.push(`room/${data.roomName}`);\n\t\t// return i guess ?\n\t\treturn\n\t} else {\n\t\t// we should add ourselves to this room\n\n\t\tconst person = {\n\t\t\tname: displayName,\n\t\t\tphotoURL: photoURL,\n\t\t\tid: uid,\n\t\t\tunread: 0,\n\t\t\tlastRead: 0,\n\t\t}\n\n\t\t// TODO figure wtf is wrong here\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`rooms/${roomId}/people/${person.id}`,\n\t\t\tperson,\n\t\t)\n\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`users/${person.id}/rooms/${roomId}`,\n\t\t\t{ roomName: room.name },\n\t\t)\n\n\t\t// fetch full room and subscribe\n\t\tyield call(fetchRoom, roomId)\n\t}\n}\n\nexport function* fetchMessages(roomRef: any, cursor?: any) {\n\tconst messages: any = {}\n\n\tlet messagePage = roomRef\n\t\t.collection('messages')\n\t\t.orderBy('createdAt', 'desc')\n\t\t.limit(35) as CollectionReference\n\n\tif (cursor) {\n\t\tmessagePage = messagePage.startAfter(cursor) as CollectionReference\n\t}\n\n\tconst messagesQuery: QuerySnapshot = yield call(\n\t\trsf.firestore.getCollection,\n\t\tmessagePage,\n\t)\n\n\tmessagesQuery.forEach((messageDoc: any) => {\n\t\tmessages[messageDoc.id] = { id: messageDoc.id, ...messageDoc.data() }\n\t})\n\n\treturn messages\n}\n\nexport function* fetchRoom(roomId: string) {\n\tconsole.log('try fetch room ', roomId)\n\t// fetch active room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\t// if we have such room\n\tif (roomDoc.exists) {\n\t\tconst room = roomDoc.data()\n\t\tconst people: any[] = []\n\n\t\t// get room's people\n\t\tconst peopleQuery = yield call(\n\t\t\trsf.firestore.getCollection,\n\t\t\troomRef.collection('people'),\n\t\t)\n\t\tpeopleQuery.forEach((peopleDoc: any) => {\n\t\t\tpeople.push({ id: peopleDoc.id, ...peopleDoc.data() })\n\t\t})\n\n\t\t// get room's messages first page\n\t\tconst messages = yield call(fetchMessages, roomRef)\n\n\t\tconst canFetchMore = Object.keys(messages).length === 35\n\n\t\tyield put(\n\t\t\tupdateRoom({\n\t\t\t\tid: roomRef.id,\n\t\t\t\tname: room ? room.name : 'Error',\n\t\t\t\tpeople,\n\t\t\t\tmessages,\n\t\t\t\t// messageCount: messages.length,\n\t\t\t\tcanFetchMore,\n\t\t\t}),\n\t\t)\n\n\t\tyield call(subscribeToLastMessage, roomRef)\n\t}\n}\n\nexport function* subscribeToLastMessage(\n\troomRef: firebase.firestore.DocumentReference,\n) {\n\t// subscribe to latest message\n\tconst newestMessage = roomRef\n\t\t.collection('messages')\n\t\t.orderBy('createdAt', 'desc')\n\t\t.limit(1) as CollectionReference\n\n\t// TODO merge this with other messages to save on reads\n\tyield fork(rsf.firestore.syncCollection, newestMessage, {\n\t\tsuccessActionCreator: (snapshot: any) => syncMessages(snapshot, roomRef.id),\n\t})\n}\n\nexport function* fetchMoreMessages(action: AnyAction) {\n\tconst { roomId } = action\n\tconsole.log('try fetch room ', roomId)\n\t// fetch active room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\tif (roomDoc.exists) {\n\t\t// find oldest message\n\t\tconst earliestMessage = yield select(getEarliestMessageForRoomId(roomId))\n\n\t\tconsole.log({ earliestMessage })\n\n\t\tconst messages = yield call(\n\t\t\tfetchMessages,\n\t\t\troomRef,\n\t\t\tearliestMessage.createdAt,\n\t\t)\n\n\t\tconsole.log({ messages })\n\n\t\tconst canFetchMore = Object.keys(messages).length === 35\n\n\t\tconsole.log({ canFetchMore })\n\n\t\tyield put(updateMessages(messages, roomId, canFetchMore))\n\t}\n}\n\nfunction* fetchMoreMessagesListener() {\n\tyield takeEvery(types.FETCH_MORE_MESSAGES, fetchMoreMessages)\n}\n\nfunction* joinRoomListener() {\n\tyield takeEvery(types.JOIN_ROOM_SAGA, joinRoom)\n}\n\nfunction* updateRoomPresencesListener() {\n\tyield takeEvery(types.UPDATE_ROOM_PRESENCES, updateRoomPresences)\n}\n\nexport default [\n\tjoinRoomListener(),\n\tupdateRoomPresencesListener(),\n\tfetchMoreMessagesListener(),\n]\n","import { put, select, takeLatest, fork, call } from 'redux-saga/effects'\nimport database, { firebase, rsf } from '../firebase/firebase'\nimport { availableRooms } from '../actions/rooms'\nimport * as types from '../constants/ActionTypes'\nimport { fetchRoom } from './roomSagas'\n\n// worker Saga\nfunction* initSlacker(action: any) {\n\tconst auth = yield select(state => state.auth)\n\n\tif (!auth.uid) {\n\t\tconsole.log('no auth!')\n\t\treturn\n\t}\n\n\t// fetch all rooms\n\tconst roomsPromise = database.collection('rooms').get()\n\n\tconst roomsQuery: firebase.firestore.QuerySnapshot = yield roomsPromise\n\tconst rooms: RoomItem[] = []\n\troomsQuery.forEach(doc => {\n\t\tconst room = {\n\t\t\tid: doc.id,\n\t\t\t...doc.data(),\n\t\t}\n\t\t// @ts-ignore\n\t\trooms.push(room)\n\t})\n\n\tyield put(availableRooms(rooms))\n\tconst generalRoom = rooms.find(room => room.name === 'general')\n\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) =>\n\t\t\tuserRoomIds.push(userRoomDoc.id),\n\t\t)\n\n\t\t// fetch each active room\n\t\tfor (let roomId of userRoomIds) {\n\t\t\tyield fork(fetchRoom, roomId)\n\t\t}\n\n\t\t// if no general room, join that as well\n\t\tif (generalRoom && !userRoomIds.includes(generalRoom.id)) {\n\t\t\tyield put({\n\t\t\t\ttype: types.JOIN_ROOM_SAGA,\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t} else {\n\t\tif (generalRoom) {\n\t\t\tyield put({\n\t\t\t\ttype: types.JOIN_ROOM_SAGA,\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t}\n}\n\nfunction* initSlackerListner() {\n\tyield takeLatest(types.INIT_SLACKER_SAGA, initSlacker)\n}\n\nexport default initSlackerListner\n","import { all } from 'redux-saga/effects'\nimport initSaga from './initSaga'\nimport roomSagas from './roomSagas'\n\nexport default function* rootSaga() {\n\tyield all([initSaga(), ...roomSagas])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport reducers from '../reducers'\n\nimport mySaga from '../sagas/rootSaga'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default () => {\n\tconst store = createStore(\n\t\treducers,\n\t\tcomposeEnhancers(applyMiddleware(thunk, sagaMiddleware)),\n\t)\n\n\tsagaMiddleware.run(mySaga)\n\n\treturn store\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\n\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\nconst jsx = (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<Route path={'/'} component={App} />\n\t\t</Router>\n\t</Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('container'))\n"],"sourceRoot":""}