{"version":3,"sources":["components/Message.tsx","firebase/firebase.ts","actions/messages.ts","components/ChatInput.tsx","components/LoadingSpinner.tsx","components/Conversation.tsx","constants/ActionTypes.ts","actions/users.ts","actions/auth.ts","components/ProfileDialog.tsx","actions/rooms.ts","containers/AppHeader.tsx","components/Room.tsx","utils/misc.ts","selectors/room.ts","containers/Room.tsx","components/CreateChatDialog.tsx","components/BrowseRoomsDialog.tsx","containers/App.tsx","reducers/rooms.ts","reducers/users.ts","reducers/index.ts","reducers/auth.ts","reducers/redirect.ts","sagas/messages.ts","sagas/rooms.ts","sagas/initSaga.ts","sagas/index.ts","store/configureStore.ts","index.tsx"],"names":["MessageLayout","styled","div","LeftPanel","RightPanel","MessageHeader","Message","children","name","photoURL","isConsecutive","src","size","shape","icon","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rsf","ReduxSagaFirebase","firestore","functionsInstance","functions","githubAuthProvider","auth","GithubAuthProvider","googleAuthProvider","GoogleAuthProvider","sendMessage","httpsCallable","joinRoom","leaveRoom","getRoomUsers","trySendMessage","text","roomId","_","getState","message","InputForm","form","Input","input","SendButton","button","ChatInput","state","value","handleTyping","e","setState","target","handleSend","preventDefault","room","props","id","length","onSubmit","this","onChange","type","Component","connect","LoadingWrapper","LoadingSpinner","ChatWrapper","Messages","TopAnchor","BottomAnchor","Conversation","messages","getMessagesRef","getBottomAnchorRef","onMessagesScroll","onLoadMoreVisibilityChange","onScroll","ref","canFetchMore","isFetchingMore","map","idx","sender","uid","displayName","undefined","key","UPDATE_ROOM_PRESENCES","FETCH_MORE_MESSAGES_SAGA","JOIN_ROOM_SAGA","LEAVE_ROOM_SAGA","INIT_SLACKER_SAGA","dispatch","then","response","usersObject","data","forEach","record","console","log","payload","catch","loginError","error","tryLoginAnonymously","signInAnonymously","Title","Typography","LoginProviders","ProfileDialog","handleTryLogin","providerName","tryLoginProvider","handleClose","title","visible","isOpen","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","level","span","onClick","style","margin","fontSize","provider","Promise","reject","signInWithPopup","user","updateRoom","availableRooms","rooms","updateMessagesFromSnapshot","messagesSnapshot","doc","updateMessages","Header","Layout","confirm","Modal","AccountButton","TopRightMenu","AppHeader","profileOpen","handleProfileOpen","handleProfileClose","handleUsersFetch","handleConfirmLeave","content","tryLeaveRoom","menu","Item","background","borderBottom","padding","display","flexDirection","alignItems","justifyContent","overlay","trigger","placement","paddingTop","marginRight","types","Content","Room","isLoading","overflow","byCreatedAt","a","b","Date","createdAt","getTime","getEarliestMessageForRoomId","active","Object","values","sort","getProps","createSelector","ownProps","match","params","roomMessages","users","RoomContainer","messagesEnd","messagesContainer","scrollData","handleMessagesScroll","element","scrollHeight","scrollTop","clientHeight","scrollToBottom","scrollIntoView","behavior","handleLoadMoreVisibilityChange","isVisible","loadMoreVisible","tryFetchMoreMessages","prevProps","previousLastMessage","slice","currentLastMessage","Math","abs","scrollBottom","calculatedScrollTop","scrollTo","top","TextArea","Text","TextWrap","CreateChatDialog","roomName","description","handleChange","handleSubmit","userDisplayName","people","unread","lastRead","tryCreateRoom","rows","roomData","showCreateError","database","collection","get","snapshot","push","find","r","add","roomRef","set","Label","BrowseRoomsDialog","handleJoinRoom","canJoin","tryJoinRoom","bodyStyle","maxHeight","overflowY","dataSource","roomList","renderItem","item","Meta","avatar","avatarUrl","available","Sider","LogoWrap","Logo","img","RoomButtons","MenuButton","App","openDialog","handleCloseDialog","handleOpenDialog","dialogName","handleRoomSelect","history","initAuth","location","activeRooms","pathname","initSlacker","height","collapsedWidth","breakpoint","theme","mode","onSelect","selectedKeys","className","path","component","onAuthStateChanged","userData","email","loginSuccess","merge","updateUser","defaultState","roomReducer","action","oldState","newState","reduce","acc","usersReducer","reducers","combineReducers","roomsReducer","redirect","redirectTo","fetchMessages","fetchMoreMessages","subscribeToLastMessage","fetchMoreMessagesListener","cursor","messagePage","orderBy","limit","startAfter","call","getCollection","messageDoc","getDocument","exists","put","select","earliestMessage","keys","newestMessage","fork","syncCollection","successActionCreator","takeEvery","updateRoomPresences","fetchRoom","joinRoomListener","leaveRoomListener","updateRoomPresencesListener","userRoomsQuery","empty","userRoomIds","userRoomDoc","setDocument","roomDoc","peopleDoc","putResolve","initSlackerListner","roomsPromise","roomsQuery","generalRoom","includes","takeLatest","rootSaga","all","initSaga","roomSagas","messageSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","configureStore","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2974fb22.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react'\nimport { Avatar } from 'antd'\nimport styled from 'styled-components'\n\nconst MessageLayout = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 2px;\n`\n\nconst LeftPanel = styled.div`\n\twidth: 46px;\n\tpadding: 5px;\n`\n\n// const Avatar = styled.div`\n// \t/* width: 35px;\n// \theight: 35px;\n// \tmargin: 5px;\n// \tborder-radius: 2px;\n// \tbackground-color: #cecece;\n// ` */\n\nconst RightPanel = styled.div`\n\tcolor: black;\n`\n\nconst MessageHeader = styled.div`\n\tcolor: black;\n\tfont-weight: bold;\n\tmargin-top: 2px;\n`\n\ninterface Props {\n\tname: string\n\tphotoURL?: string\n\tisConsecutive?: boolean\n}\n\nconst Message: FunctionComponent<Props> = ({\n\tchildren,\n\tname,\n\tphotoURL,\n\tisConsecutive,\n}) => {\n\tif (isConsecutive) {\n\t\treturn (\n\t\t\t<MessageLayout>\n\t\t\t\t<LeftPanel />\n\t\t\t\t<RightPanel>{children}</RightPanel>\n\t\t\t</MessageLayout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<MessageLayout>\n\t\t\t<LeftPanel>\n\t\t\t\t<Avatar src={photoURL} size={35} shape=\"square\" icon=\"user\" />\n\t\t\t</LeftPanel>\n\t\t\t<RightPanel>\n\t\t\t\t<MessageHeader>{name}</MessageHeader>\n\t\t\t\t{children}\n\t\t\t</RightPanel>\n\t\t</MessageLayout>\n\t)\n}\n\nexport default Message\n","import firebase from 'firebase'\nimport '@firebase/firestore' // 👈 Don't forget this!\nimport ReduxSagaFirebase from 'redux-saga-firebase'\nconst config = {\n\tapiKey: 'AIzaSyB2tCxT6yP0CWtCbD9JDj3ZKaxxW8T25PI',\n\tauthDomain: 'slacker-c3b01.firebaseapp.com',\n\tdatabaseURL: 'https://slacker-c3b01.firebaseio.com',\n\tprojectId: 'slacker-c3b01',\n\tstorageBucket: 'slacker-c3b01.appspot.com',\n\tmessagingSenderId: '286218247810',\n}\nconst firebaseApp = firebase.initializeApp(config)\nconst rsf = new ReduxSagaFirebase(firebaseApp)\nconst firestore = firebase.firestore()\nconst functionsInstance = firebaseApp.functions('europe-west1')\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nconst auth = firebase.auth()\n\n// functions\nconst functions = {\n\tsendMessage: functionsInstance.httpsCallable('sendMessage'),\n\tjoinRoom: functionsInstance.httpsCallable('joinRoom'),\n\tleaveRoom: functionsInstance.httpsCallable('leaveRoom'),\n\tgetRoomUsers: functionsInstance.httpsCallable('getRoomUsers')\n}\n\nexport {\n\tfirebase,\n\tfunctions,\n\tfirestore,\n\trsf,\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n\tfirestore as default,\n}\n","import { functions } from '../firebase/firebase'\n\n// get function handler\nexport const trySendMessage = (\n\ttext: string,\n\troomId: string,\n\tstatus: boolean = false,\n) => {\n\treturn (_: any, getState: any) => {\n\t\tconst user = getState().auth\n\t\tif (user) {\n\t\t\tconst message = {\n\t\t\t\ttext,\n\t\t\t\troomId,\n\t\t\t}\n\t\t\treturn functions.sendMessage(message)\n\t\t\t// TODO add optimistic ui here\n\t\t}\n\t}\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { trySendMessage } from '../actions/messages'\n\nconst InputForm = styled.form`\n\theight: 44px;\n\tbackground-color: #fff;\n\tborder-radius: 4px;\n\tborder: 1px solid #acacac;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-shrink: 0;\n`\n\nconst Input = styled.input`\n\tpadding-left: 14px;\n\tborder: none;\n\tborder-radius: 4px;\n\tflex-grow: 1;\n\toutline: none;\n`\n\nconst SendButton = styled.button`\n\tflex-shrink: 0;\n\tpadding: 0px 15px;\n\tbackground: none;\n\tborder: none;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\ttrySendMessage: (text: string, roomId: string) => void\n}\n\ninterface State {\n\tvalue: string\n}\n\nclass ChatInput extends Component<Props, State> {\n\tstate = {\n\t\tvalue: '',\n\t}\n\n\thandleTyping = (e: any) => {\n\t\tthis.setState({ value: e.target.value })\n\t}\n\n\thandleSend = (e: any) => {\n\t\te.preventDefault()\n\t\tconst { room } = this.props\n\t\tconst text = this.state.value\n\t\tif (!!room && !!room.id && text.length > 0) {\n\t\t\tthis.props.trySendMessage(text, room.id)\n\t\t\tthis.setState({\n\t\t\t\tvalue: '',\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<InputForm onSubmit={this.handleSend}>\n\t\t\t\t<Input value={this.state.value} onChange={this.handleTyping} />\n\t\t\t\t<SendButton type={'submit'}>Send</SendButton>\n\t\t\t</InputForm>\n\t\t)\n\t}\n}\n\nexport default connect(\n\tnull,\n\t{ trySendMessage },\n)(ChatInput)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spin } from 'antd'\n\nconst LoadingWrapper = styled.div`\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst LoadingSpinner = () => (\n\t<LoadingWrapper>\n\t\t<Spin size=\"large\" />\n\t</LoadingWrapper>\n)\n\nexport default LoadingSpinner\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'antd'\nimport VisibilitySensor from 'react-visibility-sensor'\n\nimport Message from './Message'\nimport ChatInput from './ChatInput'\nimport LoadingSpinner from './LoadingSpinner'\n\nconst ChatWrapper = styled.div`\n\t/* height: 100%; */\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n`\n\nconst Messages = styled.div`\n\tpadding-top: 8px;\n\tpadding-bottom: 8px;\n\tflex-grow: 1;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n`\n\nconst TopAnchor = styled.div`\n\twidth: 100%;\n\theight: 60px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst BottomAnchor = styled.div`\n\tfloat: left;\n\tclear: both;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\tmessages: Message[]\n\tonLoadMoreVisibilityChange: (isVisible: boolean) => void\n\tonMessagesScroll: (arg: any) => void\n\tgetMessagesRef: (ref: any) => void\n\tgetBottomAnchorRef: (ref: any) => void\n}\n\nconst Conversation = ({\n\troom,\n\tmessages,\n\tgetMessagesRef,\n\tgetBottomAnchorRef,\n\tonMessagesScroll,\n\tonLoadMoreVisibilityChange,\n}: Props) => (\n\t<ChatWrapper>\n\t\t<Messages onScroll={onMessagesScroll} ref={getMessagesRef}>\n\t\t\t{!!room && room.canFetchMore && !room.isFetchingMore && (\n\t\t\t\t<TopAnchor>\n\t\t\t\t\t<VisibilitySensor onChange={onLoadMoreVisibilityChange}>\n\t\t\t\t\t\t<Button>Load more</Button>\n\t\t\t\t\t</VisibilitySensor>\n\t\t\t\t</TopAnchor>\n\t\t\t)}\n\t\t\t{!!room && room.isFetchingMore && (\n\t\t\t\t<TopAnchor>\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</TopAnchor>\n\t\t\t)}\n\t\t\t{messages.map((message, idx) => (\n\t\t\t\t<Message\n\t\t\t\t\tisConsecutive={\n\t\t\t\t\t\t!!messages[idx - 1] &&\n\t\t\t\t\t\tmessages[idx - 1].sender.uid === message.sender.uid\n\t\t\t\t\t}\n\t\t\t\t\tname={message.sender.displayName || 'Ninja'}\n\t\t\t\t\tphotoURL={message.sender.photoURL || undefined}\n\t\t\t\t\tkey={message.id}\n\t\t\t\t>\n\t\t\t\t\t{message.text}\n\t\t\t\t</Message>\n\t\t\t))}\n\t\t\t<BottomAnchor ref={getBottomAnchorRef} />\n\t\t</Messages>\n\t\t<ChatInput room={room} />\n\t</ChatWrapper>\n)\n\nexport default Conversation\n","// auth\nexport const LOGIN_SUCCESS = 'LOGIN'\nexport const LOGOUT_SUCCESS = 'LOGOUT'\n\n// update state actions\nexport const UPDATE_USER_ROOM_PRESENCE = 'UPDATE_USER_ROOM_PRESENCE'\nexport const UPDATE_ROOM_PRESENCES = 'UPDATE_ROOM_PRESENCES'\nexport const UPDATE_MESSAGES = 'UPDATE_MESSAGES'\nexport const UPDATE_ROOM = 'UPDATE_ROOM'\nexport const UPDATE_AVAILABLE_ROOMS = 'UPDATE_AVAILABLE_ROOMS'\n\n// room related events\nexport const ACTIVE_ROOM = 'ACTIVE_ROOM'\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\n\n\nexport const FETCH_MESSAGES_REQUEST = 'FETCH_MESSAGES_REQUEST'\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS'\nexport const FETCH_MESSAGES_ERROR = 'FETCH_MESSAGES_ERROR'\n\nexport const FETCH_ROOM_USERS_REQUEST = 'FETCH_ROOM_USERS_REQUEST'\nexport const FETCH_ROOM_USERS_SUCCESS = 'FETCH_ROOM_USERS_SUCCESS'\nexport const FETCH_ROOM_USERS_FAILURE = 'FETCH_ROOM_USERS_FAILURE'\n\n// saga triggers\nexport const FETCH_MORE_MESSAGES_SAGA = 'FETCH_MORE_MESSAGES_SAGA'\nexport const JOIN_ROOM_SAGA = 'JOIN_ROOM_SAGA'\nexport const LEAVE_ROOM_SAGA = 'LEAVE_ROOM_SAGA'\nexport const INIT_SLACKER_SAGA = 'INIT_SLACKER_SAGA'\n","import { functions, firestore } from '../firebase/firebase'\n\nimport * as types from '../constants/ActionTypes'\n\n// TODO type dispatch\n\nexport const getRoomUsers = (roomId: string) => {\n\treturn (dispatch: any) => {\n\t\tdispatch({\n\t\t\ttype: types.FETCH_ROOM_USERS_REQUEST,\n\t\t})\n\t\treturn functions\n\t\t\t.getRoomUsers({ roomId })\n\t\t\t.then(response => {\n\t\t\t\t// TODO fix typing here\n\t\t\t\tconst usersObject: Users = {}\n\t\t\t\tresponse.data.forEach((record: any) => {\n\t\t\t\t\tusersObject[record.id] = record\n\t\t\t\t})\n\t\t\t\tconsole.log(usersObject)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: types.FETCH_ROOM_USERS_SUCCESS,\n\t\t\t\t\tpayload: usersObject,\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: types.FETCH_ROOM_USERS_FAILURE,\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n\nexport const updateUser = (user: User) => {\n\treturn (dispatch: any) => {\n\t\tfirestore\n\t\t\t.doc(`users/${user.id}`)\n\t\t\t.set(user, { merge: true })\n\t\t\t.then(() => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'USER_UPDATE_SUCCESS',\n\t\t\t\t\tpayload: user,\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","import {\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n} from '../firebase/firebase'\n\nimport * as types from '../constants/ActionTypes'\nimport { updateUser } from './users'\n\nexport const loginSuccess = (uid: string, userData: any) => ({\n\ttype: types.LOGIN_SUCCESS,\n\tuid,\n\tuserData,\n})\n\nexport const loginError = (error: any) => ({\n\ttype: types.LOGIN_SUCCESS,\n\terror\n})\n\nexport const initAuth = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth.onAuthStateChanged(user => {\n\t\t\tif (user) {\n\t\t\t\t// user authenticated, update redux\n\t\t\t\tif (user) {\n\t\t\t\t\tconst userData = {\n\t\t\t\t\t\tid: user.uid,\n\t\t\t\t\t\tname: user.displayName || 'Ninja',\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\tphotoURL: user.photoURL,\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log({ userData, user })\n\t\t\t\t\tdispatch(loginSuccess(user.uid, userData))\n\t\t\t\t\t// TODO make this conditional\n\t\t\t\t\treturn dispatch(updateUser(userData))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// no saved user, create shadow\n\t\t\t\ttryLoginAnonymously()(dispatch)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const tryLoginAnonymously = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth\n\t\t\t.signInAnonymously()\n\t\t\t.then(() => {\n\t\t\t\t// console.log(response);\n\t\t\t\t// const { user } = response\n\n\t\t\t\t// if (user) {\n\t\t\t\t// \tconst displayName = user.displayName || 'Ninja'\n\t\t\t\t// \treturn dispatch(loginSuccess(user.uid, displayName))\n\t\t\t\t// }\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\n\t\t\t\treturn dispatch(loginError({ error }))\n\t\t\t})\n\t}\n}\n\nexport const tryLoginProvider = (providerName: string) => {\n\treturn (dispatch: any) => {\n\t\t// pick login provider\n\t\tlet provider = null\n\t\tif (providerName === 'github') {\n\t\t\tprovider = githubAuthProvider\n\t\t} else if (providerName === 'google') {\n\t\t\tprovider = googleAuthProvider\n\t\t} else {\n\t\t\treturn Promise.reject('Invalid auth provider')\n\t\t}\n\n\t\t// TODO check if user exits maybe?\n\n\t\treturn auth\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then(response => {\n\t\t\t\tconst { user } = response\n\n\t\t\t\tconsole.log({ user })\n\n\t\t\t\t// go through user rooms and update people collection with name and picture?\n\n\t\t\t\tif (user) {\n\t\t\t\t\treturn dispatch({\n\t\t\t\t\t\ttype: types.UPDATE_USER_ROOM_PRESENCE,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\t\t\t\t\n\t\t\t\treturn dispatch(loginError({ error }))\n\t\t\t})\n\t}\n}\n\nexport const logout = () => ({\n\ttype: types.LOGOUT_SUCCESS,\n})\n\nexport const tryLogout = () => {\n\treturn () => {\n\t\treturn auth.signOut().then(() => {\n\t\t\tconsole.log('log out!!!')\n\t\t})\n\t}\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Typography, Row, Col, Icon, Button } from 'antd'\nimport { tryLoginProvider } from '../actions/auth'\nconst { Title } = Typography\n\nconst LoginProviders = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryLoginProvider: (providerName: string) => Promise<any>\n\tauth: Auth\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass ProfileDialog extends Component<Props, State> {\n\thandleTryLogin = (providerName: string) => {\n\t\tthis.props.tryLoginProvider(providerName).then(() => {\n\t\t\tthis.props.handleClose()\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Profile\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<Title level={4}>Login with</Title>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<LoginProviders>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => this.handleTryLogin('github')}\n\t\t\t\t\t\t\t\t\tstyle={{ margin: 5 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"github\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={() => this.handleTryLogin('google')}>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"google\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</LoginProviders>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryLoginProvider },\n)(ProfileDialog)\n","import database from '../firebase/firebase'\n// import { ipcRenderer } from 'electron';\n\nimport { trySendMessage } from './messages'\n\nimport * as types from '../constants/ActionTypes'\n\n// const byCreatedAt = function(a: any, b: any) {\n// \treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n// }\n\nexport interface RoomData {\n\tid?: string\n\tname?: string\n\tpeople?: any\n\tmessages?: any\n\tmessageCount?: number\n\tcanFetchMore?: boolean\n\tisFetchingMore?: boolean\n}\n\nexport const updateRoom = (room: RoomData) => ({\n\ttype: types.UPDATE_ROOM,\n\troom,\n})\n\nexport const activeRoom = (activeRoom: RoomItem) => ({\n\ttype: types.ACTIVE_ROOM,\n\tactiveRoom,\n})\n\nexport const tryJoinRoom = (roomId: string) => ({\n\ttype: types.JOIN_ROOM_SAGA,\n\troomId,\n})\n\nexport const tryLeaveRoom = (roomId: string) => ({\n\ttype: types.LEAVE_ROOM_SAGA,\n\troomId,\n})\n\nexport const tryCreateRoom = (roomData: RoomData, showCreateError: any) => {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\tconst room = {\n\t\t\tname: roomData.name,\n\t\t}\n\t\t// get all rooms\n\t\treturn database\n\t\t\t.collection('rooms')\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst rooms: Room[] = []\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\tconsole.log(doc)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst room: Room = doc.data()\n\t\t\t\t\trooms.push({\n\t\t\t\t\t\t...room,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// if no room with this name\n\t\t\t\tif (!rooms.find(r => r.name === room.name)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t.collection('rooms')\n\t\t\t\t\t\t\t.add(room)\n\t\t\t\t\t\t\t// create this room and\n\t\t\t\t\t\t\t.then(roomRef => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t.collection(`rooms/${roomRef.id}/people`)\n\t\t\t\t\t\t\t\t\t\t.doc(roomData.people.id)\n\t\t\t\t\t\t\t\t\t\t// assign people to it?\n\t\t\t\t\t\t\t\t\t\t.set(roomData.people)\n\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t\t\t.collection(`users/${roomData.people.id}/rooms`)\n\t\t\t\t\t\t\t\t\t\t\t\t.doc(roomRef.id)\n\t\t\t\t\t\t\t\t\t\t\t\t.set({ roomName: room.name })\n\n\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\tupdateRoom({\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: roomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t...roomData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpeople: [roomData.people],\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t\t\t\tconst user = getState().auth\n\t\t\t\t\t\t\t\t\t\t\tif (user) {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrySendMessage(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${user.displayName} created this room`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\troomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn showCreateError('Room name not available!')\n\t\t\t\t}\n\t\t\t})\n\t}\n}\n\n// saga\nexport const tryFetchMoreMessages = (roomId: string) => ({\n\ttype: types.FETCH_MORE_MESSAGES_SAGA,\n\troomId,\n})\n\nexport const availableRooms = (rooms: RoomItem[]) => ({\n\ttype: types.UPDATE_AVAILABLE_ROOMS,\n\trooms,\n})\n\nexport const initSlacker = () => ({\n\ttype: types.INIT_SLACKER_SAGA,\n})\n\nexport const showError = (message: string) => ({\n\ttype: 'ERROR_MESSAGE',\n\tmessage,\n})\n\nexport const clearState = {\n\ttype: 'CLEAR_STATE',\n}\n\nexport const leaveRoom = (roomName: string, userId: string) => ({\n\ttype: 'LEAVE_ROOM',\n\troomName,\n\tuserId,\n})\n\n// need this for listener saga\nexport const updateMessagesFromSnapshot = (messagesSnapshot: any, roomId: string) => {\n\tconst messages: Messages = {}\n\tmessagesSnapshot.forEach((doc: any) => {\n\t\tmessages[doc.id] = { id: doc.id, ...doc.data() }\n\t})\n\n\treturn updateMessages(messages, roomId)\n}\n\nexport const updateMessages = (\n\tmessages: any,\n\troomId: string,\n\tcanFetchMore: boolean = true,\n) => ({\n\ttype: types.UPDATE_MESSAGES,\n\tmessages,\n\tcanFetchMore,\n\troomId,\n})\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Layout, Typography, Avatar, Button, Menu, Dropdown, Modal } from 'antd'\n\nimport ProfileDialog from '../components/ProfileDialog'\nimport { tryLeaveRoom } from '../actions/rooms'\nimport { getRoomUsers } from '../actions/users'\n\nconst { Header } = Layout\nconst { Title } = Typography\n\nconst { confirm } = Modal\n\nconst AccountButton = styled.button`\n\tbackground: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 4px;\n\ttransition: border 0.5s;\n\toutline: none;\n\tpadding: 0px;\n\tline-height: normal;\n\tcursor: pointer;\n`\n\nconst TopRightMenu = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n`\n\ninterface Props {\n\troom?: RoomItem\n\tuid?: string\n\tphotoURL?: string\n\ttryLeaveRoom: (roomId: string) => void\n\tgetRoomUsers: (roomId: string) => void\n}\n\ninterface State {\n\tprofileOpen: boolean\n}\n\nclass AppHeader extends Component<Props, State> {\n\tstate = {\n\t\tprofileOpen: false,\n\t}\n\n\thandleProfileOpen = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: true,\n\t\t})\n\t}\n\n\thandleProfileClose = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: false,\n\t\t})\n\t}\n\n\thandleUsersFetch = () => {\n\t\tconst { room } = this.props\n\t\tif (room) {\n\t\t\tthis.props.getRoomUsers(room.id)\n\t\t}\n\t}\n\n\thandleConfirmLeave = () => {\n\t\tconst { room } = this.props\n\t\tif (room) {\n\t\t\tconst leaveHandler = () => this.props.tryLeaveRoom(room.id)\n\t\t\tconfirm({\n\t\t\t\ttitle: 'Do you want to leave this room?',\n\t\t\t\tcontent: this.props.room ? this.props.room.name : '-',\n\t\t\t\tonOk() {\n\t\t\t\t\tleaveHandler()\n\t\t\t\t},\n\t\t\t\tonCancel() {},\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { room, uid, photoURL } = this.props\n\t\t// TODO plan what is in here\n\t\t// TODO 2 -> style a tags with buttons instead\n\t\tconst menu = (\n\t\t\t<Menu>\n\t\t\t\t<Menu.Item onClick={this.handleConfirmLeave}>\n\t\t\t\t\t<a>Leave chat</a>\n\t\t\t\t</Menu.Item>\n\t\t\t\t{/* {/* <Menu.Item>\n\t\t\t\t\t<a>2nd menu item</a>\n\t\t\t\t</Menu.Item> */}\n\t\t\t\t<Menu.Item onClick={this.handleUsersFetch}>\n\t\t\t\t\t<a>Fetch room users</a>\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t)\n\t\treturn (\n\t\t\t<Header\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\tborderBottom: '1px solid #acacac',\n\t\t\t\t\tpadding: 16,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Title style={{ margin: 0 }} level={3}>\n\t\t\t\t\t# {room ? room.name : ''}\n\t\t\t\t</Title>\n\t\t\t\t{!!uid && (\n\t\t\t\t\t<TopRightMenu>\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\toverlay={menu}\n\t\t\t\t\t\t\ttrigger={['click']}\n\t\t\t\t\t\t\tplacement=\"bottomRight\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon=\"setting\"\n\t\t\t\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\t\t\t\tstyle={{ paddingTop: 1, marginRight: 10 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Dropdown>\n\n\t\t\t\t\t\t<AccountButton onClick={this.handleProfileOpen}>\n\t\t\t\t\t\t\t<Avatar src={photoURL} size={35} shape=\"square\" />\n\t\t\t\t\t\t</AccountButton>\n\t\t\t\t\t\t<ProfileDialog\n\t\t\t\t\t\t\tisOpen={this.state.profileOpen}\n\t\t\t\t\t\t\thandleClose={this.handleProfileClose}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TopRightMenu>\n\t\t\t\t)}\n\t\t\t</Header>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { auth } = state\n\treturn {\n\t\tuid: auth.uid,\n\t\tphotoURL: auth.photoURL || undefined,\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryLeaveRoom, getRoomUsers },\n)(AppHeader)\n","import React, { Fragment, FunctionComponent } from 'react'\nimport AppHeader from '../containers/AppHeader'\nimport { Layout } from 'antd'\nimport LoadingSpinner from './LoadingSpinner'\n\nconst { Content } = Layout\n\ninterface Props {\n\troom: RoomItem | undefined\n\tisLoading?: boolean\n}\n\nconst Room: FunctionComponent<Props> = ({ room, children, isLoading }) => (\n\t<Fragment>\n\t\t<AppHeader room={room} />\n\t\t<Content\n\t\t\tstyle={{\n\t\t\t\tmargin: '0px 16px 24px 16px',\n\t\t\t\toverflow: 'initial',\n\t\t\t\tdisplay: 'flex',\n\t\t\t}}\n\t\t>\n\t\t\t{isLoading ? <LoadingSpinner /> : children}\n\t\t</Content>\n\t</Fragment>\n)\n\nexport default Room\n","export const byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}","import { createSelector } from 'reselect'\nimport { byCreatedAt } from '../utils/misc'\n\nimport { SelectorProps } from '../containers/Room'\n\nconst getAuth = (state: StoreState) => state.auth\n\nconst getRoom = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\treturn state.rooms.active[roomId]\n}\n\nconst getRoomMessages = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\tconst room = state.rooms.active[roomId]\n\tconst messages = room ? Object.values(room.messages).sort(byCreatedAt) : []\n\n\t// TODO figure out memoization function\n\n\t// inject fresh user info to each message\n\tconst roomMessages = messages.map(message => {\n\t\tif (message.sender.uid) {\n\t\t\tconst user = state.users[message.sender.uid]\n\t\t\t// console.log({ message, user })\n\t\t\treturn {\n\t\t\t\t...message,\n\t\t\t\tsender: {\n\t\t\t\t\t...message.sender,\n\t\t\t\t\tphotoURL: user.photoURL || undefined,\n\t\t\t\t\tdisplayName: user.name || message.sender.displayName,\n\t\t\t\t},\n\t\t\t}\n\t\t} else {\n\t\t\treturn message\n\t\t}\n\t})\n\n\tconsole.log({ roomMessages })\n\treturn roomMessages\n}\n\nexport const getEarliestMessageForRoomId = (roomId: string) => (\n\tstate: StoreState,\n) => {\n\tconst room = state.rooms.active[roomId]\n\tconst messages = Object.values(room.messages).sort(byCreatedAt)\n\treturn messages[0] || null\n}\n\nconst getProps = createSelector(\n\tgetRoom,\n\tgetRoomMessages,\n\tgetAuth,\n\t(room, messages, auth): SelectorProps => {\n\t\treturn {\n\t\t\tauth,\n\t\t\troom,\n\t\t\tmessages,\n\t\t\tisLoading: !room,\n\t\t}\n\t},\n)\n\nexport default getProps\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Conversation from '../components/Conversation'\nimport Room from '../components/Room'\n\nimport { tryFetchMoreMessages } from '../actions/rooms'\nimport { trySendMessage } from '../actions/messages'\nimport getProps from '../selectors/room'\n\ninterface State {\n\tloadMoreVisible: boolean | null\n}\n\nexport interface SelectorProps {\n\tauth: Auth\n\troom: RoomItem | undefined\n\tmessages: Message[]\n\tisLoading: boolean\n}\n\ninterface DispatchProps {\n\ttrySendMessage: (text: string, roomId: string, status?: boolean) => void\n\ttryFetchMoreMessages: (roomId: string) => void\n}\n\ninterface OwnProps {\n\tmatch: any\n}\n\ntype Props = SelectorProps & DispatchProps & OwnProps\n\nclass RoomContainer extends Component<Props, State> {\n\tmessagesEnd: any = null\n\tmessagesContainer: HTMLElement | null = null\n\tscrollData: any = null\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tloadMoreVisible: null,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.scrollToBottom()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\t// scroll management\n\t\tif (prevProps.messages.length === 0 && this.props.messages.length > 0) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.room &&\n\t\t\tthis.props.room &&\n\t\t\tprevProps.room.id !== this.props.room.id\n\t\t) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.messages.length !== this.props.messages.length &&\n\t\t\tprevProps.messages.length > 0 &&\n\t\t\tthis.props.messages.length > 0\n\t\t) {\n\t\t\tconst previousLastMessage = prevProps.messages.slice(-1)[0]\n\t\t\tconst currentLastMessage = this.props.messages.slice(-1)[0]\n\t\t\t// if last message is different\n\t\t\tif (previousLastMessage.id !== currentLastMessage.id) {\n\t\t\t\tif (\n\t\t\t\t\t!!currentLastMessage &&\n\t\t\t\t\tcurrentLastMessage.sender.uid === this.props.auth.uid\n\t\t\t\t) {\n\t\t\t\t\t// last message was ours, scroll to the bottom\n\t\t\t\t\tthis.scrollToBottom()\n\t\t\t\t} else if (this.messagesContainer) {\n\t\t\t\t\t// last message is not ours, lets check scroll\n\t\t\t\t\tconst {\n\t\t\t\t\t\tscrollHeight,\n\t\t\t\t\t\tscrollTop,\n\t\t\t\t\t\tclientHeight,\n\t\t\t\t\t} = this.messagesContainer\n\n\t\t\t\t\t// if our scroll is around bottom 2 messages, scroll to bottom pls\n\t\t\t\t\tif (Math.abs(clientHeight - (scrollHeight - scrollTop - 45)) < 45) {\n\t\t\t\t\t\tthis.scrollToBottom()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if we loaded earlier messages we need to restore scroll position\n\t\t\t\tif (this.scrollData && this.messagesContainer) {\n\t\t\t\t\tconst { scrollHeight, scrollTop, clientHeight } = this.scrollData\n\t\t\t\t\tconst scrollBottom = scrollHeight - clientHeight - scrollTop\n\t\t\t\t\tif (scrollBottom > 0) {\n\t\t\t\t\t\tconst updatedScrollHeight = this.messagesContainer.scrollHeight\n\t\t\t\t\t\tconst updatedClientHeight = this.messagesContainer.clientHeight\n\t\t\t\t\t\tconst calculatedScrollTop =\n\t\t\t\t\t\t\tupdatedScrollHeight - updatedClientHeight - scrollBottom\n\n\t\t\t\t\t\tthis.messagesContainer.scrollTo({ top: calculatedScrollTop })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetMessagesRef = (ref: any) => {\n\t\tthis.messagesContainer = ref\n\t}\n\n\t// TODO improve typings\n\thandleMessagesScroll = (e: any) => {\n\t\tif (e && e.target) {\n\t\t\tlet element = e.target\n\t\t\tthis.scrollData = {\n\t\t\t\tscrollHeight: element.scrollHeight,\n\t\t\t\tscrollTop: element.scrollTop,\n\t\t\t\tclientHeight: element.clientHeight,\n\t\t\t}\n\t\t}\n\t}\n\n\tscrollToBottom = () => {\n\t\tif (this.messagesEnd) {\n\t\t\tthis.messagesEnd.scrollIntoView({ behavior: 'auto' })\n\t\t}\n\t}\n\n\thandleLoadMoreVisibilityChange = (isVisible: any) => {\n\t\tconst { room } = this.props\n\t\tif (isVisible && this.state.loadMoreVisible === false && room) {\n\t\t\tthis.props.tryFetchMoreMessages(room.id)\n\t\t}\n\n\t\tthis.setState({\n\t\t\tloadMoreVisible: isVisible,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { room, messages, isLoading } = this.props\n\n\t\treturn (\n\t\t\t<Room room={room} isLoading={isLoading}>\n\t\t\t\t<Conversation\n\t\t\t\t\troom={room}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tonLoadMoreVisibilityChange={this.handleLoadMoreVisibilityChange}\n\t\t\t\t\tonMessagesScroll={this.handleMessagesScroll}\n\t\t\t\t\tgetMessagesRef={this.getMessagesRef}\n\t\t\t\t\tgetBottomAnchorRef={ref => (this.messagesEnd = ref)}\n\t\t\t\t/>\n\t\t\t</Room>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: any): SelectorProps =>\n\tgetProps(state, ownProps)\n\nexport default connect(\n\tmapStateToProps,\n\t{ trySendMessage, tryFetchMoreMessages },\n)(RoomContainer)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Input, Typography } from 'antd'\nimport { tryCreateRoom, RoomData } from '../actions/rooms'\n\nconst { TextArea } = Input\nconst { Text } = Typography\n\nconst TextWrap = styled.div`\n\tmargin-top: 5px;\n\tmargin-bottom: 5px;\n`\n\ninterface Props {\n\tisOpen: boolean;\n\thandleClose: () => void;\n\ttryCreateRoom: (roomData: RoomData, showCreateError?: any) => Promise<any>;\n\tauth: Auth;\n}\n\ninterface State {\n\troomName: string;\n\tdescription: string;\n}\n\nclass CreateChatDialog extends Component<Props, State> {\n\tstate = {\n\t\troomName: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = (e: any) => {\n\t\tconsole.log(e.target.name)\n\t\t// @ts-ignore\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\thandleSubmit = () => {\n\t\tconst { uid, displayName: userDisplayName } = this.props.auth\n\t\tif (uid) {\n\t\t\tconsole.log('Create this room pls')\n\t\t\tconst roomName = this.state.roomName\n\t\t\tif (roomName && roomName.length > 0) {\n\t\t\t\t// this.setState({ error: '' })\n\t\t\t\tconst room = {\n\t\t\t\t\tname: roomName,\n\t\t\t\t\tpeople: {\n\t\t\t\t\t\tid: uid,\n\t\t\t\t\t\tname: userDisplayName,\n\t\t\t\t\t\tunread: 0,\n\t\t\t\t\t\tlastRead: 0,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tthis.props.tryCreateRoom(room)\n\t\t\t\tthis.props.handleClose()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Create Room\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.handleSubmit}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Name:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"roomName\"\n\t\t\t\t\tvalue={this.state.roomName}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Description:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<TextArea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trows={4}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryCreateRoom },\n)(CreateChatDialog)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, List, Avatar, Button } from 'antd'\n\nimport { tryJoinRoom } from '../actions/rooms'\n\nconst Label = styled.div`\n\tpadding: 10px;\n`\n\ninterface RoomWithAvailability extends RoomItem {\n\tcanJoin: boolean\n}\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryJoinRoom: (roomId: string) => void\n\tauth: Auth\n\troomList: Array<RoomWithAvailability>\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass BrowseRoomsDialog extends Component<Props, State> {\n\thandleJoinRoom = (room: RoomWithAvailability) => {\n\t\tif (!room.canJoin) {\n\t\t\tconsole.log('redirect to that room')\n\t\t\tthis.props.handleClose()\n\t\t\treturn\n\t\t}\n\n\t\tthis.props.tryJoinRoom(room.id)\n\t\t// this.props.handleClose()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Browse Rooms\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tbodyStyle={{ maxHeight: 450, overflowY: 'scroll' }}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tdataSource={this.props.roomList}\n\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t<List.Item key={item.id}>\n\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\tavatar={item.avatarUrl ? <Avatar src={item.avatarUrl} /> : null}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdescription={'TODO room descriptions'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item.canJoin ? (\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Label>Active</Label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t</List>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { available, active } = state.rooms\n\tconst roomList = Object.values(available).map(room => {\n\t\tconst canJoin =\n\t\t\tObject.values(active).find(item => item.id === room.id) === undefined\n\t\treturn {\n\t\t\t...room,\n\t\t\tcanJoin,\n\t\t}\n\t})\n\treturn {\n\t\troomList,\n\t\tauth: state.auth,\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryJoinRoom },\n)(BrowseRoomsDialog)\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Icon } from 'antd'\n\nimport RoomContainer from './Room'\nimport CreateChatDialog from '../components/CreateChatDialog'\nimport BrowseRoomsDialog from '../components/BrowseRoomsDialog'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\nimport { initAuth } from '../actions/auth'\nimport { initSlacker } from '../actions/rooms'\n\nimport '../styles/index.css'\n\nconst { Sider } = Layout\n\nconst LogoWrap = styled.div`\n\ttext-align: center;\n\tpadding: 10px;\n\theight: 64px;\n\tborder-bottom: 1px solid grey;\n`\n\nconst Logo = styled.img`\n\theight: 100%;\n`\n\nconst RoomButtons = styled.div`\n\tpadding: 10px;\n\tcolor: rgba(255, 255, 255, 0.65);\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`\n\nconst MenuButton = styled.button`\n\tfont-size: 16px;\n\tbackground: none;\n\tborder: none;\n\t-webkit-transition: color 0.5s;\n\ttransition: color 0.5s;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: #fff;\n\t}\n`\n\nconst Content = styled.div`\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tinitAuth: () => void\n\tinitSlacker: () => void\n\tauth: Auth\n\tactiveRooms: RoomItem[]\n\tavailableRooms: RoomItem[]\n\thistory: any\n\tlocation: {\n\t\tpathname: any\n\t}\n}\n\ninterface State {\n\topenDialog: string | false\n}\n\nclass App extends Component<Props, State> {\n\tstate: State = {\n\t\topenDialog: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initAuth()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\tconst { location, activeRooms, history } = this.props\n\t\tif (\n\t\t\tlocation.pathname === '/' &&\n\t\t\tprevProps.activeRooms.length === 0 &&\n\t\t\tactiveRooms.length !== 0\n\t\t) {\n\t\t\thistory.push(`/r/${activeRooms[0].id}`)\n\t\t}\n\n\t\tif (!prevProps.auth.uid && this.props.auth.uid) {\n\t\t\tthis.props.initSlacker()\n\t\t}\n\t}\n\n\thandleCloseDialog = () => {\n\t\tthis.setState({\n\t\t\topenDialog: false,\n\t\t})\n\t}\n\n\thandleOpenDialog = (dialogName: string) => {\n\t\tthis.setState({\n\t\t\topenDialog: dialogName,\n\t\t})\n\t}\n\n\thandleRoomSelect = ({ key }: { key: string }) => {\n\t\tthis.props.history.push(key)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout style={{ height: '100%' }}>\n\t\t\t\t<Sider collapsedWidth={0} breakpoint=\"lg\">\n\t\t\t\t\t<LogoWrap>\n\t\t\t\t\t\t<Logo src=\"fox.png\" />\n\t\t\t\t\t</LogoWrap>\n\n\t\t\t\t\t<RoomButtons>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('browseRooms')}>\n\t\t\t\t\t\t\t<span>Rooms:</span>\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('createRoom')}>\n\t\t\t\t\t\t\t<Icon type=\"plus-circle\" />\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t</RoomButtons>\n\t\t\t\t\t<CreateChatDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'createRoom'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<BrowseRoomsDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'browseRooms'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\t\tonSelect={this.handleRoomSelect}\n\t\t\t\t\t\tselectedKeys={[this.props.location.pathname]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.activeRooms.map(room => (\n\t\t\t\t\t\t\t<Menu.Item key={`/r/${room.id}`}>\n\t\t\t\t\t\t\t\t<span className=\"nav-text\"># {room.name}</span>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout style={{ background: '#fff' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={'/r/:roomId'} component={RoomContainer} />\n\t\t\t\t\t\t<Route path={'/'}>\n\t\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t\t{this.props.activeRooms.length === 0 ? (\n\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div>No chat selected</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n\tauth: state.auth,\n\tactiveRooms: Object.values(state.rooms.active),\n\tavailableRooms: Object.values(state.rooms.available),\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ initAuth, initSlacker },\n)(App)\n","import * as types from '../constants/ActionTypes'\nimport { Reducer } from 'redux'\n\ninterface RoomsState {\n\tactive: {\n\t\t[key: string]: RoomItem\n\t}\n\tavailable: {\n\t\t[key: string]: RoomItem\n\t}\n}\n\nconst defaultState: RoomsState = {\n\tactive: {},\n\tavailable: {},\n}\n\nconst roomReducer: Reducer<RoomsState> = (\n\tstate: RoomsState = defaultState,\n\taction: any,\n): RoomsState => {\n\tswitch (action.type) {\n\t\tcase types.UPDATE_ROOM: {\n\t\t\tconsole.log({\n\t\t\t\toldState: { ...state.active[action.room.id] },\n\t\t\t\tnewState: { ...state.active[action.room.id], ...action.room },\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.room.id]: { ...state.active[action.room.id], ...action.room },\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\tcase types.ACTIVE_ROOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.room.id]: { ...state.active[action.room.id], ...action.room },\n\t\t\t\t},\n\t\t\t}\n\n\t\tcase types.UPDATE_AVAILABLE_ROOMS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tavailable: {\n\t\t\t\t\t...action.rooms.reduce(\n\t\t\t\t\t\t(acc: any, value: RoomItem) => ({\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t[value.id]: value,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t{},\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t}\n\n\t\tcase types.SEND_MESSAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...[state.active[action.roomId]],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.active[action.roomId].messages,\n\t\t\t\t\t\t\t[action.message.id]: action.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tcase types.UPDATE_MESSAGES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...state.active[action.roomId],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.active[action.roomId].messages,\n\t\t\t\t\t\t\t...action.messages,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default roomReducer\n","import * as types from '../constants/ActionTypes'\nimport { Reducer } from 'redux'\n\nconst usersReducer: Reducer<Users> = (state: Users = {}, action: any): Users => {\n\tswitch (action.type) {\n\t\tcase types.FETCH_ROOM_USERS_SUCCESS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default usersReducer\n","import authReducer from './auth'\nimport roomsReducer from './rooms'\nimport redirectReducer from './redirect'\nimport usersReducer from './users'\nimport { combineReducers } from 'redux'\n\nconst reducers = combineReducers({\n\tauth: authReducer,\n\trooms: roomsReducer,\n\tusers: usersReducer,\n\tredirect: redirectReducer,\n})\n\nexport default reducers\n","export default (state = {}, action: any) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        uid: action.uid,\n        ...action.userData,\n      };\n    case \"LOGOUT\":\n      return {};\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action: any) => {\n\tswitch (action.type) {\n\t\tcase 'REDIRECT_TO':\n\t\t\treturn {\n\t\t\t\tredirectTo: action.redirectTo,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { put, select, takeEvery, call, fork } from 'redux-saga/effects'\nimport { AnyAction } from 'redux'\nimport database, { rsf } from '../firebase/firebase'\nimport * as types from '../constants/ActionTypes'\nimport {\n\tupdateRoom,\n\tupdateMessagesFromSnapshot,\n\tupdateMessages,\n} from '../actions/rooms'\nimport { CollectionReference, QuerySnapshot } from '@firebase/firestore-types'\nimport { getEarliestMessageForRoomId } from '../selectors/room'\n\nexport function* fetchMessages(roomRef: any, cursor?: any) {\n\tconst messages: any = {}\n\n\tlet messagePage = roomRef\n\t\t.collection('messages')\n\t\t.orderBy('createdAt', 'desc')\n\t\t.limit(35) as CollectionReference\n\n\tif (cursor) {\n\t\tmessagePage = messagePage.startAfter(cursor) as CollectionReference\n\t}\n\n\tconst messagesQuery: QuerySnapshot = yield call(\n\t\trsf.firestore.getCollection,\n\t\tmessagePage,\n\t)\n\n\tmessagesQuery.forEach((messageDoc: any) => {\n\t\tmessages[messageDoc.id] = { id: messageDoc.id, ...messageDoc.data() }\n\t})\n\n\treturn messages\n}\n\nexport function* fetchMoreMessages(action: AnyAction) {\n\tconst { roomId } = action\n\tconsole.log('try fetch room ', roomId)\n\t// fetch active room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\tif (roomDoc.exists) {\n\t\tyield put(updateRoom({ id: roomId, isFetchingMore: true }))\n\t\t// find oldest message\n\t\tconst earliestMessage = yield select(getEarliestMessageForRoomId(roomId))\n\n\t\tconst messages = yield call(\n\t\t\tfetchMessages,\n\t\t\troomRef,\n\t\t\tearliestMessage.createdAt,\n\t\t)\n\n\t\tconst canFetchMore = Object.keys(messages).length === 35\n\n\t\tyield put(updateMessages(messages, roomId))\n\t\tyield put(updateRoom({ id: roomId, isFetchingMore: false, canFetchMore }))\n\t}\n}\n\nexport function* subscribeToLastMessage(\n\troomRef: firebase.firestore.DocumentReference,\n) {\n\t// subscribe to latest message\n\tconst newestMessage = roomRef\n\t\t.collection('messages')\n\t\t.orderBy('createdAt', 'desc')\n\t\t.limit(1) as CollectionReference\n\n\tyield fork(rsf.firestore.syncCollection, newestMessage, {\n\t\tsuccessActionCreator: (snapshot: any) => updateMessagesFromSnapshot(snapshot, roomRef.id),\n\t})\n}\n\nfunction* fetchMoreMessagesListener() {\n\tyield takeEvery(types.FETCH_MORE_MESSAGES_SAGA, fetchMoreMessages)\n}\n\nexport default [\n\tfetchMoreMessagesListener(),\n]\n","import { put, putResolve, select, takeEvery, call } from 'redux-saga/effects'\nimport { AnyAction } from 'redux'\nimport database, { rsf, functions } from '../firebase/firebase'\nimport * as types from '../constants/ActionTypes'\nimport { showError, updateRoom } from '../actions/rooms'\nimport { fetchMessages, subscribeToLastMessage } from './messages'\nimport { getRoomUsers } from '../actions/users'\n\nexport function* updateRoomPresences() {\n\tconst auth = yield select(state => state.auth)\n\tconst { uid, ...userData } = auth\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) => {\n\t\t\tuserRoomIds.push(userRoomDoc.id)\n\t\t})\n\n\t\tfor (var roomId in userRoomIds) {\n\t\t\tyield call(\n\t\t\t\t// @ts-ignore\n\t\t\t\trsf.firestore.setDocument,\n\t\t\t\t`rooms/${roomId}/people/${auth.uid}`,\n\t\t\t\t{\n\t\t\t\t\tid: auth.uid,\n\t\t\t\t\t...userData,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport function* joinRoom(action: AnyAction) {\n\tconst { roomId } = action\n\n\t// call function that joins room\n\tconst response = yield call(functions.joinRoom, { roomId })\n\tconsole.log({ response })\n\n\t// fetch full room and subscribe\n\tyield call(fetchRoom, roomId)\n}\n\nexport function* leaveRoom(action: AnyAction) {\n\tconst { roomId } = action\n\n\tconsole.log('calling leave function...')\n\n\t// call function that joins room\n\tconst response = yield call(functions.leaveRoom, { roomId })\n\n\tconsole.log({ response })\n\n\t// fetch full room and subscribe\n\t// yield call(fetchRoom, roomId)\n}\n\nexport function* fetchRoom(roomId: string) {\n\t// fetch active room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\t// if we have such room\n\tif (roomDoc.exists) {\n\t\tconst room = roomDoc.data()\n\t\tconst people: any[] = []\n\n\t\t// get room's people\n\t\tconst peopleQuery = yield call(\n\t\t\trsf.firestore.getCollection,\n\t\t\troomRef.collection('people'),\n\t\t)\n\t\n\t\tpeopleQuery.forEach((peopleDoc: any) => {\n\t\t\tpeople.push({ id: peopleDoc.id, ...peopleDoc.data() })\n\t\t})\n\n\t\t// get user entities\n\t\t// @ts-ignore\n\t\tyield putResolve(getRoomUsers(roomId))\n\n\t\t// get room's messages first page\n\t\tconst messages = yield call(fetchMessages, roomRef)\n\n\t\tconst canFetchMore = Object.keys(messages).length === 35\n\n\t\tyield put(\n\t\t\tupdateRoom({\n\t\t\t\tid: roomRef.id,\n\t\t\t\tname: room.name || '-',\n\t\t\t\tpeople,\n\t\t\t\tmessages,\n\t\t\t\t// messageCount: messages.length,\n\t\t\t\tcanFetchMore,\n\t\t\t}),\n\t\t)\n\n\t\tyield call(subscribeToLastMessage, roomRef)\n\t}\n}\n\nfunction* joinRoomListener() {\n\tyield takeEvery(types.JOIN_ROOM_SAGA, joinRoom)\n}\n\nfunction* leaveRoomListener() {\n\tyield takeEvery(types.LEAVE_ROOM_SAGA, leaveRoom)\n}\n\nfunction* updateRoomPresencesListener() {\n\tyield takeEvery(types.UPDATE_ROOM_PRESENCES, updateRoomPresences)\n}\n\nexport default [\n\tjoinRoomListener(),\n\tleaveRoomListener(),\n\tupdateRoomPresencesListener(),\n]\n","import { put, select, takeLatest, fork, call } from 'redux-saga/effects'\nimport database, { firebase, rsf } from '../firebase/firebase'\nimport { availableRooms } from '../actions/rooms'\nimport * as types from '../constants/ActionTypes'\nimport { fetchRoom } from './rooms'\n\n// worker Saga\nfunction* initSlacker(action: any) {\n\tconst auth = yield select(state => state.auth)\n\n\tif (!auth.uid) {\n\t\tconsole.log('no auth!')\n\t\treturn\n\t}\n\n\t// fetch all rooms\n\tconst roomsPromise = database.collection('rooms').get()\n\n\tconst roomsQuery: firebase.firestore.QuerySnapshot = yield roomsPromise\n\tconst rooms: RoomItem[] = []\n\troomsQuery.forEach(doc => {\n\t\tconst room = {\n\t\t\tid: doc.id,\n\t\t\t...doc.data(),\n\t\t}\n\t\t// @ts-ignore\n\t\trooms.push(room)\n\t})\n\n\tyield put(availableRooms(rooms))\n\tconst generalRoom = rooms.find(room => room.name === 'general')\n\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) =>\n\t\t\tuserRoomIds.push(userRoomDoc.id),\n\t\t)\n\n\t\t// fetch each active room\n\t\tfor (let roomId of userRoomIds) {\n\t\t\tyield fork(fetchRoom, roomId)\n\t\t}\n\n\t\t// if no general room, join that as well\n\t\tif (generalRoom && !userRoomIds.includes(generalRoom.id)) {\n\t\t\tyield put({\n\t\t\t\ttype: types.JOIN_ROOM_SAGA,\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t} else {\n\t\tif (generalRoom) {\n\t\t\tyield put({\n\t\t\t\ttype: types.JOIN_ROOM_SAGA,\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t}\n}\n\nfunction* initSlackerListner() {\n\tyield takeLatest(types.INIT_SLACKER_SAGA, initSlacker)\n}\n\nexport default initSlackerListner\n","import { all } from 'redux-saga/effects'\nimport initSaga from './initSaga'\nimport roomSagas from './rooms'\nimport messageSaga from './messages'\n\nexport default function* rootSaga() {\n\tyield all([initSaga(), ...roomSagas, ...messageSaga])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport reducers from '../reducers'\n\nimport rootSaga from '../sagas'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default () => {\n\tconst store = createStore(\n\t\treducers,\n\t\tcomposeEnhancers(applyMiddleware(thunk, sagaMiddleware)),\n\t)\n\n\tsagaMiddleware.run(rootSaga)\n\n\treturn store\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\n\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\nconst jsx = (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<Route path={'/'} component={App} />\n\t\t</Router>\n\t</Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('container'))\n"],"sourceRoot":""}