{"version":3,"sources":["components/Message.tsx","firebase/firebase.ts","constants/ActionTypes.ts","actions/rooms.ts","components/ChatInput.tsx","components/Conversation.tsx","actions/auth.ts","components/ProfileDialog.tsx","containers/AppHeader.tsx","components/LoadingSpinner.tsx","components/Room.tsx","utils/misc.ts","selectors/room.ts","containers/Room.tsx","components/CreateChatDialog.tsx","components/BrowseRoomsDialog.tsx","containers/App.tsx","reducers/rooms.ts","reducers/index.ts","reducers/auth.ts","reducers/redirect.ts","sagas/roomSagas.ts","sagas/initSaga.ts","sagas/rootSaga.ts","store/configureStore.ts","index.tsx"],"names":["MessageLayout","styled","div","LeftPanel","RightPanel","MessageHeader","Message","children","name","isConsecutive","size","shape","icon","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rsf","ReduxSagaFirebase","database","firestore","githubAuthProvider","auth","GithubAuthProvider","googleAuthProvider","GoogleAuthProvider","UPDATE_ROOM_PRESENCES","FETCH_MESSAGES_REQUEST","JOIN_ROOM_SAGA","INIT_SLACKER_SAGA","byCreatedAt","a","b","Date","createdAt","getTime","updateRoom","id","people","messages","type","room","canFetchMore","messageCount","trySendMessage","text","roomId","status","_","getState","user","message","sender","uid","displayName","moment","format","collection","add","availableRooms","rooms","showError","syncMessages","messagesSnapshot","forEach","doc","push","data","sort","updateMessages","InputForm","form","Input","input","SendButton","button","ChatInput","state","value","handleTyping","e","setState","target","handleSend","preventDefault","props","length","onSubmit","this","onChange","Component","connect","ChatWrapper","Messages","TopAnchor","BottomAnchor","Conversation","getMessagesRef","getBottomAnchorRef","onLoadMoreVisibilityChange","ref","map","idx","key","loginError","error","tryLoginAnonymously","dispatch","signInAnonymously","then","catch","console","log","Title","Typography","LoginProviders","ProfileDialog","handleTryLogin","providerName","tryLoginProvider","handleClose","title","visible","isOpen","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","level","span","onClick","style","margin","fontSize","provider","Promise","reject","signInWithPopup","response","Header","Layout","AccountButton","TopRightMenu","AppHeader","profileOpen","handleProfileOpen","handleProfileClose","photoURL","background","borderBottom","padding","display","flexDirection","alignItems","justifyContent","paddingTop","marginRight","src","LoadingWrapper","LoadingSpinner","Content","Room","isLoading","overflow","makeGetEarliestMessageForRoomId","active","Object","values","getProps","createSelector","ownProps","match","params","RoomContainer","messagesEnd","messagesContainer","scrollToBottom","scrollIntoView","behavior","handleLoadMoreVisibilityChange","isVisible","loadMoreVisible","tryFetchMoreMessages","prevProps","previousLastMessage","slice","currentLastMessage","scrollHeight","scrollTop","clientHeight","Math","abs","TextArea","Text","TextWrap","CreateChatDialog","roomName","description","handleChange","handleSubmit","userDisplayName","unread","lastRead","tryCreateRoom","rows","roomData","showCreateError","get","snapshot","find","r","roomRef","set","Label","BrowseRoomsDialog","handleJoinRoom","canJoin","tryJoinRoom","bodyStyle","maxHeight","overflowY","dataSource","roomList","renderItem","item","Item","Meta","avatar","avatarUrl","available","undefined","types","Sider","LogoWrap","Logo","img","RoomButtons","MenuButton","App","openDialog","handleCloseDialog","handleOpenDialog","dialogName","handleRoomSelect","history","initAuth","location","activeRooms","pathname","initSlacker","height","position","left","theme","mode","onSelect","selectedKeys","className","marginLeft","path","component","onAuthStateChanged","userData","email","loginSuccess","defaultState","reducers","combineReducers","action","reduce","acc","redirect","redirectTo","updateRoomPresences","joinRoom","fetchMessages","fetchRoom","subscribeToLastMessage","fetchMoreMessages","fetchMoreMessagesListener","joinRoomListener","updateRoomPresencesListener","select","call","getCollection","userRoomsQuery","empty","userRoomIds","userRoomDoc","setDocument","getDocument","roomDoc","exists","put","person","cursor","messagePage","orderBy","limit","startAfter","messageDoc","peopleDoc","newestMessage","fork","syncCollection","successActionCreator","getEarliestMessageInRoom","earliestMessage","takeEvery","initSlackerListner","roomsPromise","roomsQuery","generalRoom","includes","takeLatest","rootSaga","all","initSaga","roomSagas","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","mySaga","configureStore","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9acea826.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react'\nimport { Avatar } from 'antd'\nimport styled from 'styled-components'\n\nconst MessageLayout = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 2px;\n`\n\nconst LeftPanel = styled.div`\n\twidth: 46px;\n\tpadding: 5px;\n`\n\n// const Avatar = styled.div`\n// \t/* width: 35px;\n// \theight: 35px;\n// \tmargin: 5px;\n// \tborder-radius: 2px;\n// \tbackground-color: #cecece;\n// ` */\n\nconst RightPanel = styled.div`\n\tcolor: black;\n`\n\nconst MessageHeader = styled.div`\n\tcolor: black;\n\tfont-weight: bold;\n\tmargin-top: 2px;\n`\n\ninterface Props {\n\tname: string\n\tisConsecutive?: boolean\n}\n\nconst Message: FunctionComponent<Props> = ({\n\tchildren,\n\tname,\n\tisConsecutive,\n}) => {\n\tif (isConsecutive) {\n\t\treturn (\n\t\t\t<MessageLayout>\n\t\t\t\t<LeftPanel />\n\t\t\t\t<RightPanel>{children}</RightPanel>\n\t\t\t</MessageLayout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<MessageLayout>\n\t\t\t<LeftPanel>\n\t\t\t\t<Avatar size={35} shape=\"square\" icon=\"user\" />\n\t\t\t</LeftPanel>\n\t\t\t<RightPanel>\n\t\t\t\t<MessageHeader>{name}</MessageHeader>\n\t\t\t\t{children}\n\t\t\t</RightPanel>\n\t\t</MessageLayout>\n\t)\n}\n\nexport default Message\n","import firebase from 'firebase'\nimport '@firebase/firestore' // 👈 Don't forget this!\nimport ReduxSagaFirebase from 'redux-saga-firebase'\nconst config = {\n\tapiKey: 'AIzaSyB2tCxT6yP0CWtCbD9JDj3ZKaxxW8T25PI',\n\tauthDomain: 'slacker-c3b01.firebaseapp.com',\n\tdatabaseURL: 'https://slacker-c3b01.firebaseio.com',\n\tprojectId: 'slacker-c3b01',\n\tstorageBucket: 'slacker-c3b01.appspot.com',\n\tmessagingSenderId: '286218247810',\n}\nconst firebaseApp = firebase.initializeApp(config)\nconst rsf = new ReduxSagaFirebase(firebaseApp)\nconst database = firebase.firestore()\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nconst auth = firebase.auth()\n\nexport {\n\tfirebase,\n\trsf,\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n\tdatabase as default,\n}\n","// auth\nexport const LOGIN_SUCCESS = 'LOGIN'\nexport const LOGOUT_SUCCESS = 'LOGOUT'\n\n// update state actions\nexport const UPDATE_USER_ROOM_PRESENCE = 'UPDATE_USER_ROOM_PRESENCE'\nexport const UPDATE_ROOM_PRESENCES = 'UPDATE_ROOM_PRESENCES'\nexport const UPDATE_MESSAGES = 'UPDATE_MESSAGES'\nexport const UPDATE_ROOM = 'UPDATE_ROOM'\nexport const UPDATE_AVAILABLE_ROOMS = 'UPDATE_AVAILABLE_ROOMS'\n\n// room related events\nexport const ACTIVE_ROOM = 'ACTIVE_ROOM'\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\n\nexport const FETCH_MORE_MESSAGES = 'FETCH_MORE_MESSAGES'\n\nexport const FETCH_MESSAGES_REQUEST = 'FETCH_MESSAGES_REQUEST'\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS'\nexport const FETCH_MESSAGES_ERROR = 'FETCH_MESSAGES_ERROR'\n\n// saga triggers\nexport const JOIN_ROOM_SAGA = 'JOIN_ROOM_SAGA'\nexport const INIT_SLACKER_SAGA = 'INIT_SLACKER_SAGA'\n","import database from '../firebase/firebase'\nimport moment from 'moment'\n// import { ipcRenderer } from 'electron';\n\nimport * as types from '../constants/ActionTypes'\n\nconst byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}\n\nexport interface RoomData {\n\tid?: string\n\tname: string\n\tpeople: any\n\tmessages?: any\n\tmessageCount?: number\n\tcanFetchMore?: boolean\n}\n\nexport const updateRoom = ({\n\tid,\n\tname,\n\tpeople,\n\tmessages = [],\n\tcanFetchMore,\n\tmessageCount,\n}: RoomData) => ({\n\ttype: types.UPDATE_ROOM,\n\troom: {\n\t\tid,\n\t\tname,\n\t\tpeople,\n\t\tmessages,\n\t\tcanFetchMore,\n\t\tmessageCount,\n\t},\n})\n\nexport const activeRoom = (activeRoom: RoomItem) => ({\n\ttype: types.ACTIVE_ROOM,\n\tactiveRoom,\n})\n\nexport const tryJoinRoom = (roomId: string) => ({\n\ttype: types.JOIN_ROOM_SAGA,\n\troomId,\n})\n\nexport const tryCreateRoom = (roomData: RoomData, showCreateError: any) => {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\tconst room = {\n\t\t\tname: roomData.name,\n\t\t}\n\t\t// get all rooms\n\t\treturn database\n\t\t\t.collection('rooms')\n\t\t\t.get()\n\t\t\t.then(snapshot => {\n\t\t\t\tconst rooms: Room[] = []\n\t\t\t\tsnapshot.forEach(doc => {\n\t\t\t\t\tconsole.log(doc)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst room: Room = doc.data()\n\t\t\t\t\trooms.push({\n\t\t\t\t\t\t...room,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// if no room with this name\n\t\t\t\tif (!rooms.find(r => r.name === room.name)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t.collection('rooms')\n\t\t\t\t\t\t\t.add(room)\n\t\t\t\t\t\t\t// create this room and\n\t\t\t\t\t\t\t.then(roomRef => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t.collection(`rooms/${roomRef.id}/people`)\n\t\t\t\t\t\t\t\t\t\t.doc(roomData.people.id)\n\t\t\t\t\t\t\t\t\t\t// assign people to it?\n\t\t\t\t\t\t\t\t\t\t.set(roomData.people)\n\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\tdatabase\n\t\t\t\t\t\t\t\t\t\t\t\t.collection(`users/${roomData.people.id}/rooms`)\n\t\t\t\t\t\t\t\t\t\t\t\t.doc(roomRef.id)\n\t\t\t\t\t\t\t\t\t\t\t\t.set({ roomName: room.name })\n\n\t\t\t\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\t\t\t\tupdateRoom({\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: roomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t...roomData,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpeople: [roomData.people],\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t\t\t\tconst user = getState().auth\n\t\t\t\t\t\t\t\t\t\t\tif (user) {\n\t\t\t\t\t\t\t\t\t\t\t\ttrySendMessage(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${user.displayName} created this room`,\n\t\t\t\t\t\t\t\t\t\t\t\t\troomRef.id,\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn showCreateError('Room name not available!')\n\t\t\t\t}\n\t\t\t})\n\t}\n}\n\nexport const trySendMessage = (\n\ttext: string,\n\troomId: string,\n\tstatus: boolean = false,\n) => {\n\treturn (_: any, getState: any) => {\n\t\tconst user = getState().auth\n\t\tif (user) {\n\t\t\tconst uid = user.uid\n\t\t\tconst displayName = user.displayName\n\t\t\tconst message = {\n\t\t\t\tsender: { uid, displayName },\n\t\t\t\ttext,\n\t\t\t\tcreatedAt: moment().format(),\n\t\t\t\tstatus,\n\t\t\t}\n\t\t\treturn database.collection(`rooms/${roomId}/messages`).add(message)\n\t\t}\n\t}\n}\n\nexport const tryFetchMoreMessages = (roomId: string) => ({\n\ttype: types.FETCH_MORE_MESSAGES,\n\troomId\n})\n\nexport const availableRooms = (rooms: RoomItem[]) => ({\n\ttype: types.UPDATE_AVAILABLE_ROOMS,\n\trooms,\n})\n\nexport const initSlacker = () => ({\n\ttype: types.INIT_SLACKER_SAGA,\n})\n\nexport const showError = (message: string) => ({\n\ttype: 'ERROR_MESSAGE',\n\tmessage,\n})\n\nexport const clearState = {\n\ttype: 'CLEAR_STATE',\n}\n\nexport const leaveRoom = (roomName: string, userId: string) => ({\n\ttype: 'LEAVE_ROOM',\n\troomName,\n\tuserId,\n})\n\nexport const syncMessages = (messagesSnapshot: any, roomId: string) => {\n\tconst messages: any[] = []\n\tmessagesSnapshot.forEach((doc: any) => {\n\t\tmessages.push({ id: doc.id, ...doc.data() })\n\t})\n\n\tmessages.sort(byCreatedAt)\n\treturn updateMessages(messages, roomId)\n}\n\nexport const updateMessages = (messages: any, roomId: string) => ({\n\ttype: types.UPDATE_MESSAGES,\n\tmessages,\n\troomId,\n})\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { trySendMessage } from '../actions/rooms'\n\nconst InputForm = styled.form`\n\theight: 44px;\n\tbackground-color: #fff;\n\tborder-radius: 4px;\n\tborder: 1px solid #acacac;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-shrink: 0;\n`\n\nconst Input = styled.input`\n\tpadding-left: 14px;\n\tborder: none;\n\tborder-radius: 4px;\n\tflex-grow: 1;\n\toutline: none;\n`\n\nconst SendButton = styled.button`\n\tflex-shrink: 0;\n\tpadding: 0px 15px;\n\tbackground: none;\n\tborder: none;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\ttrySendMessage: (text: string, roomId: string) => void\n}\n\ninterface State {\n\tvalue: string\n}\n\nclass ChatInput extends Component<Props, State> {\n\tstate = {\n\t\tvalue: '',\n\t}\n\n\thandleTyping = (e: any) => {\n\t\tthis.setState({ value: e.target.value })\n\t}\n\n\thandleSend = (e: any) => {\n\t\te.preventDefault()\n\t\tconst { room } = this.props\n\t\tconst text = this.state.value\n\t\tif (!!room && !!room.id && text.length > 0) {\n\t\t\tthis.props.trySendMessage(text, room.id)\n\t\t\tthis.setState({\n\t\t\t\tvalue: '',\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<InputForm onSubmit={this.handleSend}>\n\t\t\t\t<Input value={this.state.value} onChange={this.handleTyping} />\n\t\t\t\t<SendButton type={'submit'}>Send</SendButton>\n\t\t\t</InputForm>\n\t\t)\n\t}\n}\n\nexport default connect(\n\tnull,\n\t{ trySendMessage },\n)(ChatInput)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'antd'\nimport VsibilitySensor from 'react-visibility-sensor'\n\nimport Message from '../components/Message'\nimport ChatInput from '../components/ChatInput'\n\nconst ChatWrapper = styled.div`\n\t/* height: 100%; */\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n`\n\nconst Messages = styled.div`\n\tpadding-top: 8px;\n\tpadding-bottom: 8px;\n\tflex-grow: 1;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n`\n\nconst TopAnchor = styled.div`\n\twidth: 100%;\n\theight: 60px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst BottomAnchor = styled.div`\n\tfloat: left;\n\tclear: both;\n`\n\ninterface Props {\n\troom: RoomItem | undefined\n\tmessages: Message[]\n\tonLoadMoreVisibilityChange: (isVisible: boolean) => void\n\tgetMessagesRef: (ref: any) => void\n\tgetBottomAnchorRef: (ref: any) => void\n}\n\nconst Conversation = ({\n\troom,\n\tmessages,\n\tgetMessagesRef,\n\tgetBottomAnchorRef,\n\tonLoadMoreVisibilityChange,\n}: Props) => (\n\t<ChatWrapper>\n\t\t<Messages ref={getMessagesRef}>\n\t\t\t<TopAnchor>\n\t\t\t\t<VsibilitySensor onChange={onLoadMoreVisibilityChange}>\n\t\t\t\t\t<Button>Load more</Button>\n\t\t\t\t</VsibilitySensor>\n\t\t\t</TopAnchor>\n\t\t\t{messages.map((message, idx) => (\n\t\t\t\t<Message\n\t\t\t\t\tisConsecutive={\n\t\t\t\t\t\t!!messages[idx - 1] &&\n\t\t\t\t\t\tmessages[idx - 1].sender.uid === message.sender.uid\n\t\t\t\t\t}\n\t\t\t\t\tname={message.sender.displayName || ''}\n\t\t\t\t\tkey={message.id}\n\t\t\t\t>\n\t\t\t\t\t{message.text}\n\t\t\t\t</Message>\n\t\t\t))}\n\t\t\t<BottomAnchor ref={getBottomAnchorRef} />\n\t\t</Messages>\n\t\t<ChatInput room={room} />\n\t</ChatWrapper>\n)\n\nexport default Conversation\n","import {\n\tauth,\n\tgithubAuthProvider,\n\tgoogleAuthProvider,\n} from '../firebase/firebase'\n\nimport * as types from '../constants/ActionTypes'\n\nexport const loginSuccess = (uid: string, userData: any) => ({\n\ttype: types.LOGIN_SUCCESS,\n\tuid,\n\tuserData,\n})\n\nexport const loginError = (error: any) => ({\n\ttype: types.LOGIN_SUCCESS,\n\terror\n})\n\nexport const initAuth = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth.onAuthStateChanged(user => {\n\t\t\tif (user) {\n\t\t\t\t// user authenticated, update redux\n\t\t\t\tif (user) {\n\t\t\t\t\tconst userData = {\n\t\t\t\t\t\tdisplayName: user.displayName || 'Ninja',\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\tphotoURL: user.photoURL,\n\t\t\t\t\t}\n\t\t\t\t\treturn dispatch(loginSuccess(user.uid, userData))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// no saved user, create shadow\n\t\t\t\ttryLoginAnonymously()(dispatch)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const tryLoginAnonymously = () => {\n\treturn (dispatch: any) => {\n\t\treturn auth\n\t\t\t.signInAnonymously()\n\t\t\t.then(() => {\n\t\t\t\t// console.log(response);\n\t\t\t\t// const { user } = response\n\n\t\t\t\t// if (user) {\n\t\t\t\t// \tconst displayName = user.displayName || 'Ninja'\n\t\t\t\t// \treturn dispatch(loginSuccess(user.uid, displayName))\n\t\t\t\t// }\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\n\t\t\t\treturn dispatch(loginError({ error }))\n\t\t\t})\n\t}\n}\n\nexport const tryLoginProvider = (providerName: string) => {\n\treturn (dispatch: any) => {\n\t\t// pick login provider\n\t\tlet provider = null\n\t\tif (providerName === 'github') {\n\t\t\tprovider = githubAuthProvider\n\t\t} else if (providerName === 'google') {\n\t\t\tprovider = googleAuthProvider\n\t\t} else {\n\t\t\treturn Promise.reject('Invalid auth provider')\n\t\t}\n\n\t\t// TODO check if user exits maybe?\n\n\t\treturn auth\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then(response => {\n\t\t\t\tconst { user } = response\n\n\t\t\t\tconsole.log({ user })\n\n\t\t\t\t// go through user rooms and update people collection with name and picture?\n\n\t\t\t\tif (user) {\n\t\t\t\t\treturn dispatch({\n\t\t\t\t\t\ttype: types.UPDATE_USER_ROOM_PRESENCE,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log({ error })\n\t\t\t\t\n\t\t\t\treturn dispatch(loginError({ error }))\n\t\t\t})\n\t}\n}\n\nexport const logout = () => ({\n\ttype: types.LOGOUT_SUCCESS,\n})\n\nexport const tryLogout = () => {\n\treturn () => {\n\t\treturn auth.signOut().then(() => {\n\t\t\tconsole.log('log out!!!')\n\t\t})\n\t}\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Typography, Row, Col, Icon, Button } from 'antd'\nimport { tryLoginProvider } from '../actions/auth'\nconst { Title } = Typography\n\nconst LoginProviders = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryLoginProvider: (providerName: string) => Promise<any>\n\tauth: Auth\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass ProfileDialog extends Component<Props, State> {\n\thandleTryLogin = (providerName: string) => {\n\t\tthis.props.tryLoginProvider(providerName).then(() => {\n\t\t\tthis.props.handleClose()\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Profile\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<Title level={4}>Login with</Title>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<LoginProviders>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => this.handleTryLogin('github')}\n\t\t\t\t\t\t\t\t\tstyle={{ margin: 5 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"github\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button onClick={() => this.handleTryLogin('google')}>\n\t\t\t\t\t\t\t\t\t<Icon style={{ fontSize: 24 }} type=\"google\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</LoginProviders>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryLoginProvider },\n)(ProfileDialog)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Layout, Typography, Avatar, Button } from 'antd'\n\nimport ProfileDialog from '../components/ProfileDialog'\n\nconst { Header } = Layout\nconst { Title } = Typography\n\nconst AccountButton = styled.button`\n\tbackground: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 4px;\n\ttransition: border 0.5s;\n\toutline: none;\n\tpadding: 0px;\n\tline-height: normal;\n\tcursor: pointer;\n`\n\nconst TopRightMenu = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n`\n\ninterface Props {\n\troom?: RoomItem\n\tuid?: string\n\tphotoURL?: string\n}\n\ninterface State {\n\tprofileOpen: boolean\n}\n\nclass AppHeader extends Component<Props, State> {\n\tstate = {\n\t\tprofileOpen: false,\n\t}\n\n\thandleProfileOpen = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: true,\n\t\t})\n\t}\n\n\thandleProfileClose = () => {\n\t\tthis.setState({\n\t\t\tprofileOpen: false,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { room, uid, photoURL } = this.props\n\t\t// TODO plan what is in here\n\t\t// const menu = (\n\t\t// \t<Menu>\n\t\t// \t\t<Menu.Item onClick={this.handleProfileOpen}>\n\t\t// \t\t\t<a>Profile</a>\n\t\t// \t\t</Menu.Item>\n\t\t// \t\t{/* <Menu.Item>\n\t\t// \t\t\t<a>2nd menu item</a>\n\t\t// \t\t</Menu.Item>\n\t\t// \t\t<Menu.Item>\n\t\t// \t\t\t<a>3rd menu item</a>\n\t\t// \t\t</Menu.Item> */}\n\t\t// \t</Menu>\n\t\t// )\n\t\treturn (\n\t\t\t<Header\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\tborderBottom: '1px solid #acacac',\n\t\t\t\t\tpadding: 16,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Title style={{ margin: 0 }} level={3}>\n\t\t\t\t\t# {room ? room.name : ''}\n\t\t\t\t</Title>\n\t\t\t\t{!!uid && (\n\t\t\t\t\t<TopRightMenu>\n\t\t\t\t\t\t<Button icon=\"setting\" shape=\"circle\" style={{ paddingTop: 1, marginRight: 10 }} />\n\n\t\t\t\t\t\t<AccountButton onClick={this.handleProfileOpen}>\n\t\t\t\t\t\t\t<Avatar src={photoURL} size={35} shape=\"square\" />\n\t\t\t\t\t\t</AccountButton>\n\t\t\t\t\t\t<ProfileDialog\n\t\t\t\t\t\t\tisOpen={this.state.profileOpen}\n\t\t\t\t\t\t\thandleClose={this.handleProfileClose}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TopRightMenu>\n\t\t\t\t)}\n\t\t\t</Header>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { auth } = state\n\treturn {\n\t\tuid: auth.uid,\n\t\tphotoURL: auth.photoURL,\n\t}\n}\n\nexport default connect(mapStateToProps)(AppHeader)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spin } from 'antd'\n\nconst LoadingWrapper = styled.div`\n\twidth: 100%;\n\tpadding: 24;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: '#fff';\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst LoadingSpinner = () => (\n\t<LoadingWrapper>\n\t\t<Spin size=\"large\" />\n\t</LoadingWrapper>\n)\n\nexport default LoadingSpinner\n","import React, { Fragment, FunctionComponent } from 'react'\nimport AppHeader from '../containers/AppHeader'\nimport { Layout } from 'antd'\nimport LoadingSpinner from './LoadingSpinner'\n\nconst { Content } = Layout\n\ninterface Props {\n\troom: RoomItem | undefined\n\tisLoading?: boolean\n}\n\nconst Room: FunctionComponent<Props> = ({ room, children, isLoading }) => (\n\t<Fragment>\n\t\t<AppHeader room={room} />\n\t\t<Content\n\t\t\tstyle={{\n\t\t\t\tmargin: '0px 16px 24px 16px',\n\t\t\t\toverflow: 'initial',\n\t\t\t\tdisplay: 'flex',\n\t\t\t}}\n\t\t>\n\t\t\t{isLoading ? <LoadingSpinner /> : children}\n\t\t</Content>\n\t</Fragment>\n)\n\nexport default Room\n","export const byCreatedAt = function(a: any, b: any) {\n\treturn new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n}","import { createSelector } from 'reselect'\nimport { byCreatedAt } from '../utils/misc'\n\nconst getAuth = (state: StoreState) => state.auth\n\nconst getRoom = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\treturn state.rooms.active[roomId]\n}\n\nconst getRoomMessages = (state: StoreState, ownProps: any) => {\n\tconst { roomId } = ownProps.match.params\n\tconst room = state.rooms.active[roomId]\n\treturn room ? Object.values(room.messages).sort(byCreatedAt) : []\n}\n\nexport const makeGetEarliestMessageForRoomId = (roomId: string) => (\n\tstate: StoreState,\n) => {\n\tconst room = state.rooms.active[roomId]\n\tconst messages = Object.values(room.messages).sort(byCreatedAt)\n\treturn messages[0] || null\n}\n\nconst getProps = createSelector(\n\tgetRoom,\n\tgetRoomMessages,\n\tgetAuth,\n\t(room, messages, auth) => {\n\t\treturn {\n\t\t\tauth,\n\t\t\troom,\n\t\t\tmessages,\n\t\t\tisLoading: !room,\n\t\t}\n\t},\n)\n\nexport default getProps\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Conversation from '../components/Conversation'\nimport Room from '../components/Room'\n\nimport { trySendMessage, tryFetchMoreMessages } from '../actions/rooms'\nimport getProps from '../selectors/room'\n\ninterface State {\n\tloadMoreVisible: boolean | null\n}\n\ninterface Props {\n\tauth: Auth\n\troom: RoomItem | undefined\n\tmatch: any\n\tisLoading: boolean\n\tmessages: Message[]\n\ttrySendMessage: (text: string, roomId: string, status?: boolean) => void\n\ttryFetchMoreMessages: (roomId: string) => void\n}\n\nclass RoomContainer extends Component<Props, State> {\n\tmessagesEnd: any = null\n\tmessagesContainer: HTMLElement | null = null\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tloadMoreVisible: null,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.scrollToBottom()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\t// scroll management\n\t\tif (prevProps.messages.length === 0 && this.props.messages.length > 0) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.room &&\n\t\t\tthis.props.room &&\n\t\t\tprevProps.room.id !== this.props.room.id\n\t\t) {\n\t\t\tthis.scrollToBottom()\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.messages.length !== this.props.messages.length &&\n\t\t\tprevProps.messages.length > 0 &&\n\t\t\tthis.props.messages.length > 0\n\t\t) {\n\t\t\tconst previousLastMessage = prevProps.messages.slice(-1)[0]\n\t\t\tconst currentLastMessage = this.props.messages.slice(-1)[0]\n\t\t\tif (\n\t\t\t\tpreviousLastMessage.id !== currentLastMessage.id &&\n\t\t\t\t!!currentLastMessage &&\n\t\t\t\tcurrentLastMessage.sender.uid === this.props.auth.uid\n\t\t\t) {\n\t\t\t\t// last message was ours, scroll to the bottom\n\t\t\t\tthis.scrollToBottom()\n\t\t\t} else if (this.messagesContainer) {\n\t\t\t\t// last message is not ours, lets check scroll\n\t\t\t\tconst { scrollHeight, scrollTop, clientHeight } = this.messagesContainer\n\n\t\t\t\t// if our scroll is around bottom 2 messages, scroll to bottom pls\n\t\t\t\tif (Math.abs(clientHeight - (scrollHeight - scrollTop - 45)) < 45) {\n\t\t\t\t\tthis.scrollToBottom()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tscrollToBottom = () => {\n\t\tif (this.messagesEnd) {\n\t\t\tthis.messagesEnd.scrollIntoView({ behavior: 'auto' })\n\t\t}\n\t}\n\n\thandleLoadMoreVisibilityChange = (isVisible: any) => {\n\t\tconst { room } = this.props\n\t\tif (isVisible && this.state.loadMoreVisible === false && room) {\n\t\t\tconsole.log('load more messages')\n\t\t\tthis.props.tryFetchMoreMessages(room.id)\n\t\t}\n\n\t\tthis.setState({\n\t\t\tloadMoreVisible: isVisible,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { room, messages, isLoading } = this.props\n\n\t\treturn (\n\t\t\t<Room room={room} isLoading={isLoading}>\n\t\t\t\t<Conversation\n\t\t\t\t\troom={room}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tonLoadMoreVisibilityChange={this.handleLoadMoreVisibilityChange}\n\t\t\t\t\tgetMessagesRef={ref => (this.messagesContainer = ref)}\n\t\t\t\t\tgetBottomAnchorRef={ref => (this.messagesEnd = ref)}\n\t\t\t\t/>\n\t\t\t</Room>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: any) =>\n\tgetProps(state, ownProps)\nexport default connect(\n\tmapStateToProps,\n\t{ trySendMessage, tryFetchMoreMessages },\n)(RoomContainer)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, Input, Typography } from 'antd'\nimport { tryCreateRoom, RoomData } from '../actions/rooms'\n\nconst { TextArea } = Input\nconst { Text } = Typography\n\nconst TextWrap = styled.div`\n\tmargin-top: 5px;\n\tmargin-bottom: 5px;\n`\n\ninterface Props {\n\tisOpen: boolean;\n\thandleClose: () => void;\n\ttryCreateRoom: (roomData: RoomData, showCreateError?: any) => Promise<any>;\n\tauth: Auth;\n}\n\ninterface State {\n\troomName: string;\n\tdescription: string;\n}\n\nclass CreateChatDialog extends Component<Props, State> {\n\tstate = {\n\t\troomName: '',\n\t\tdescription: '',\n\t}\n\n\thandleChange = (e: any) => {\n\t\tconsole.log(e.target.name)\n\t\t// @ts-ignore\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value,\n\t\t})\n\t}\n\n\thandleSubmit = () => {\n\t\tconst { uid, displayName: userDisplayName } = this.props.auth\n\t\tif (uid) {\n\t\t\tconsole.log('Create this room pls')\n\t\t\tconst roomName = this.state.roomName\n\t\t\tif (roomName && roomName.length > 0) {\n\t\t\t\t// this.setState({ error: '' })\n\t\t\t\tconst room = {\n\t\t\t\t\tname: roomName,\n\t\t\t\t\tpeople: {\n\t\t\t\t\t\tid: uid,\n\t\t\t\t\t\tname: userDisplayName,\n\t\t\t\t\t\tunread: 0,\n\t\t\t\t\t\tlastRead: 0,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tthis.props.tryCreateRoom(room)\n\t\t\t\tthis.props.handleClose()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Create Room\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.handleSubmit}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Name:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"roomName\"\n\t\t\t\t\tvalue={this.state.roomName}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<TextWrap>\n\t\t\t\t\t<Text>Description:</Text>\n\t\t\t\t</TextWrap>\n\t\t\t\t<TextArea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trows={4}\n\t\t\t\t/>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauth: state.auth,\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryCreateRoom },\n)(CreateChatDialog)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Modal, List, Avatar, Button } from 'antd'\n\nimport { tryJoinRoom } from '../actions/rooms'\n\nconst Label = styled.div`\n\tpadding: 10px;\n`\n\ninterface RoomWithAvailability extends RoomItem {\n\tcanJoin: boolean\n}\n\ninterface Props {\n\tisOpen: boolean\n\thandleClose: () => void\n\ttryJoinRoom: (roomId: string) => void\n\tauth: Auth\n\troomList: Array<RoomWithAvailability>\n}\n\ninterface State {\n\troomName: string\n\tdescription: string\n}\n\nclass BrowseRoomsDialog extends Component<Props, State> {\n\thandleJoinRoom = (room: RoomWithAvailability) => {\n\t\tif (!room.canJoin) {\n\t\t\tconsole.log('redirect to that room')\n\t\t\tthis.props.handleClose()\n\t\t\treturn\n\t\t}\n\n\t\tthis.props.tryJoinRoom(room.id)\n\t\t// this.props.handleClose()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttitle=\"Browse Rooms\"\n\t\t\t\tvisible={this.props.isOpen}\n\t\t\t\tonOk={this.props.handleClose}\n\t\t\t\tonCancel={this.props.handleClose}\n\t\t\t\tokButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tcancelButtonProps={{ disabled: !this.props.auth.uid }}\n\t\t\t\tbodyStyle={{ maxHeight: 450, overflowY: 'scroll' }}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tdataSource={this.props.roomList}\n\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t<List.Item key={item.id}>\n\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\tavatar={item.avatarUrl ? <Avatar src={item.avatarUrl} /> : null}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdescription={'TODO room descriptions'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{item.canJoin ? (\n\t\t\t\t\t\t\t\t\t<Button onClick={() => this.handleJoinRoom(item)}>\n\t\t\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Label>Active</Label>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t</List>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => {\n\tconst { available, active } = state.rooms\n\tconst roomList = Object.values(available).map(room => {\n\t\tconst canJoin =\n\t\t\tObject.values(active).find(item => item.id === room.id) === undefined\n\t\treturn {\n\t\t\t...room,\n\t\t\tcanJoin,\n\t\t}\n\t})\n\treturn {\n\t\troomList,\n\t\tauth: state.auth,\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ tryJoinRoom },\n)(BrowseRoomsDialog)\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Icon } from 'antd'\n\nimport RoomContainer from './Room'\nimport CreateChatDialog from '../components/CreateChatDialog'\nimport BrowseRoomsDialog from '../components/BrowseRoomsDialog'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\nimport { initAuth } from '../actions/auth'\nimport { initSlacker } from '../actions/rooms'\n\nimport '../styles/index.css'\n\nconst { Sider } = Layout\n\nconst LogoWrap = styled.div`\n\ttext-align: center;\n\tpadding: 10px;\n\theight: 64px;\n\tborder-bottom: 1px solid grey;\n`\n\nconst Logo = styled.img`\n\theight: 100%;\n`\n\nconst RoomButtons = styled.div`\n\tpadding: 10px;\n\tcolor: rgba(255, 255, 255, 0.65);\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`\n\nconst MenuButton = styled.button`\n\tfont-size: 16px;\n\tbackground: none;\n\tborder: none;\n\t-webkit-transition: color 0.5s;\n\ttransition: color 0.5s;\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: #fff;\n\t}\n`\n\nconst Content = styled.div`\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\ninterface Props {\n\tinitAuth: () => void\n\tinitSlacker: () => void\n\tauth: Auth\n\tactiveRooms: RoomItem[]\n\tavailableRooms: RoomItem[]\n\thistory: any\n\tlocation: {\n\t\tpathname: any\n\t}\n}\n\ninterface State {\n\topenDialog: string | false\n}\n\nclass App extends Component<Props, State> {\n\tstate: State = {\n\t\topenDialog: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initAuth()\n\t}\n\n\tcomponentDidUpdate(prevProps: Props) {\n\t\tconst { location, activeRooms, history } = this.props\n\t\tif (\n\t\t\tlocation.pathname === '/' &&\n\t\t\tprevProps.activeRooms.length === 0 &&\n\t\t\tactiveRooms.length !== 0\n\t\t) {\n\t\t\thistory.push(`/r/${activeRooms[0].id}`)\n\t\t}\n\n\t\tif (!prevProps.auth.uid && this.props.auth.uid) {\n\t\t\tthis.props.initSlacker()\n\t\t}\n\t}\n\n\thandleCloseDialog = () => {\n\t\tthis.setState({\n\t\t\topenDialog: false,\n\t\t})\n\t}\n\n\thandleOpenDialog = (dialogName: string) => {\n\t\tthis.setState({\n\t\t\topenDialog: dialogName,\n\t\t})\n\t}\n\n\thandleRoomSelect = ({ key }: { key: string }) => {\n\t\tthis.props.history.push(key)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout style={{ height: '100%' }}>\n\t\t\t\t<Sider\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\theight: '100vh',\n\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<LogoWrap>\n\t\t\t\t\t\t<Logo src=\"fox.png\" />\n\t\t\t\t\t</LogoWrap>\n\n\t\t\t\t\t<RoomButtons>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('browseRooms')}>\n\t\t\t\t\t\t\t<span>Rooms:</span>\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<MenuButton onClick={() => this.handleOpenDialog('createRoom')}>\n\t\t\t\t\t\t\t<Icon type=\"plus-circle\" />\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t</RoomButtons>\n\t\t\t\t\t<CreateChatDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'createRoom'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<BrowseRoomsDialog\n\t\t\t\t\t\tisOpen={this.state.openDialog === 'browseRooms'}\n\t\t\t\t\t\thandleClose={this.handleCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\t\tonSelect={this.handleRoomSelect}\n\t\t\t\t\t\tselectedKeys={[this.props.location.pathname]}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.props.activeRooms.map(room => (\n\t\t\t\t\t\t\t<Menu.Item key={`/r/${room.id}`}>\n\t\t\t\t\t\t\t\t<span className=\"nav-text\"># {room.name}</span>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout style={{ marginLeft: 200, background: '#fff' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path={'/r/:roomId'} component={RoomContainer} />\n\t\t\t\t\t\t<Route path={'/'}>\n\t\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t\t{this.props.activeRooms.length === 0 ? (\n\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div>No chat selected</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n\tauth: state.auth,\n\tactiveRooms: Object.values(state.rooms.active),\n\tavailableRooms: Object.values(state.rooms.available),\n})\n\nexport default connect(\n\tmapStateToProps,\n\t{ initAuth, initSlacker },\n)(App)\n","import * as types from '../constants/ActionTypes'\n\ninterface RoomsState {\n\tactive: {\n\t\t[key: string]: RoomItem\n\t}\n\tavailable: {\n\t\t[key: string]: RoomItem\n\t}\n}\n\nconst defaultState: RoomsState = {\n\tactive: {},\n\tavailable: {},\n}\n\nexport default (state: RoomsState = defaultState, action: any) => {\n\tswitch (action.type) {\n\t\tcase types.UPDATE_ROOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: { ...state.active, [action.room.id]: action.room },\n\t\t\t}\n\t\tcase types.ACTIVE_ROOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: { ...state.active, [action.room.id]: action.room },\n\t\t\t}\n\n\t\tcase types.UPDATE_AVAILABLE_ROOMS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tavailable: {\n\t\t\t\t\t...action.rooms.reduce(\n\t\t\t\t\t\t(acc: any, value: RoomItem) => ({\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t[value.id]: value,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t{},\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t}\n\n\t\tcase types.SEND_MESSAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...[state.active[action.roomId]],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.active[action.roomId].messages,\n\t\t\t\t\t\t\t[action.message.id]: action.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tcase types.UPDATE_MESSAGES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: {\n\t\t\t\t\t...state.active,\n\t\t\t\t\t[action.roomId]: {\n\t\t\t\t\t\t...state.active[action.roomId],\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\t...state.active[action.roomId].messages,\n\t\t\t\t\t\t\t...action.messages.reduce(\n\t\t\t\t\t\t\t\t(acc: any, message: Message) => ({\n\t\t\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t\t\t[message.id]: message,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import authReducer from '../reducers/auth'\nimport roomsReducer from '../reducers/rooms'\nimport redirectReducer from '../reducers/redirect'\nimport { combineReducers } from 'redux'\n\nconst reducers = combineReducers({\n\tauth: authReducer,\n\trooms: roomsReducer,\n\tredirect: redirectReducer,\n})\n\nexport default reducers\n","export default (state = {}, action: any) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        uid: action.uid,\n        ...action.userData,\n      };\n    case \"LOGOUT\":\n      return {};\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action: any) => {\n\tswitch (action.type) {\n\t\tcase 'REDIRECT_TO':\n\t\t\treturn {\n\t\t\t\tredirectTo: action.redirectTo,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { put, select, takeEvery, call, fork } from 'redux-saga/effects'\nimport { AnyAction } from 'redux'\nimport database, { rsf } from '../firebase/firebase'\nimport * as types from '../constants/ActionTypes'\nimport { showError, updateRoom, syncMessages } from '../actions/rooms'\nimport { CollectionReference, QuerySnapshot } from '@firebase/firestore-types'\nimport { makeGetEarliestMessageForRoomId } from '../selectors/room'\n\nexport function* updateRoomPresences() {\n\tconst auth = yield select(state => state.auth)\n\tconst { uid, ...userData } = auth\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) => {\n\t\t\tuserRoomIds.push(userRoomDoc.id)\n\t\t})\n\n\t\tfor (var roomId in userRoomIds) {\n\t\t\tyield call(\n\t\t\t\t// @ts-ignore\n\t\t\t\trsf.firestore.setDocument,\n\t\t\t\t`rooms/${roomId}/people/${auth.uid}`,\n\t\t\t\t{\n\t\t\t\t\tid: auth.uid,\n\t\t\t\t\t...userData,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport function* joinRoom(action: AnyAction) {\n\tconst { roomId } = action\n\tconst { uid, displayName, photoURL } = yield select(state => state.auth)\n\tconst roomRef = database.doc(`rooms/${roomId}`)\n\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\tconst room = { id: roomDoc.id, ...roomDoc.data() } as RoomItem\n\n\tif (!room || !roomDoc.exists) {\n\t\tyield put(showError('Room not found!'))\n\t\treturn\n\t} else if (\n\t\troom.people &&\n\t\troom.people.find((person: Person) => person.id === uid)\n\t) {\n\t\t// if we are already in this room then\n\t\t// history.push(`room/${data.roomName}`);\n\t\t// return i guess ?\n\t\treturn\n\t} else {\n\t\t// we should add ourselves to this room\n\n\t\tconst person = {\n\t\t\tname: displayName,\n\t\t\tphotoURL: photoURL,\n\t\t\tid: uid,\n\t\t\tunread: 0,\n\t\t\tlastRead: 0,\n\t\t}\n\n\t\t// TODO figure wtf is wrong here\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`rooms/${roomId}/people/${person.id}`,\n\t\t\tperson,\n\t\t)\n\n\t\tyield call(\n\t\t\t// @ts-ignore\n\t\t\trsf.firestore.setDocument,\n\t\t\t`users/${person.id}/rooms/${roomId}`,\n\t\t\t{ roomName: room.name },\n\t\t)\n\n\t\t// fetch full room and subscribe\n\t\tyield call(fetchRoom, roomId)\n\t}\n}\n\nexport function* fetchMessages(roomRef: any, cursor?: any) {\n\tconst messages: any = {}\n\n\tlet messagePage = roomRef\n\t\t.collection('messages')\n\t\t.orderBy('createdAt', 'desc')\n\t\t.limit(35) as CollectionReference\n\n\tif (cursor) {\n\t\tmessagePage = messagePage.startAfter(cursor) as CollectionReference\n\t}\n\n\tconst messagesQuery: QuerySnapshot = yield call(\n\t\trsf.firestore.getCollection,\n\t\tmessagePage,\n\t)\n\n\tmessagesQuery.forEach((messageDoc: any) => {\n\t\tmessages[messageDoc.id] = { id: messageDoc.id, ...messageDoc.data() }\n\t})\n\n\treturn messages\n}\n\nexport function* fetchRoom(roomId: string) {\n\tconsole.log('try fetch room ', roomId)\n\t// fetch active room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\t// if we have such room\n\tif (roomDoc.exists) {\n\t\tconst room = roomDoc.data()\n\t\tconst people: any[] = []\n\n\t\t// get room's people\n\t\tconst peopleQuery = yield call(\n\t\t\trsf.firestore.getCollection,\n\t\t\troomRef.collection('people'),\n\t\t)\n\t\tpeopleQuery.forEach((peopleDoc: any) => {\n\t\t\tpeople.push({ id: peopleDoc.id, ...peopleDoc.data() })\n\t\t})\n\n\t\t// get room's messages first page\n\t\tconst messages = yield call(fetchMessages, roomRef)\n\n\t\tyield put(\n\t\t\tupdateRoom({\n\t\t\t\tid: roomRef.id,\n\t\t\t\tname: room ? room.name : 'Error',\n\t\t\t\tpeople,\n\t\t\t\tmessages,\n\t\t\t\tmessageCount: messages.length,\n\t\t\t\tcanFetchMore: messages.length === 35,\n\t\t\t}),\n\t\t)\n\n\t\tyield call(subscribeToLastMessage, roomRef)\n\t}\n}\n\nexport function* subscribeToLastMessage(\n\troomRef: firebase.firestore.DocumentReference,\n) {\n\t// subscribe to latest message\n\tconst newestMessage = roomRef\n\t\t.collection('messages')\n\t\t.orderBy('createdAt', 'desc')\n\t\t.limit(1) as CollectionReference\n\n\t// TODO merge this with other messages to save on reads\n\tyield fork(rsf.firestore.syncCollection, newestMessage, {\n\t\tsuccessActionCreator: (snapshot: any) => syncMessages(snapshot, roomRef.id),\n\t})\n}\n\nexport function* fetchMoreMessages(action: AnyAction) {\n\tconst { roomId } = action\n\tconsole.log('try fetch room ', roomId)\n\t// fetch active room from firestore\n\tconst roomRef = database.collection('rooms').doc(roomId)\n\tconst roomDoc = yield call(rsf.firestore.getDocument, roomRef)\n\n\tif (roomDoc.exists) {\n\t\t// find oldest message\n\t\tconst getEarliestMessageInRoom = makeGetEarliestMessageForRoomId(roomId)\n\t\tconst earliestMessage = yield select(getEarliestMessageInRoom)\n\n\t\tconsole.log({ earliestMessage })\n\n\t\t// fetch next page after that message\n\t}\n}\n\nfunction* fetchMoreMessagesListener() {\n\tyield takeEvery(types.FETCH_MESSAGES_REQUEST, fetchMoreMessages)\n}\n\nfunction* joinRoomListener() {\n\tyield takeEvery(types.JOIN_ROOM_SAGA, joinRoom)\n}\n\nfunction* updateRoomPresencesListener() {\n\tyield takeEvery(types.UPDATE_ROOM_PRESENCES, updateRoomPresences)\n}\n\nexport default [\n\tjoinRoomListener(),\n\tupdateRoomPresencesListener(),\n\tfetchMoreMessagesListener(),\n]\n","import { put, select, takeLatest, fork, call } from 'redux-saga/effects'\nimport database, { firebase, rsf } from '../firebase/firebase'\nimport { availableRooms } from '../actions/rooms'\nimport * as types from '../constants/ActionTypes'\nimport { fetchRoom } from './roomSagas'\n\n// worker Saga\nfunction* initSlacker(action: any) {\n\tconst auth = yield select(state => state.auth)\n\n\tif (!auth.uid) {\n\t\tconsole.log('no auth!')\n\t\treturn\n\t}\n\n\t// fetch all rooms\n\tconst roomsPromise = database.collection('rooms').get()\n\n\tconst roomsQuery: firebase.firestore.QuerySnapshot = yield roomsPromise\n\tconst rooms: RoomItem[] = []\n\troomsQuery.forEach(doc => {\n\t\tconst room = {\n\t\t\tid: doc.id,\n\t\t\t...doc.data(),\n\t\t}\n\t\t// @ts-ignore\n\t\trooms.push(room)\n\t})\n\n\tyield put(availableRooms(rooms))\n\tconst generalRoom = rooms.find(room => room.name === 'general')\n\n\t// get user rooms\n\tconst userRoomsQuery = yield call(\n\t\trsf.firestore.getCollection,\n\t\t`users/${auth.uid}/rooms`,\n\t)\n\n\tif (!userRoomsQuery.empty) {\n\t\tconst userRoomIds: string[] = []\n\t\tuserRoomsQuery.forEach((userRoomDoc: any) =>\n\t\t\tuserRoomIds.push(userRoomDoc.id),\n\t\t)\n\n\t\t// fetch each active room\n\t\tfor (let roomId of userRoomIds) {\n\t\t\tyield fork(fetchRoom, roomId)\n\t\t}\n\n\t\t// if no general room, join that as well\n\t\tif (generalRoom && !userRoomIds.includes(generalRoom.id)) {\n\t\t\tyield put({\n\t\t\t\ttype: types.JOIN_ROOM_SAGA,\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t} else {\n\t\tif (generalRoom) {\n\t\t\tyield put({\n\t\t\t\ttype: types.JOIN_ROOM_SAGA,\n\t\t\t\troomId: generalRoom.id,\n\t\t\t\troom: generalRoom,\n\t\t\t})\n\t\t}\n\t}\n}\n\nfunction* initSlackerListner() {\n\tyield takeLatest(types.INIT_SLACKER_SAGA, initSlacker)\n}\n\nexport default initSlackerListner\n","import { all } from 'redux-saga/effects'\nimport initSaga from './initSaga'\nimport roomSagas from './roomSagas'\n\nexport default function* rootSaga() {\n\tyield all([initSaga(), ...roomSagas])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport reducers from '../reducers'\n\nimport mySaga from '../sagas/rootSaga'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default () => {\n\tconst store = createStore(\n\t\treducers,\n\t\tcomposeEnhancers(applyMiddleware(thunk, sagaMiddleware)),\n\t)\n\n\tsagaMiddleware.run(mySaga)\n\n\treturn store\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\n\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\nconst jsx = (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<Route path={'/'} component={App} />\n\t\t</Router>\n\t</Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('container'))\n"],"sourceRoot":""}